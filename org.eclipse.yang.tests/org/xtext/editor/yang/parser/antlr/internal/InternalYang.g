/*
* generated by Xtext
*/
grammar InternalYang;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.editor.yang.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.editor.yang.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.xtext.editor.yang.services.YangGrammarAccess;

}

@parser::members {

 	private YangGrammarAccess grammarAccess;
 	
    public InternalYangParser(TokenStream input, IAstFactory factory, YangGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/xtext/editor/yang/parser/antlr/internal/InternalYang.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "YangFile";	
   	}
   	
   	@Override
   	protected YangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleYangFile
entryRuleYangFile returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getYangFileRule(), currentNode); }
	 iv_ruleYangFile=ruleYangFile 
	 { $current=$iv_ruleYangFile.current; } 
	 EOF 
;

// Rule YangFile
ruleYangFile returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getYangFileAccess().getModuleParserRuleCall_0(), currentNode); 
    }
    this_Module_0=ruleModule
    { 
        $current = $this_Module_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getYangFileAccess().getSubModuleParserRuleCall_1(), currentNode); 
    }
    this_SubModule_1=ruleSubModule
    { 
        $current = $this_SubModule_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModuleRule(), currentNode); }
	 iv_ruleModule=ruleModule 
	 { $current=$iv_ruleModule.current; } 
	 EOF 
;

// Rule Module
ruleModule returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'module' 
    {
        createLeafNode(grammarAccess.getModuleAccess().getModuleKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModuleAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModuleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModuleAccess().getStatementsModuleStatementParserRuleCall_3_0(), currentNode); 
	    }
		lv_statements_3_0=ruleModuleStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModuleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"statements",
	        		lv_statements_3_0, 
	        		"ModuleStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleModuleStatement
entryRuleModuleStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModuleStatementRule(), currentNode); }
	 iv_ruleModuleStatement=ruleModuleStatement 
	 { $current=$iv_ruleModuleStatement.current; } 
	 EOF 
;

// Rule ModuleStatement
ruleModuleStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getNamespaceStatementParserRuleCall_0(), currentNode); 
    }
    this_NamespaceStatement_0=ruleNamespaceStatement
    { 
        $current = $this_NamespaceStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getPrefixStatementParserRuleCall_1(), currentNode); 
    }
    this_PrefixStatement_1=rulePrefixStatement
    { 
        $current = $this_PrefixStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getYangVersionStatementParserRuleCall_2(), currentNode); 
    }
    this_YangVersionStatement_2=ruleYangVersionStatement
    { 
        $current = $this_YangVersionStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getOrganizationStatementParserRuleCall_3(), currentNode); 
    }
    this_OrganizationStatement_3=ruleOrganizationStatement
    { 
        $current = $this_OrganizationStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getContactStatementParserRuleCall_4(), currentNode); 
    }
    this_ContactStatement_4=ruleContactStatement
    { 
        $current = $this_ContactStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getDescriptionStatementParserRuleCall_5(), currentNode); 
    }
    this_DescriptionStatement_5=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getImportStatementParserRuleCall_6(), currentNode); 
    }
    this_ImportStatement_6=ruleImportStatement
    { 
        $current = $this_ImportStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getIncludeStatementParserRuleCall_7(), currentNode); 
    }
    this_IncludeStatement_7=ruleIncludeStatement
    { 
        $current = $this_IncludeStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getRevisionStatementParserRuleCall_8(), currentNode); 
    }
    this_RevisionStatement_8=ruleRevisionStatement
    { 
        $current = $this_RevisionStatement_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getExtensionStatementParserRuleCall_9(), currentNode); 
    }
    this_ExtensionStatement_9=ruleExtensionStatement
    { 
        $current = $this_ExtensionStatement_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getFeatureStatementParserRuleCall_10(), currentNode); 
    }
    this_FeatureStatement_10=ruleFeatureStatement
    { 
        $current = $this_FeatureStatement_10.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getIdentityStatementParserRuleCall_11(), currentNode); 
    }
    this_IdentityStatement_11=ruleIdentityStatement
    { 
        $current = $this_IdentityStatement_11.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getTypedefStatementParserRuleCall_12(), currentNode); 
    }
    this_TypedefStatement_12=ruleTypedefStatement
    { 
        $current = $this_TypedefStatement_12.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getGroupingStatementParserRuleCall_13(), currentNode); 
    }
    this_GroupingStatement_13=ruleGroupingStatement
    { 
        $current = $this_GroupingStatement_13.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getDatadefStatementParserRuleCall_14(), currentNode); 
    }
    this_DatadefStatement_14=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_14.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getAugmentStatementParserRuleCall_15(), currentNode); 
    }
    this_AugmentStatement_15=ruleAugmentStatement
    { 
        $current = $this_AugmentStatement_15.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getRpcStatementParserRuleCall_16(), currentNode); 
    }
    this_RpcStatement_16=ruleRpcStatement
    { 
        $current = $this_RpcStatement_16.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getNotificationStatementParserRuleCall_17(), currentNode); 
    }
    this_NotificationStatement_17=ruleNotificationStatement
    { 
        $current = $this_NotificationStatement_17.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getDeviationStatementParserRuleCall_18(), currentNode); 
    }
    this_DeviationStatement_18=ruleDeviationStatement
    { 
        $current = $this_DeviationStatement_18.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModuleStatementAccess().getUnknownStatementParserRuleCall_19(), currentNode); 
    }
    this_UnknownStatement_19=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_19.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSubModule
entryRuleSubModule returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSubModuleRule(), currentNode); }
	 iv_ruleSubModule=ruleSubModule 
	 { $current=$iv_ruleSubModule.current; } 
	 EOF 
;

// Rule SubModule
ruleSubModule returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'submodule' 
    {
        createLeafNode(grammarAccess.getSubModuleAccess().getSubmoduleKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubModuleAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubModuleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getSubModuleAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubModuleAccess().getStatementsSubmoduleStatementParserRuleCall_3_0(), currentNode); 
	    }
		lv_statements_3_0=ruleSubmoduleStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubModuleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"statements",
	        		lv_statements_3_0, 
	        		"SubmoduleStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getSubModuleAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleSubmoduleStatement
entryRuleSubmoduleStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSubmoduleStatementRule(), currentNode); }
	 iv_ruleSubmoduleStatement=ruleSubmoduleStatement 
	 { $current=$iv_ruleSubmoduleStatement.current; } 
	 EOF 
;

// Rule SubmoduleStatement
ruleSubmoduleStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getYangVersionStatementParserRuleCall_0(), currentNode); 
    }
    this_YangVersionStatement_0=ruleYangVersionStatement
    { 
        $current = $this_YangVersionStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getOrganizationStatementParserRuleCall_1(), currentNode); 
    }
    this_OrganizationStatement_1=ruleOrganizationStatement
    { 
        $current = $this_OrganizationStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getContactStatementParserRuleCall_2(), currentNode); 
    }
    this_ContactStatement_2=ruleContactStatement
    { 
        $current = $this_ContactStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getDescriptionStatementParserRuleCall_3(), currentNode); 
    }
    this_DescriptionStatement_3=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getImportStatementParserRuleCall_4(), currentNode); 
    }
    this_ImportStatement_4=ruleImportStatement
    { 
        $current = $this_ImportStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getIncludeStatementParserRuleCall_5(), currentNode); 
    }
    this_IncludeStatement_5=ruleIncludeStatement
    { 
        $current = $this_IncludeStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getRevisionStatementParserRuleCall_6(), currentNode); 
    }
    this_RevisionStatement_6=ruleRevisionStatement
    { 
        $current = $this_RevisionStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getBelongsToStatementParserRuleCall_7(), currentNode); 
    }
    this_BelongsToStatement_7=ruleBelongsToStatement
    { 
        $current = $this_BelongsToStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getExtensionStatementParserRuleCall_8(), currentNode); 
    }
    this_ExtensionStatement_8=ruleExtensionStatement
    { 
        $current = $this_ExtensionStatement_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getFeatureStatementParserRuleCall_9(), currentNode); 
    }
    this_FeatureStatement_9=ruleFeatureStatement
    { 
        $current = $this_FeatureStatement_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getIdentityStatementParserRuleCall_10(), currentNode); 
    }
    this_IdentityStatement_10=ruleIdentityStatement
    { 
        $current = $this_IdentityStatement_10.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getTypedefStatementParserRuleCall_11(), currentNode); 
    }
    this_TypedefStatement_11=ruleTypedefStatement
    { 
        $current = $this_TypedefStatement_11.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getGroupingStatementParserRuleCall_12(), currentNode); 
    }
    this_GroupingStatement_12=ruleGroupingStatement
    { 
        $current = $this_GroupingStatement_12.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getDatadefStatementParserRuleCall_13(), currentNode); 
    }
    this_DatadefStatement_13=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_13.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getAugmentStatementParserRuleCall_14(), currentNode); 
    }
    this_AugmentStatement_14=ruleAugmentStatement
    { 
        $current = $this_AugmentStatement_14.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getRpcStatementParserRuleCall_15(), currentNode); 
    }
    this_RpcStatement_15=ruleRpcStatement
    { 
        $current = $this_RpcStatement_15.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getNotificationStatementParserRuleCall_16(), currentNode); 
    }
    this_NotificationStatement_16=ruleNotificationStatement
    { 
        $current = $this_NotificationStatement_16.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getDeviationStatementParserRuleCall_17(), currentNode); 
    }
    this_DeviationStatement_17=ruleDeviationStatement
    { 
        $current = $this_DeviationStatement_17.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubmoduleStatementAccess().getUnknownStatementParserRuleCall_18(), currentNode); 
    }
    this_UnknownStatement_18=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_18.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleDatadefStatement
entryRuleDatadefStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDatadefStatementRule(), currentNode); }
	 iv_ruleDatadefStatement=ruleDatadefStatement 
	 { $current=$iv_ruleDatadefStatement.current; } 
	 EOF 
;

// Rule DatadefStatement
ruleDatadefStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getDatadefStatementAccess().getContainerStatementParserRuleCall_0(), currentNode); 
    }
    this_ContainerStatement_0=ruleContainerStatement
    { 
        $current = $this_ContainerStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDatadefStatementAccess().getLeafStatementParserRuleCall_1(), currentNode); 
    }
    this_LeafStatement_1=ruleLeafStatement
    { 
        $current = $this_LeafStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDatadefStatementAccess().getLeafListStatementParserRuleCall_2(), currentNode); 
    }
    this_LeafListStatement_2=ruleLeafListStatement
    { 
        $current = $this_LeafListStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDatadefStatementAccess().getListStatementParserRuleCall_3(), currentNode); 
    }
    this_ListStatement_3=ruleListStatement
    { 
        $current = $this_ListStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDatadefStatementAccess().getChoiceStatementParserRuleCall_4(), currentNode); 
    }
    this_ChoiceStatement_4=ruleChoiceStatement
    { 
        $current = $this_ChoiceStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDatadefStatementAccess().getAnyxmlStatementParserRuleCall_5(), currentNode); 
    }
    this_AnyxmlStatement_5=ruleAnyxmlStatement
    { 
        $current = $this_AnyxmlStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDatadefStatementAccess().getUsesStatementParserRuleCall_6(), currentNode); 
    }
    this_UsesStatement_6=ruleUsesStatement
    { 
        $current = $this_UsesStatement_6.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleYangVersionStatement
entryRuleYangVersionStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getYangVersionStatementRule(), currentNode); }
	 iv_ruleYangVersionStatement=ruleYangVersionStatement 
	 { $current=$iv_ruleYangVersionStatement.current; } 
	 EOF 
;

// Rule YangVersionStatement
ruleYangVersionStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'yang-version' 
    {
        createLeafNode(grammarAccess.getYangVersionStatementAccess().getYangVersionKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getYangVersionStatementAccess().getVersionSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_version_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getYangVersionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"version",
	        		lv_version_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getYangVersionStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getYangVersionStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getYangVersionStatementAccess().getYangversionunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_yangversionunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getYangVersionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"yangversionunknownstatements",
	        		lv_yangversionunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getYangVersionStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleOrganizationStatement
entryRuleOrganizationStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOrganizationStatementRule(), currentNode); }
	 iv_ruleOrganizationStatement=ruleOrganizationStatement 
	 { $current=$iv_ruleOrganizationStatement.current; } 
	 EOF 
;

// Rule OrganizationStatement
ruleOrganizationStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'organization' 
    {
        createLeafNode(grammarAccess.getOrganizationStatementAccess().getOrganizationKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOrganizationStatementAccess().getOrganizationSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_organization_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOrganizationStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"organization",
	        		lv_organization_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getOrganizationStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getOrganizationStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOrganizationStatementAccess().getOrganizationunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_organizationunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOrganizationStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"organizationunknownstatements",
	        		lv_organizationunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getOrganizationStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleContactStatement
entryRuleContactStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContactStatementRule(), currentNode); }
	 iv_ruleContactStatement=ruleContactStatement 
	 { $current=$iv_ruleContactStatement.current; } 
	 EOF 
;

// Rule ContactStatement
ruleContactStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'contact' 
    {
        createLeafNode(grammarAccess.getContactStatementAccess().getContactKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContactStatementAccess().getContactSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_contact_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContactStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"contact",
	        		lv_contact_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getContactStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getContactStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContactStatementAccess().getContactunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_contactunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContactStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contactunknownstatements",
	        		lv_contactunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getContactStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleDescriptionStatement
entryRuleDescriptionStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDescriptionStatementRule(), currentNode); }
	 iv_ruleDescriptionStatement=ruleDescriptionStatement 
	 { $current=$iv_ruleDescriptionStatement.current; } 
	 EOF 
;

// Rule DescriptionStatement
ruleDescriptionStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'description' 
    {
        createLeafNode(grammarAccess.getDescriptionStatementAccess().getDescriptionKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDescriptionStatementAccess().getDescriptionSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_description_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDescriptionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"description",
	        		lv_description_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getDescriptionStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getDescriptionStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDescriptionStatementAccess().getDescriptionunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_descriptionunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDescriptionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"descriptionunknownstatements",
	        		lv_descriptionunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getDescriptionStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleReferenceStatement
entryRuleReferenceStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getReferenceStatementRule(), currentNode); }
	 iv_ruleReferenceStatement=ruleReferenceStatement 
	 { $current=$iv_ruleReferenceStatement.current; } 
	 EOF 
;

// Rule ReferenceStatement
ruleReferenceStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'reference' 
    {
        createLeafNode(grammarAccess.getReferenceStatementAccess().getReferenceKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getReferenceStatementAccess().getReferenceSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_reference_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getReferenceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"reference",
	        		lv_reference_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getReferenceStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getReferenceStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getReferenceStatementAccess().getReferenceunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_referenceunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getReferenceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"referenceunknownstatements",
	        		lv_referenceunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getReferenceStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleNamespaceStatement
entryRuleNamespaceStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNamespaceStatementRule(), currentNode); }
	 iv_ruleNamespaceStatement=ruleNamespaceStatement 
	 { $current=$iv_ruleNamespaceStatement.current; } 
	 EOF 
;

// Rule NamespaceStatement
ruleNamespaceStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'namespace' 
    {
        createLeafNode(grammarAccess.getNamespaceStatementAccess().getNamespaceKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNamespaceStatementAccess().getUriSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_uri_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamespaceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"uri",
	        		lv_uri_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getNamespaceStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getNamespaceStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNamespaceStatementAccess().getNamespaceunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_namespaceunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamespaceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"namespaceunknownstatements",
	        		lv_namespaceunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getNamespaceStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRulePrefixStatement
entryRulePrefixStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPrefixStatementRule(), currentNode); }
	 iv_rulePrefixStatement=rulePrefixStatement 
	 { $current=$iv_rulePrefixStatement.current; } 
	 EOF 
;

// Rule PrefixStatement
rulePrefixStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'prefix' 
    {
        createLeafNode(grammarAccess.getPrefixStatementAccess().getPrefixKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrefixStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrefixStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getPrefixStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getPrefixStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrefixStatementAccess().getPrefixunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_prefixunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrefixStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"prefixunknownstatements",
	        		lv_prefixunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPrefixStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleRequireInstanceStatement
entryRuleRequireInstanceStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRequireInstanceStatementRule(), currentNode); }
	 iv_ruleRequireInstanceStatement=ruleRequireInstanceStatement 
	 { $current=$iv_ruleRequireInstanceStatement.current; } 
	 EOF 
;

// Rule RequireInstanceStatement
ruleRequireInstanceStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'require-instance' 
    {
        createLeafNode(grammarAccess.getRequireInstanceStatementAccess().getRequireInstanceKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequireInstanceStatementAccess().getRequireSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_require_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequireInstanceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"require",
	        		lv_require_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getRequireInstanceStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getRequireInstanceStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRequireInstanceStatementAccess().getRequireunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_requireunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRequireInstanceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"requireunknownstatements",
	        		lv_requireunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRequireInstanceStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRulePathStatement
entryRulePathStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPathStatementRule(), currentNode); }
	 iv_rulePathStatement=rulePathStatement 
	 { $current=$iv_rulePathStatement.current; } 
	 EOF 
;

// Rule PathStatement
rulePathStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'path' 
    {
        createLeafNode(grammarAccess.getPathStatementAccess().getPathKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPathStatementAccess().getPathSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_path_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPathStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"path",
	        		lv_path_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getPathStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getPathStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPathStatementAccess().getPathunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_pathunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPathStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"pathunknownstatements",
	        		lv_pathunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPathStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRulePositionStatement
entryRulePositionStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPositionStatementRule(), currentNode); }
	 iv_rulePositionStatement=rulePositionStatement 
	 { $current=$iv_rulePositionStatement.current; } 
	 EOF 
;

// Rule PositionStatement
rulePositionStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'position' 
    {
        createLeafNode(grammarAccess.getPositionStatementAccess().getPositionKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPositionStatementAccess().getIntargSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_intarg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPositionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"intarg",
	        		lv_intarg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getPositionStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getPositionStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPositionStatementAccess().getPositionunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_positionunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPositionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"positionunknownstatements",
	        		lv_positionunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPositionStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleValueStatement
entryRuleValueStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValueStatementRule(), currentNode); }
	 iv_ruleValueStatement=ruleValueStatement 
	 { $current=$iv_ruleValueStatement.current; } 
	 EOF 
;

// Rule ValueStatement
ruleValueStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'value' 
    {
        createLeafNode(grammarAccess.getValueStatementAccess().getValueKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueStatementAccess().getIntargSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_intarg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"intarg",
	        		lv_intarg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getValueStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getValueStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueStatementAccess().getValueunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_valueunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"valueunknownstatements",
	        		lv_valueunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getValueStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleErrorAppTagStatement
entryRuleErrorAppTagStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getErrorAppTagStatementRule(), currentNode); }
	 iv_ruleErrorAppTagStatement=ruleErrorAppTagStatement 
	 { $current=$iv_ruleErrorAppTagStatement.current; } 
	 EOF 
;

// Rule ErrorAppTagStatement
ruleErrorAppTagStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'error-app-tag' 
    {
        createLeafNode(grammarAccess.getErrorAppTagStatementAccess().getErrorAppTagKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getErrorAppTagStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getErrorAppTagStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getErrorAppTagStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getErrorAppTagStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getErrorAppTagStatementAccess().getErroraunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_erroraunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getErrorAppTagStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"erroraunknownstatements",
	        		lv_erroraunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getErrorAppTagStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleErrorMessageStatement
entryRuleErrorMessageStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getErrorMessageStatementRule(), currentNode); }
	 iv_ruleErrorMessageStatement=ruleErrorMessageStatement 
	 { $current=$iv_ruleErrorMessageStatement.current; } 
	 EOF 
;

// Rule ErrorMessageStatement
ruleErrorMessageStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'error-message' 
    {
        createLeafNode(grammarAccess.getErrorMessageStatementAccess().getErrorMessageKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getErrorMessageStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getErrorMessageStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getErrorMessageStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getErrorMessageStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getErrorMessageStatementAccess().getErrormunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_errormunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getErrorMessageStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"errormunknownstatements",
	        		lv_errormunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getErrorMessageStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleUnitsStatement
entryRuleUnitsStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnitsStatementRule(), currentNode); }
	 iv_ruleUnitsStatement=ruleUnitsStatement 
	 { $current=$iv_ruleUnitsStatement.current; } 
	 EOF 
;

// Rule UnitsStatement
ruleUnitsStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'units' 
    {
        createLeafNode(grammarAccess.getUnitsStatementAccess().getUnitsKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitsStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitsStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getUnitsStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getUnitsStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnitsStatementAccess().getUnitsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_unitsunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnitsStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"unitsunknownstatements",
	        		lv_unitsunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getUnitsStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleDefaultStatement
entryRuleDefaultStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDefaultStatementRule(), currentNode); }
	 iv_ruleDefaultStatement=ruleDefaultStatement 
	 { $current=$iv_ruleDefaultStatement.current; } 
	 EOF 
;

// Rule DefaultStatement
ruleDefaultStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'default' 
    {
        createLeafNode(grammarAccess.getDefaultStatementAccess().getDefaultKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getDefaultStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getDefaultStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultStatementAccess().getDefaultunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_defaultunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"defaultunknownstatements",
	        		lv_defaultunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getDefaultStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleStatusStatement
entryRuleStatusStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStatusStatementRule(), currentNode); }
	 iv_ruleStatusStatement=ruleStatusStatement 
	 { $current=$iv_ruleStatusStatement.current; } 
	 EOF 
;

// Rule StatusStatement
ruleStatusStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'status' 
    {
        createLeafNode(grammarAccess.getStatusStatementAccess().getStatusKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStatusStatementAccess().getStatusSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_status_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStatusStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"status",
	        		lv_status_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getStatusStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getStatusStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStatusStatementAccess().getStatusunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_statusunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStatusStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"statusunknownstatements",
	        		lv_statusunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getStatusStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleRevisionDateStatement
entryRuleRevisionDateStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRevisionDateStatementRule(), currentNode); }
	 iv_ruleRevisionDateStatement=ruleRevisionDateStatement 
	 { $current=$iv_ruleRevisionDateStatement.current; } 
	 EOF 
;

// Rule RevisionDateStatement
ruleRevisionDateStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'revision-date' 
    {
        createLeafNode(grammarAccess.getRevisionDateStatementAccess().getRevisionDateKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRevisionDateStatementAccess().getDateSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_date_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRevisionDateStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"date",
	        		lv_date_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getRevisionDateStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getRevisionDateStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRevisionDateStatementAccess().getRevisiondateunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_revisiondateunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRevisionDateStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"revisiondateunknownstatements",
	        		lv_revisiondateunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRevisionDateStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleUniqueStatement
entryRuleUniqueStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUniqueStatementRule(), currentNode); }
	 iv_ruleUniqueStatement=ruleUniqueStatement 
	 { $current=$iv_ruleUniqueStatement.current; } 
	 EOF 
;

// Rule UniqueStatement
ruleUniqueStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'unique' 
    {
        createLeafNode(grammarAccess.getUniqueStatementAccess().getUniqueKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUniqueStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUniqueStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getUniqueStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getUniqueStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUniqueStatementAccess().getUniqueunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_uniqueunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUniqueStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"uniqueunknownstatements",
	        		lv_uniqueunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getUniqueStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleKeyStatement
entryRuleKeyStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getKeyStatementRule(), currentNode); }
	 iv_ruleKeyStatement=ruleKeyStatement 
	 { $current=$iv_ruleKeyStatement.current; } 
	 EOF 
;

// Rule KeyStatement
ruleKeyStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'key' 
    {
        createLeafNode(grammarAccess.getKeyStatementAccess().getKeyKeyword_0(), null); 
    }
(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getKeyStatementAccess().getArgSTRINGARGParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_arg_1_1=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKeyStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_1, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getKeyStatementAccess().getArgSTRINGARG2ParserRuleCall_1_0_1(), currentNode); 
	    }
		lv_arg_1_2=ruleSTRINGARG2		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKeyStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_2, 
	        		"STRINGARG2", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)(	';' 
    {
        createLeafNode(grammarAccess.getKeyStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getKeyStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getKeyStatementAccess().getKeyunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_keyunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKeyStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"keyunknownstatements",
	        		lv_keyunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getKeyStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleOrderedbyStatement
entryRuleOrderedbyStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOrderedbyStatementRule(), currentNode); }
	 iv_ruleOrderedbyStatement=ruleOrderedbyStatement 
	 { $current=$iv_ruleOrderedbyStatement.current; } 
	 EOF 
;

// Rule OrderedbyStatement
ruleOrderedbyStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'ordered-by' 
    {
        createLeafNode(grammarAccess.getOrderedbyStatementAccess().getOrderedByKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOrderedbyStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOrderedbyStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getOrderedbyStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getOrderedbyStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOrderedbyStatementAccess().getOrderedbyunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_orderedbyunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOrderedbyStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"orderedbyunknownstatements",
	        		lv_orderedbyunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getOrderedbyStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRulePresenceStatement
entryRulePresenceStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPresenceStatementRule(), currentNode); }
	 iv_rulePresenceStatement=rulePresenceStatement 
	 { $current=$iv_rulePresenceStatement.current; } 
	 EOF 
;

// Rule PresenceStatement
rulePresenceStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'presence' 
    {
        createLeafNode(grammarAccess.getPresenceStatementAccess().getPresenceKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPresenceStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPresenceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getPresenceStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getPresenceStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPresenceStatementAccess().getPresenceunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_presenceunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPresenceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"presenceunknownstatements",
	        		lv_presenceunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPresenceStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleMandatoryStatement
entryRuleMandatoryStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMandatoryStatementRule(), currentNode); }
	 iv_ruleMandatoryStatement=ruleMandatoryStatement 
	 { $current=$iv_ruleMandatoryStatement.current; } 
	 EOF 
;

// Rule MandatoryStatement
ruleMandatoryStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'mandatory' 
    {
        createLeafNode(grammarAccess.getMandatoryStatementAccess().getMandatoryKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMandatoryStatementAccess().getBoolargSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_boolarg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMandatoryStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"boolarg",
	        		lv_boolarg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getMandatoryStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getMandatoryStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMandatoryStatementAccess().getMandatoryunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_mandatoryunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMandatoryStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mandatoryunknownstatements",
	        		lv_mandatoryunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getMandatoryStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleConfigStatement
entryRuleConfigStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConfigStatementRule(), currentNode); }
	 iv_ruleConfigStatement=ruleConfigStatement 
	 { $current=$iv_ruleConfigStatement.current; } 
	 EOF 
;

// Rule ConfigStatement
ruleConfigStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'config' 
    {
        createLeafNode(grammarAccess.getConfigStatementAccess().getConfigKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConfigStatementAccess().getBoolargSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_boolarg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConfigStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"boolarg",
	        		lv_boolarg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getConfigStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getConfigStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConfigStatementAccess().getConfigunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_configunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConfigStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"configunknownstatements",
	        		lv_configunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getConfigStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleFractionDigitsStatement
entryRuleFractionDigitsStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFractionDigitsStatementRule(), currentNode); }
	 iv_ruleFractionDigitsStatement=ruleFractionDigitsStatement 
	 { $current=$iv_ruleFractionDigitsStatement.current; } 
	 EOF 
;

// Rule FractionDigitsStatement
ruleFractionDigitsStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'fraction-digits' 
    {
        createLeafNode(grammarAccess.getFractionDigitsStatementAccess().getFractionDigitsKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFractionDigitsStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFractionDigitsStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getFractionDigitsStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getFractionDigitsStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFractionDigitsStatementAccess().getFractiondigitsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_fractiondigitsunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFractionDigitsStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"fractiondigitsunknownstatements",
	        		lv_fractiondigitsunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getFractionDigitsStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleIfFeatureStatement
entryRuleIfFeatureStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIfFeatureStatementRule(), currentNode); }
	 iv_ruleIfFeatureStatement=ruleIfFeatureStatement 
	 { $current=$iv_ruleIfFeatureStatement.current; } 
	 EOF 
;

// Rule IfFeatureStatement
ruleIfFeatureStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'if-feature' 
    {
        createLeafNode(grammarAccess.getIfFeatureStatementAccess().getIfFeatureKeyword_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIfFeatureStatementAccess().getPrefSTRINGARGParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_pref_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIfFeatureStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pref",
	        		lv_pref_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getIfFeatureStatementAccess().getColonKeyword_1_1(), null); 
    }
)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getIfFeatureStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getIfFeatureStatementAccess().getIdentFeatureStatementCrossReference_2_0(), "ident"); 
	}

)
)(	';' 
    {
        createLeafNode(grammarAccess.getIfFeatureStatementAccess().getSemicolonKeyword_3_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getIfFeatureStatementAccess().getLeftCurlyBracketKeyword_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIfFeatureStatementAccess().getIffeatureunknownstatementsUnknownStatementParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_iffeatureunknownstatements_6_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIfFeatureStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"iffeatureunknownstatements",
	        		lv_iffeatureunknownstatements_6_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getIfFeatureStatementAccess().getRightCurlyBracketKeyword_3_1_2(), null); 
    }
)))
;





// Entry rule entryRuleBaseStatement
entryRuleBaseStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBaseStatementRule(), currentNode); }
	 iv_ruleBaseStatement=ruleBaseStatement 
	 { $current=$iv_ruleBaseStatement.current; } 
	 EOF 
;

// Rule BaseStatement
ruleBaseStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'base' 
    {
        createLeafNode(grammarAccess.getBaseStatementAccess().getBaseKeyword_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBaseStatementAccess().getPrefSTRINGARGParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_pref_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBaseStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pref",
	        		lv_pref_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getBaseStatementAccess().getColonKeyword_1_1(), null); 
    }
)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getBaseStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getBaseStatementAccess().getIdentIdentityStatementCrossReference_2_0(), "ident"); 
	}

)
)(	';' 
    {
        createLeafNode(grammarAccess.getBaseStatementAccess().getSemicolonKeyword_3_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getBaseStatementAccess().getLeftCurlyBracketKeyword_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBaseStatementAccess().getBaseunknownstatementsUnknownStatementParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_baseunknownstatements_6_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBaseStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"baseunknownstatements",
	        		lv_baseunknownstatements_6_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getBaseStatementAccess().getRightCurlyBracketKeyword_3_1_2(), null); 
    }
)))
;





// Entry rule entryRuleYinElementStatement
entryRuleYinElementStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getYinElementStatementRule(), currentNode); }
	 iv_ruleYinElementStatement=ruleYinElementStatement 
	 { $current=$iv_ruleYinElementStatement.current; } 
	 EOF 
;

// Rule YinElementStatement
ruleYinElementStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'yin-element' 
    {
        createLeafNode(grammarAccess.getYinElementStatementAccess().getYinElementKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getYinElementStatementAccess().getBoolargSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_boolarg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getYinElementStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"boolarg",
	        		lv_boolarg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getYinElementStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getYinElementStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getYinElementStatementAccess().getYinelementunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_yinelementunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getYinElementStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"yinelementunknownstatements",
	        		lv_yinelementunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getYinElementStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleMinElementsStatement
entryRuleMinElementsStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMinElementsStatementRule(), currentNode); }
	 iv_ruleMinElementsStatement=ruleMinElementsStatement 
	 { $current=$iv_ruleMinElementsStatement.current; } 
	 EOF 
;

// Rule MinElementsStatement
ruleMinElementsStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'min-elements' 
    {
        createLeafNode(grammarAccess.getMinElementsStatementAccess().getMinElementsKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMinElementsStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMinElementsStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getMinElementsStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getMinElementsStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMinElementsStatementAccess().getMinelementsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_minelementsunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMinElementsStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"minelementsunknownstatements",
	        		lv_minelementsunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getMinElementsStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleMaxElementsStatement
entryRuleMaxElementsStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMaxElementsStatementRule(), currentNode); }
	 iv_ruleMaxElementsStatement=ruleMaxElementsStatement 
	 { $current=$iv_ruleMaxElementsStatement.current; } 
	 EOF 
;

// Rule MaxElementsStatement
ruleMaxElementsStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'max-elements' 
    {
        createLeafNode(grammarAccess.getMaxElementsStatementAccess().getMaxElementsKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMaxElementsStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaxElementsStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getMaxElementsStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getMaxElementsStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMaxElementsStatementAccess().getMaxelementsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_maxelementsunknownstatements_4_0=ruleUnknownStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaxElementsStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"maxelementsunknownstatements",
	        		lv_maxelementsunknownstatements_4_0, 
	        		"UnknownStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getMaxElementsStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleUnknownStatement
entryRuleUnknownStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnknownStatementRule(), currentNode); }
	 iv_ruleUnknownStatement=ruleUnknownStatement 
	 { $current=$iv_ruleUnknownStatement.current; } 
	 EOF 
;

// Rule UnknownStatement
ruleUnknownStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnknownStatementAccess().getPrefSTRINGARGParserRuleCall_0_0(), currentNode); 
	    }
		lv_pref_0_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnknownStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pref",
	        		lv_pref_0_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getUnknownStatementAccess().getColonKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnknownStatementAccess().getNamestatSTRINGARGParserRuleCall_2_0(), currentNode); 
	    }
		lv_namestat_2_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnknownStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"namestat",
	        		lv_namestat_2_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnknownStatementAccess().getArgumentSTRINGARGParserRuleCall_3_0(), currentNode); 
	    }
		lv_argument_3_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnknownStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"argument",
	        		lv_argument_3_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(	';' 
    {
        createLeafNode(grammarAccess.getUnknownStatementAccess().getSemicolonKeyword_4_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getUnknownStatementAccess().getLeftCurlyBracketKeyword_4_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnknownStatementAccess().getUnknownsubstatementsUnknownSubstatementsParserRuleCall_4_1_1_0(), currentNode); 
	    }
		lv_unknownsubstatements_6_0=ruleUnknownSubstatements		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnknownStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"unknownsubstatements",
	        		lv_unknownsubstatements_6_0, 
	        		"UnknownSubstatements", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getUnknownStatementAccess().getRightCurlyBracketKeyword_4_1_2(), null); 
    }
)))
;





// Entry rule entryRuleUnknownSubstatements
entryRuleUnknownSubstatements returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnknownSubstatementsRule(), currentNode); }
	 iv_ruleUnknownSubstatements=ruleUnknownSubstatements 
	 { $current=$iv_ruleUnknownSubstatements.current; } 
	 EOF 
;

// Rule UnknownSubstatements
ruleUnknownSubstatements returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnknownSubstatementsAccess().getPrefSTRINGARGParserRuleCall_0_0_0(), currentNode); 
	    }
		lv_pref_0_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnknownSubstatementsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pref",
	        		lv_pref_0_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getUnknownSubstatementsAccess().getColonKeyword_0_1(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnknownSubstatementsAccess().getNamestatSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_namestat_2_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnknownSubstatementsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"namestat",
	        		lv_namestat_2_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnknownSubstatementsAccess().getArgumentSTRINGARGParserRuleCall_2_0(), currentNode); 
	    }
		lv_argument_3_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnknownSubstatementsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"argument",
	        		lv_argument_3_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(	';' 
    {
        createLeafNode(grammarAccess.getUnknownSubstatementsAccess().getSemicolonKeyword_3_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getUnknownSubstatementsAccess().getLeftCurlyBracketKeyword_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUnknownSubstatementsAccess().getUnknownsubstatementsUnknownSubstatementsParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_unknownsubstatements_6_0=ruleUnknownSubstatements		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUnknownSubstatementsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"unknownsubstatements",
	        		lv_unknownsubstatements_6_0, 
	        		"UnknownSubstatements", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getUnknownSubstatementsAccess().getRightCurlyBracketKeyword_3_1_2(), null); 
    }
)))
;





// Entry rule entryRuleRangeStatement
entryRuleRangeStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRangeStatementRule(), currentNode); }
	 iv_ruleRangeStatement=ruleRangeStatement 
	 { $current=$iv_ruleRangeStatement.current; } 
	 EOF 
;

// Rule RangeStatement
ruleRangeStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'range' 
    {
        createLeafNode(grammarAccess.getRangeStatementAccess().getRangeKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRangeStatementAccess().getRangeSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_range_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRangeStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"range",
	        		lv_range_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getRangeStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getRangeStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRangeStatementAccess().getRangesubstatementsMultipleSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_rangesubstatements_4_0=ruleMultipleSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRangeStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"rangesubstatements",
	        		lv_rangesubstatements_4_0, 
	        		"MultipleSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRangeStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRulePatternStatement
entryRulePatternStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPatternStatementRule(), currentNode); }
	 iv_rulePatternStatement=rulePatternStatement 
	 { $current=$iv_rulePatternStatement.current; } 
	 EOF 
;

// Rule PatternStatement
rulePatternStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'pattern' 
    {
        createLeafNode(grammarAccess.getPatternStatementAccess().getPatternKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPatternStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getPatternStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getPatternStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPatternStatementAccess().getPatternsubstatementsMultipleSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_patternsubstatements_4_0=ruleMultipleSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"patternsubstatements",
	        		lv_patternsubstatements_4_0, 
	        		"MultipleSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPatternStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleLengthStatement
entryRuleLengthStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLengthStatementRule(), currentNode); }
	 iv_ruleLengthStatement=ruleLengthStatement 
	 { $current=$iv_ruleLengthStatement.current; } 
	 EOF 
;

// Rule LengthStatement
ruleLengthStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'length' 
    {
        createLeafNode(grammarAccess.getLengthStatementAccess().getLengthKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLengthStatementAccess().getLengthSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_length_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLengthStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"length",
	        		lv_length_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getLengthStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getLengthStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLengthStatementAccess().getLengthsubstatementsMultipleSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_lengthsubstatements_4_0=ruleMultipleSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLengthStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"lengthsubstatements",
	        		lv_lengthsubstatements_4_0, 
	        		"MultipleSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getLengthStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleMustStatement
entryRuleMustStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMustStatementRule(), currentNode); }
	 iv_ruleMustStatement=ruleMustStatement 
	 { $current=$iv_ruleMustStatement.current; } 
	 EOF 
;

// Rule MustStatement
ruleMustStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'must' 
    {
        createLeafNode(grammarAccess.getMustStatementAccess().getMustKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMustStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMustStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getMustStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getMustStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMustStatementAccess().getMustsubstatementsMultipleSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_mustsubstatements_4_0=ruleMultipleSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMustStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mustsubstatements",
	        		lv_mustsubstatements_4_0, 
	        		"MultipleSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getMustStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleMultipleSubstatement
entryRuleMultipleSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMultipleSubstatementRule(), currentNode); }
	 iv_ruleMultipleSubstatement=ruleMultipleSubstatement 
	 { $current=$iv_ruleMultipleSubstatement.current; } 
	 EOF 
;

// Rule MultipleSubstatement
ruleMultipleSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMultipleSubstatementAccess().getDescriptionStatementParserRuleCall_0(), currentNode); 
    }
    this_DescriptionStatement_0=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMultipleSubstatementAccess().getReferenceStatementParserRuleCall_1(), currentNode); 
    }
    this_ReferenceStatement_1=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMultipleSubstatementAccess().getErrorAppTagStatementParserRuleCall_2(), currentNode); 
    }
    this_ErrorAppTagStatement_2=ruleErrorAppTagStatement
    { 
        $current = $this_ErrorAppTagStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMultipleSubstatementAccess().getErrorMessageStatementParserRuleCall_3(), currentNode); 
    }
    this_ErrorMessageStatement_3=ruleErrorMessageStatement
    { 
        $current = $this_ErrorMessageStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMultipleSubstatementAccess().getUnknownStatementParserRuleCall_4(), currentNode); 
    }
    this_UnknownStatement_4=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleRpcStatement
entryRuleRpcStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRpcStatementRule(), currentNode); }
	 iv_ruleRpcStatement=ruleRpcStatement 
	 { $current=$iv_ruleRpcStatement.current; } 
	 EOF 
;

// Rule RpcStatement
ruleRpcStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'rpc' 
    {
        createLeafNode(grammarAccess.getRpcStatementAccess().getRpcKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRpcStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRpcStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getRpcStatementAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRpcStatementAccess().getRpcsubstatementsRpcSubstatementParserRuleCall_3_0(), currentNode); 
	    }
		lv_rpcsubstatements_3_0=ruleRpcSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRpcStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"rpcsubstatements",
	        		lv_rpcsubstatements_3_0, 
	        		"RpcSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRpcStatementAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleRpcSubstatement
entryRuleRpcSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRpcSubstatementRule(), currentNode); }
	 iv_ruleRpcSubstatement=ruleRpcSubstatement 
	 { $current=$iv_ruleRpcSubstatement.current; } 
	 EOF 
;

// Rule RpcSubstatement
ruleRpcSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getRpcSubstatementAccess().getIfFeatureStatementParserRuleCall_0(), currentNode); 
    }
    this_IfFeatureStatement_0=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRpcSubstatementAccess().getStatusStatementParserRuleCall_1(), currentNode); 
    }
    this_StatusStatement_1=ruleStatusStatement
    { 
        $current = $this_StatusStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRpcSubstatementAccess().getDescriptionStatementParserRuleCall_2(), currentNode); 
    }
    this_DescriptionStatement_2=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRpcSubstatementAccess().getReferenceStatementParserRuleCall_3(), currentNode); 
    }
    this_ReferenceStatement_3=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRpcSubstatementAccess().getTypedefStatementParserRuleCall_4(), currentNode); 
    }
    this_TypedefStatement_4=ruleTypedefStatement
    { 
        $current = $this_TypedefStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRpcSubstatementAccess().getGroupingStatementParserRuleCall_5(), currentNode); 
    }
    this_GroupingStatement_5=ruleGroupingStatement
    { 
        $current = $this_GroupingStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRpcSubstatementAccess().getInputStatementParserRuleCall_6(), currentNode); 
    }
    this_InputStatement_6=ruleInputStatement
    { 
        $current = $this_InputStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRpcSubstatementAccess().getOutputStatementParserRuleCall_7(), currentNode); 
    }
    this_OutputStatement_7=ruleOutputStatement
    { 
        $current = $this_OutputStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRpcSubstatementAccess().getUnknownStatementParserRuleCall_8(), currentNode); 
    }
    this_UnknownStatement_8=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_8.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleInputStatement
entryRuleInputStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInputStatementRule(), currentNode); }
	 iv_ruleInputStatement=ruleInputStatement 
	 { $current=$iv_ruleInputStatement.current; } 
	 EOF 
;

// Rule InputStatement
ruleInputStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'input' 
    {
        createLeafNode(grammarAccess.getInputStatementAccess().getInputKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getInputStatementAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputStatementAccess().getInputsubstatementsInputSubstatementParserRuleCall_2_0(), currentNode); 
	    }
		lv_inputsubstatements_2_0=ruleInputSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"inputsubstatements",
	        		lv_inputsubstatements_2_0, 
	        		"InputSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	'}' 
    {
        createLeafNode(grammarAccess.getInputStatementAccess().getRightCurlyBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleInputSubstatement
entryRuleInputSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInputSubstatementRule(), currentNode); }
	 iv_ruleInputSubstatement=ruleInputSubstatement 
	 { $current=$iv_ruleInputSubstatement.current; } 
	 EOF 
;

// Rule InputSubstatement
ruleInputSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getInputSubstatementAccess().getTypedefStatementParserRuleCall_0(), currentNode); 
    }
    this_TypedefStatement_0=ruleTypedefStatement
    { 
        $current = $this_TypedefStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getInputSubstatementAccess().getGroupingStatementParserRuleCall_1(), currentNode); 
    }
    this_GroupingStatement_1=ruleGroupingStatement
    { 
        $current = $this_GroupingStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getInputSubstatementAccess().getDatadefStatementParserRuleCall_2(), currentNode); 
    }
    this_DatadefStatement_2=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getInputSubstatementAccess().getUnknownStatementParserRuleCall_3(), currentNode); 
    }
    this_UnknownStatement_3=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleOutputStatement
entryRuleOutputStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOutputStatementRule(), currentNode); }
	 iv_ruleOutputStatement=ruleOutputStatement 
	 { $current=$iv_ruleOutputStatement.current; } 
	 EOF 
;

// Rule OutputStatement
ruleOutputStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'output' 
    {
        createLeafNode(grammarAccess.getOutputStatementAccess().getOutputKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getOutputStatementAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputStatementAccess().getOutputsubstatementsOutputSubstatementParserRuleCall_2_0(), currentNode); 
	    }
		lv_outputsubstatements_2_0=ruleOutputSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"outputsubstatements",
	        		lv_outputsubstatements_2_0, 
	        		"OutputSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	'}' 
    {
        createLeafNode(grammarAccess.getOutputStatementAccess().getRightCurlyBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleOutputSubstatement
entryRuleOutputSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOutputSubstatementRule(), currentNode); }
	 iv_ruleOutputSubstatement=ruleOutputSubstatement 
	 { $current=$iv_ruleOutputSubstatement.current; } 
	 EOF 
;

// Rule OutputSubstatement
ruleOutputSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getOutputSubstatementAccess().getTypedefStatementParserRuleCall_0(), currentNode); 
    }
    this_TypedefStatement_0=ruleTypedefStatement
    { 
        $current = $this_TypedefStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getOutputSubstatementAccess().getGroupingStatementParserRuleCall_1(), currentNode); 
    }
    this_GroupingStatement_1=ruleGroupingStatement
    { 
        $current = $this_GroupingStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getOutputSubstatementAccess().getDatadefStatementParserRuleCall_2(), currentNode); 
    }
    this_DatadefStatement_2=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getOutputSubstatementAccess().getUnknownStatementParserRuleCall_3(), currentNode); 
    }
    this_UnknownStatement_3=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleNotificationStatement
entryRuleNotificationStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNotificationStatementRule(), currentNode); }
	 iv_ruleNotificationStatement=ruleNotificationStatement 
	 { $current=$iv_ruleNotificationStatement.current; } 
	 EOF 
;

// Rule NotificationStatement
ruleNotificationStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'notification' 
    {
        createLeafNode(grammarAccess.getNotificationStatementAccess().getNotificationKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNotificationStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNotificationStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getNotificationStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getNotificationStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNotificationStatementAccess().getNotificationsubstatementsNotificationSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_notificationsubstatements_4_0=ruleNotificationSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNotificationStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"notificationsubstatements",
	        		lv_notificationsubstatements_4_0, 
	        		"NotificationSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getNotificationStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleNotificationSubstatement
entryRuleNotificationSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNotificationSubstatementRule(), currentNode); }
	 iv_ruleNotificationSubstatement=ruleNotificationSubstatement 
	 { $current=$iv_ruleNotificationSubstatement.current; } 
	 EOF 
;

// Rule NotificationSubstatement
ruleNotificationSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNotificationSubstatementAccess().getIfFeatureStatementParserRuleCall_0(), currentNode); 
    }
    this_IfFeatureStatement_0=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNotificationSubstatementAccess().getStatusStatementParserRuleCall_1(), currentNode); 
    }
    this_StatusStatement_1=ruleStatusStatement
    { 
        $current = $this_StatusStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNotificationSubstatementAccess().getDescriptionStatementParserRuleCall_2(), currentNode); 
    }
    this_DescriptionStatement_2=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNotificationSubstatementAccess().getReferenceStatementParserRuleCall_3(), currentNode); 
    }
    this_ReferenceStatement_3=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNotificationSubstatementAccess().getTypedefStatementParserRuleCall_4(), currentNode); 
    }
    this_TypedefStatement_4=ruleTypedefStatement
    { 
        $current = $this_TypedefStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNotificationSubstatementAccess().getGroupingStatementParserRuleCall_5(), currentNode); 
    }
    this_GroupingStatement_5=ruleGroupingStatement
    { 
        $current = $this_GroupingStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNotificationSubstatementAccess().getDatadefStatementParserRuleCall_6(), currentNode); 
    }
    this_DatadefStatement_6=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNotificationSubstatementAccess().getUnknownStatementParserRuleCall_7(), currentNode); 
    }
    this_UnknownStatement_7=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_7.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleContainerStatement
entryRuleContainerStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContainerStatementRule(), currentNode); }
	 iv_ruleContainerStatement=ruleContainerStatement 
	 { $current=$iv_ruleContainerStatement.current; } 
	 EOF 
;

// Rule ContainerStatement
ruleContainerStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'container' 
    {
        createLeafNode(grammarAccess.getContainerStatementAccess().getContainerKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContainerStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getContainerStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getContainerStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContainerStatementAccess().getContainersubstatementsContainerSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_containersubstatements_4_0=ruleContainerSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"containersubstatements",
	        		lv_containersubstatements_4_0, 
	        		"ContainerSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getContainerStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleContainerSubstatement
entryRuleContainerSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContainerSubstatementRule(), currentNode); }
	 iv_ruleContainerSubstatement=ruleContainerSubstatement 
	 { $current=$iv_ruleContainerSubstatement.current; } 
	 EOF 
;

// Rule ContainerSubstatement
ruleContainerSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getWhenStatementParserRuleCall_0(), currentNode); 
    }
    this_WhenStatement_0=ruleWhenStatement
    { 
        $current = $this_WhenStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getIfFeatureStatementParserRuleCall_1(), currentNode); 
    }
    this_IfFeatureStatement_1=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getMustStatementParserRuleCall_2(), currentNode); 
    }
    this_MustStatement_2=ruleMustStatement
    { 
        $current = $this_MustStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getPresenceStatementParserRuleCall_3(), currentNode); 
    }
    this_PresenceStatement_3=rulePresenceStatement
    { 
        $current = $this_PresenceStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getConfigStatementParserRuleCall_4(), currentNode); 
    }
    this_ConfigStatement_4=ruleConfigStatement
    { 
        $current = $this_ConfigStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getStatusStatementParserRuleCall_5(), currentNode); 
    }
    this_StatusStatement_5=ruleStatusStatement
    { 
        $current = $this_StatusStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getDescriptionStatementParserRuleCall_6(), currentNode); 
    }
    this_DescriptionStatement_6=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getReferenceStatementParserRuleCall_7(), currentNode); 
    }
    this_ReferenceStatement_7=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getTypedefStatementParserRuleCall_8(), currentNode); 
    }
    this_TypedefStatement_8=ruleTypedefStatement
    { 
        $current = $this_TypedefStatement_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getGroupingStatementParserRuleCall_9(), currentNode); 
    }
    this_GroupingStatement_9=ruleGroupingStatement
    { 
        $current = $this_GroupingStatement_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getDatadefStatementParserRuleCall_10(), currentNode); 
    }
    this_DatadefStatement_10=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_10.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerSubstatementAccess().getUnknownStatementParserRuleCall_11(), currentNode); 
    }
    this_UnknownStatement_11=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_11.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleListStatement
entryRuleListStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getListStatementRule(), currentNode); }
	 iv_ruleListStatement=ruleListStatement 
	 { $current=$iv_ruleListStatement.current; } 
	 EOF 
;

// Rule ListStatement
ruleListStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'list' 
    {
        createLeafNode(grammarAccess.getListStatementAccess().getListKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getListStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getListStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListStatementAccess().getListsubstatementsListSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_listsubstatements_4_0=ruleListSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"listsubstatements",
	        		lv_listsubstatements_4_0, 
	        		"ListSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getListStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleListSubstatement
entryRuleListSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getListSubstatementRule(), currentNode); }
	 iv_ruleListSubstatement=ruleListSubstatement 
	 { $current=$iv_ruleListSubstatement.current; } 
	 EOF 
;

// Rule ListSubstatement
ruleListSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getWhenStatementParserRuleCall_0(), currentNode); 
    }
    this_WhenStatement_0=ruleWhenStatement
    { 
        $current = $this_WhenStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getIfFeatureStatementParserRuleCall_1(), currentNode); 
    }
    this_IfFeatureStatement_1=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getMustStatementParserRuleCall_2(), currentNode); 
    }
    this_MustStatement_2=ruleMustStatement
    { 
        $current = $this_MustStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getKeyStatementParserRuleCall_3(), currentNode); 
    }
    this_KeyStatement_3=ruleKeyStatement
    { 
        $current = $this_KeyStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getUniqueStatementParserRuleCall_4(), currentNode); 
    }
    this_UniqueStatement_4=ruleUniqueStatement
    { 
        $current = $this_UniqueStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getConfigStatementParserRuleCall_5(), currentNode); 
    }
    this_ConfigStatement_5=ruleConfigStatement
    { 
        $current = $this_ConfigStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getMinElementsStatementParserRuleCall_6(), currentNode); 
    }
    this_MinElementsStatement_6=ruleMinElementsStatement
    { 
        $current = $this_MinElementsStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getMaxElementsStatementParserRuleCall_7(), currentNode); 
    }
    this_MaxElementsStatement_7=ruleMaxElementsStatement
    { 
        $current = $this_MaxElementsStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getOrderedbyStatementParserRuleCall_8(), currentNode); 
    }
    this_OrderedbyStatement_8=ruleOrderedbyStatement
    { 
        $current = $this_OrderedbyStatement_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getStatusStatementParserRuleCall_9(), currentNode); 
    }
    this_StatusStatement_9=ruleStatusStatement
    { 
        $current = $this_StatusStatement_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getDescriptionStatementParserRuleCall_10(), currentNode); 
    }
    this_DescriptionStatement_10=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_10.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getReferenceStatementParserRuleCall_11(), currentNode); 
    }
    this_ReferenceStatement_11=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_11.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getTypedefStatementParserRuleCall_12(), currentNode); 
    }
    this_TypedefStatement_12=ruleTypedefStatement
    { 
        $current = $this_TypedefStatement_12.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getGroupingStatementParserRuleCall_13(), currentNode); 
    }
    this_GroupingStatement_13=ruleGroupingStatement
    { 
        $current = $this_GroupingStatement_13.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getDatadefStatementParserRuleCall_14(), currentNode); 
    }
    this_DatadefStatement_14=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_14.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getListSubstatementAccess().getUnknownStatementParserRuleCall_15(), currentNode); 
    }
    this_UnknownStatement_15=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_15.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleGroupingStatement
entryRuleGroupingStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGroupingStatementRule(), currentNode); }
	 iv_ruleGroupingStatement=ruleGroupingStatement 
	 { $current=$iv_ruleGroupingStatement.current; } 
	 EOF 
;

// Rule GroupingStatement
ruleGroupingStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'grouping' 
    {
        createLeafNode(grammarAccess.getGroupingStatementAccess().getGroupingKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGroupingStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGroupingStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getGroupingStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getGroupingStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGroupingStatementAccess().getGroupingsubstatementsGroupingSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_groupingsubstatements_4_0=ruleGroupingSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGroupingStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"groupingsubstatements",
	        		lv_groupingsubstatements_4_0, 
	        		"GroupingSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getGroupingStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleGroupingSubstatement
entryRuleGroupingSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGroupingSubstatementRule(), currentNode); }
	 iv_ruleGroupingSubstatement=ruleGroupingSubstatement 
	 { $current=$iv_ruleGroupingSubstatement.current; } 
	 EOF 
;

// Rule GroupingSubstatement
ruleGroupingSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getGroupingSubstatementAccess().getStatusStatementParserRuleCall_0(), currentNode); 
    }
    this_StatusStatement_0=ruleStatusStatement
    { 
        $current = $this_StatusStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getGroupingSubstatementAccess().getDescriptionStatementParserRuleCall_1(), currentNode); 
    }
    this_DescriptionStatement_1=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getGroupingSubstatementAccess().getReferenceStatementParserRuleCall_2(), currentNode); 
    }
    this_ReferenceStatement_2=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getGroupingSubstatementAccess().getTypedefStatementParserRuleCall_3(), currentNode); 
    }
    this_TypedefStatement_3=ruleTypedefStatement
    { 
        $current = $this_TypedefStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getGroupingSubstatementAccess().getGroupingStatementParserRuleCall_4(), currentNode); 
    }
    this_GroupingStatement_4=ruleGroupingStatement
    { 
        $current = $this_GroupingStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getGroupingSubstatementAccess().getDatadefStatementParserRuleCall_5(), currentNode); 
    }
    this_DatadefStatement_5=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getGroupingSubstatementAccess().getUnknownStatementParserRuleCall_6(), currentNode); 
    }
    this_UnknownStatement_6=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_6.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleLeafStatement
entryRuleLeafStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLeafStatementRule(), currentNode); }
	 iv_ruleLeafStatement=ruleLeafStatement 
	 { $current=$iv_ruleLeafStatement.current; } 
	 EOF 
;

// Rule LeafStatement
ruleLeafStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'leaf' 
    {
        createLeafNode(grammarAccess.getLeafStatementAccess().getLeafKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLeafStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLeafStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getLeafStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getLeafStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLeafStatementAccess().getLeafsubstatementsLeafSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_leafsubstatements_4_0=ruleLeafSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLeafStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"leafsubstatements",
	        		lv_leafsubstatements_4_0, 
	        		"LeafSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getLeafStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleLeafSubstatement
entryRuleLeafSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLeafSubstatementRule(), currentNode); }
	 iv_ruleLeafSubstatement=ruleLeafSubstatement 
	 { $current=$iv_ruleLeafSubstatement.current; } 
	 EOF 
;

// Rule LeafSubstatement
ruleLeafSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getWhenStatementParserRuleCall_0(), currentNode); 
    }
    this_WhenStatement_0=ruleWhenStatement
    { 
        $current = $this_WhenStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getIfFeatureStatementParserRuleCall_1(), currentNode); 
    }
    this_IfFeatureStatement_1=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getTypeStatementParserRuleCall_2(), currentNode); 
    }
    this_TypeStatement_2=ruleTypeStatement
    { 
        $current = $this_TypeStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getUnitsStatementParserRuleCall_3(), currentNode); 
    }
    this_UnitsStatement_3=ruleUnitsStatement
    { 
        $current = $this_UnitsStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getMustStatementParserRuleCall_4(), currentNode); 
    }
    this_MustStatement_4=ruleMustStatement
    { 
        $current = $this_MustStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getDefaultStatementParserRuleCall_5(), currentNode); 
    }
    this_DefaultStatement_5=ruleDefaultStatement
    { 
        $current = $this_DefaultStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getConfigStatementParserRuleCall_6(), currentNode); 
    }
    this_ConfigStatement_6=ruleConfigStatement
    { 
        $current = $this_ConfigStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getMandatoryStatementParserRuleCall_7(), currentNode); 
    }
    this_MandatoryStatement_7=ruleMandatoryStatement
    { 
        $current = $this_MandatoryStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getStatusStatementParserRuleCall_8(), currentNode); 
    }
    this_StatusStatement_8=ruleStatusStatement
    { 
        $current = $this_StatusStatement_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getDescriptionStatementParserRuleCall_9(), currentNode); 
    }
    this_DescriptionStatement_9=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getReferenceStatementParserRuleCall_10(), currentNode); 
    }
    this_ReferenceStatement_10=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_10.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafSubstatementAccess().getUnknownStatementParserRuleCall_11(), currentNode); 
    }
    this_UnknownStatement_11=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_11.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleLeafListStatement
entryRuleLeafListStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLeafListStatementRule(), currentNode); }
	 iv_ruleLeafListStatement=ruleLeafListStatement 
	 { $current=$iv_ruleLeafListStatement.current; } 
	 EOF 
;

// Rule LeafListStatement
ruleLeafListStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'leaf-list' 
    {
        createLeafNode(grammarAccess.getLeafListStatementAccess().getLeafListKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLeafListStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLeafListStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getLeafListStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getLeafListStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLeafListStatementAccess().getLeaflistsubstatementsLeafListSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_leaflistsubstatements_4_0=ruleLeafListSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLeafListStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"leaflistsubstatements",
	        		lv_leaflistsubstatements_4_0, 
	        		"LeafListSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getLeafListStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleLeafListSubstatement
entryRuleLeafListSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLeafListSubstatementRule(), currentNode); }
	 iv_ruleLeafListSubstatement=ruleLeafListSubstatement 
	 { $current=$iv_ruleLeafListSubstatement.current; } 
	 EOF 
;

// Rule LeafListSubstatement
ruleLeafListSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getWhenStatementParserRuleCall_0(), currentNode); 
    }
    this_WhenStatement_0=ruleWhenStatement
    { 
        $current = $this_WhenStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getIfFeatureStatementParserRuleCall_1(), currentNode); 
    }
    this_IfFeatureStatement_1=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getTypeStatementParserRuleCall_2(), currentNode); 
    }
    this_TypeStatement_2=ruleTypeStatement
    { 
        $current = $this_TypeStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getUnitsStatementParserRuleCall_3(), currentNode); 
    }
    this_UnitsStatement_3=ruleUnitsStatement
    { 
        $current = $this_UnitsStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getMustStatementParserRuleCall_4(), currentNode); 
    }
    this_MustStatement_4=ruleMustStatement
    { 
        $current = $this_MustStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getDefaultStatementParserRuleCall_5(), currentNode); 
    }
    this_DefaultStatement_5=ruleDefaultStatement
    { 
        $current = $this_DefaultStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getConfigStatementParserRuleCall_6(), currentNode); 
    }
    this_ConfigStatement_6=ruleConfigStatement
    { 
        $current = $this_ConfigStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getMinElementsStatementParserRuleCall_7(), currentNode); 
    }
    this_MinElementsStatement_7=ruleMinElementsStatement
    { 
        $current = $this_MinElementsStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getMaxElementsStatementParserRuleCall_8(), currentNode); 
    }
    this_MaxElementsStatement_8=ruleMaxElementsStatement
    { 
        $current = $this_MaxElementsStatement_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getOrderedbyStatementParserRuleCall_9(), currentNode); 
    }
    this_OrderedbyStatement_9=ruleOrderedbyStatement
    { 
        $current = $this_OrderedbyStatement_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getStatusStatementParserRuleCall_10(), currentNode); 
    }
    this_StatusStatement_10=ruleStatusStatement
    { 
        $current = $this_StatusStatement_10.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getDescriptionStatementParserRuleCall_11(), currentNode); 
    }
    this_DescriptionStatement_11=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_11.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLeafListSubstatementAccess().getUnknownStatementParserRuleCall_12(), currentNode); 
    }
    this_UnknownStatement_12=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_12.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleChoiceStatement
entryRuleChoiceStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getChoiceStatementRule(), currentNode); }
	 iv_ruleChoiceStatement=ruleChoiceStatement 
	 { $current=$iv_ruleChoiceStatement.current; } 
	 EOF 
;

// Rule ChoiceStatement
ruleChoiceStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'choice' 
    {
        createLeafNode(grammarAccess.getChoiceStatementAccess().getChoiceKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getChoiceStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChoiceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getChoiceStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getChoiceStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getChoiceStatementAccess().getChoicesubstatementsChoiceSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_choicesubstatements_4_0=ruleChoiceSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getChoiceStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"choicesubstatements",
	        		lv_choicesubstatements_4_0, 
	        		"ChoiceSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getChoiceStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleChoiceSubstatement
entryRuleChoiceSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getChoiceSubstatementRule(), currentNode); }
	 iv_ruleChoiceSubstatement=ruleChoiceSubstatement 
	 { $current=$iv_ruleChoiceSubstatement.current; } 
	 EOF 
;

// Rule ChoiceSubstatement
ruleChoiceSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getWhenStatementParserRuleCall_0(), currentNode); 
    }
    this_WhenStatement_0=ruleWhenStatement
    { 
        $current = $this_WhenStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getIfFeatureStatementParserRuleCall_1(), currentNode); 
    }
    this_IfFeatureStatement_1=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getDefaultStatementParserRuleCall_2(), currentNode); 
    }
    this_DefaultStatement_2=ruleDefaultStatement
    { 
        $current = $this_DefaultStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getConfigStatementParserRuleCall_3(), currentNode); 
    }
    this_ConfigStatement_3=ruleConfigStatement
    { 
        $current = $this_ConfigStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getMandatoryStatementParserRuleCall_4(), currentNode); 
    }
    this_MandatoryStatement_4=ruleMandatoryStatement
    { 
        $current = $this_MandatoryStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getStatusStatementParserRuleCall_5(), currentNode); 
    }
    this_StatusStatement_5=ruleStatusStatement
    { 
        $current = $this_StatusStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getDescriptionStatementParserRuleCall_6(), currentNode); 
    }
    this_DescriptionStatement_6=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getReferenceStatementParserRuleCall_7(), currentNode); 
    }
    this_ReferenceStatement_7=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getCaseStatementParserRuleCall_8(), currentNode); 
    }
    this_CaseStatement_8=ruleCaseStatement
    { 
        $current = $this_CaseStatement_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getContainerStatementParserRuleCall_9(), currentNode); 
    }
    this_ContainerStatement_9=ruleContainerStatement
    { 
        $current = $this_ContainerStatement_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getLeafStatementParserRuleCall_10(), currentNode); 
    }
    this_LeafStatement_10=ruleLeafStatement
    { 
        $current = $this_LeafStatement_10.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getLeafListStatementParserRuleCall_11(), currentNode); 
    }
    this_LeafListStatement_11=ruleLeafListStatement
    { 
        $current = $this_LeafListStatement_11.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getListStatementParserRuleCall_12(), currentNode); 
    }
    this_ListStatement_12=ruleListStatement
    { 
        $current = $this_ListStatement_12.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getAnyxmlStatementParserRuleCall_13(), currentNode); 
    }
    this_AnyxmlStatement_13=ruleAnyxmlStatement
    { 
        $current = $this_AnyxmlStatement_13.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getChoiceSubstatementAccess().getUnknownStatementParserRuleCall_14(), currentNode); 
    }
    this_UnknownStatement_14=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_14.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleCaseStatement
entryRuleCaseStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCaseStatementRule(), currentNode); }
	 iv_ruleCaseStatement=ruleCaseStatement 
	 { $current=$iv_ruleCaseStatement.current; } 
	 EOF 
;

// Rule CaseStatement
ruleCaseStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'case' 
    {
        createLeafNode(grammarAccess.getCaseStatementAccess().getCaseKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCaseStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCaseStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getCaseStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getCaseStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCaseStatementAccess().getCasesubstatementsCaseSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_casesubstatements_4_0=ruleCaseSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCaseStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"casesubstatements",
	        		lv_casesubstatements_4_0, 
	        		"CaseSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getCaseStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleCaseSubstatement
entryRuleCaseSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCaseSubstatementRule(), currentNode); }
	 iv_ruleCaseSubstatement=ruleCaseSubstatement 
	 { $current=$iv_ruleCaseSubstatement.current; } 
	 EOF 
;

// Rule CaseSubstatement
ruleCaseSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCaseSubstatementAccess().getWhenStatementParserRuleCall_0(), currentNode); 
    }
    this_WhenStatement_0=ruleWhenStatement
    { 
        $current = $this_WhenStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCaseSubstatementAccess().getIfFeatureStatementParserRuleCall_1(), currentNode); 
    }
    this_IfFeatureStatement_1=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCaseSubstatementAccess().getStatusStatementParserRuleCall_2(), currentNode); 
    }
    this_StatusStatement_2=ruleStatusStatement
    { 
        $current = $this_StatusStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCaseSubstatementAccess().getDescriptionStatementParserRuleCall_3(), currentNode); 
    }
    this_DescriptionStatement_3=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCaseSubstatementAccess().getReferenceStatementParserRuleCall_4(), currentNode); 
    }
    this_ReferenceStatement_4=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCaseSubstatementAccess().getDatadefStatementParserRuleCall_5(), currentNode); 
    }
    this_DatadefStatement_5=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCaseSubstatementAccess().getUnknownStatementParserRuleCall_6(), currentNode); 
    }
    this_UnknownStatement_6=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_6.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleAnyxmlStatement
entryRuleAnyxmlStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnyxmlStatementRule(), currentNode); }
	 iv_ruleAnyxmlStatement=ruleAnyxmlStatement 
	 { $current=$iv_ruleAnyxmlStatement.current; } 
	 EOF 
;

// Rule AnyxmlStatement
ruleAnyxmlStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'any-xml' 
    {
        createLeafNode(grammarAccess.getAnyxmlStatementAccess().getAnyXmlKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnyxmlStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnyxmlStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getAnyxmlStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getAnyxmlStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnyxmlStatementAccess().getAnyxmlsubstatementsAnyxmlSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_anyxmlsubstatements_4_0=ruleAnyxmlSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnyxmlStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"anyxmlsubstatements",
	        		lv_anyxmlsubstatements_4_0, 
	        		"AnyxmlSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getAnyxmlStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleAnyxmlSubstatement
entryRuleAnyxmlSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnyxmlSubstatementRule(), currentNode); }
	 iv_ruleAnyxmlSubstatement=ruleAnyxmlSubstatement 
	 { $current=$iv_ruleAnyxmlSubstatement.current; } 
	 EOF 
;

// Rule AnyxmlSubstatement
ruleAnyxmlSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getAnyxmlSubstatementAccess().getWhenStatementParserRuleCall_0(), currentNode); 
    }
    this_WhenStatement_0=ruleWhenStatement
    { 
        $current = $this_WhenStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAnyxmlSubstatementAccess().getIfFeatureStatementParserRuleCall_1(), currentNode); 
    }
    this_IfFeatureStatement_1=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAnyxmlSubstatementAccess().getMustStatementParserRuleCall_2(), currentNode); 
    }
    this_MustStatement_2=ruleMustStatement
    { 
        $current = $this_MustStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAnyxmlSubstatementAccess().getConfigStatementParserRuleCall_3(), currentNode); 
    }
    this_ConfigStatement_3=ruleConfigStatement
    { 
        $current = $this_ConfigStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAnyxmlSubstatementAccess().getMandatoryStatementParserRuleCall_4(), currentNode); 
    }
    this_MandatoryStatement_4=ruleMandatoryStatement
    { 
        $current = $this_MandatoryStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAnyxmlSubstatementAccess().getStatusStatementParserRuleCall_5(), currentNode); 
    }
    this_StatusStatement_5=ruleStatusStatement
    { 
        $current = $this_StatusStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAnyxmlSubstatementAccess().getDescriptionStatementParserRuleCall_6(), currentNode); 
    }
    this_DescriptionStatement_6=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAnyxmlSubstatementAccess().getReferenceStatementParserRuleCall_7(), currentNode); 
    }
    this_ReferenceStatement_7=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAnyxmlSubstatementAccess().getUnknownStatementParserRuleCall_8(), currentNode); 
    }
    this_UnknownStatement_8=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_8.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleUsesStatement
entryRuleUsesStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUsesStatementRule(), currentNode); }
	 iv_ruleUsesStatement=ruleUsesStatement 
	 { $current=$iv_ruleUsesStatement.current; } 
	 EOF 
;

// Rule UsesStatement
ruleUsesStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'uses' 
    {
        createLeafNode(grammarAccess.getUsesStatementAccess().getUsesKeyword_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUsesStatementAccess().getPreSTRINGARGParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_pre_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUsesStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pre",
	        		lv_pre_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getUsesStatementAccess().getColonKeyword_1_1(), null); 
    }
)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getUsesStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getUsesStatementAccess().getArgGroupingStatementCrossReference_2_0(), "arg"); 
	}

)
)(	';' 
    {
        createLeafNode(grammarAccess.getUsesStatementAccess().getSemicolonKeyword_3_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getUsesStatementAccess().getLeftCurlyBracketKeyword_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUsesStatementAccess().getUsessubstatementsUsesSubstatementParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_usessubstatements_6_0=ruleUsesSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUsesStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"usessubstatements",
	        		lv_usessubstatements_6_0, 
	        		"UsesSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getUsesStatementAccess().getRightCurlyBracketKeyword_3_1_2(), null); 
    }
)))
;





// Entry rule entryRuleUsesSubstatement
entryRuleUsesSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUsesSubstatementRule(), currentNode); }
	 iv_ruleUsesSubstatement=ruleUsesSubstatement 
	 { $current=$iv_ruleUsesSubstatement.current; } 
	 EOF 
;

// Rule UsesSubstatement
ruleUsesSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getUsesSubstatementAccess().getWhenStatementParserRuleCall_0(), currentNode); 
    }
    this_WhenStatement_0=ruleWhenStatement
    { 
        $current = $this_WhenStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getUsesSubstatementAccess().getIfFeatureStatementParserRuleCall_1(), currentNode); 
    }
    this_IfFeatureStatement_1=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getUsesSubstatementAccess().getStatusStatementParserRuleCall_2(), currentNode); 
    }
    this_StatusStatement_2=ruleStatusStatement
    { 
        $current = $this_StatusStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getUsesSubstatementAccess().getDescriptionStatementParserRuleCall_3(), currentNode); 
    }
    this_DescriptionStatement_3=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getUsesSubstatementAccess().getReferenceStatementParserRuleCall_4(), currentNode); 
    }
    this_ReferenceStatement_4=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getUsesSubstatementAccess().getRefineStatementParserRuleCall_5(), currentNode); 
    }
    this_RefineStatement_5=ruleRefineStatement
    { 
        $current = $this_RefineStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getUsesSubstatementAccess().getAugmentUsesStatementParserRuleCall_6(), currentNode); 
    }
    this_AugmentUsesStatement_6=ruleAugmentUsesStatement
    { 
        $current = $this_AugmentUsesStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getUsesSubstatementAccess().getUnknownStatementParserRuleCall_7(), currentNode); 
    }
    this_UnknownStatement_7=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_7.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleAugmentUsesStatement
entryRuleAugmentUsesStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAugmentUsesStatementRule(), currentNode); }
	 iv_ruleAugmentUsesStatement=ruleAugmentUsesStatement 
	 { $current=$iv_ruleAugmentUsesStatement.current; } 
	 EOF 
;

// Rule AugmentUsesStatement
ruleAugmentUsesStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'augment' 
    {
        createLeafNode(grammarAccess.getAugmentUsesStatementAccess().getAugmentKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAugmentUsesStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAugmentUsesStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getAugmentUsesStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getAugmentUsesStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAugmentUsesStatementAccess().getAugmentsubstatementsAugmentSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_augmentsubstatements_4_0=ruleAugmentSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAugmentUsesStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"augmentsubstatements",
	        		lv_augmentsubstatements_4_0, 
	        		"AugmentSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getAugmentUsesStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleAugmentStatement
entryRuleAugmentStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAugmentStatementRule(), currentNode); }
	 iv_ruleAugmentStatement=ruleAugmentStatement 
	 { $current=$iv_ruleAugmentStatement.current; } 
	 EOF 
;

// Rule AugmentStatement
ruleAugmentStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'augment' 
    {
        createLeafNode(grammarAccess.getAugmentStatementAccess().getAugmentKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAugmentStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAugmentStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getAugmentStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getAugmentStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAugmentStatementAccess().getAugmentsubstatementsAugmentSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_augmentsubstatements_4_0=ruleAugmentSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAugmentStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"augmentsubstatements",
	        		lv_augmentsubstatements_4_0, 
	        		"AugmentSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getAugmentStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleAugmentSubstatement
entryRuleAugmentSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAugmentSubstatementRule(), currentNode); }
	 iv_ruleAugmentSubstatement=ruleAugmentSubstatement 
	 { $current=$iv_ruleAugmentSubstatement.current; } 
	 EOF 
;

// Rule AugmentSubstatement
ruleAugmentSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getAugmentSubstatementAccess().getWhenStatementParserRuleCall_0(), currentNode); 
    }
    this_WhenStatement_0=ruleWhenStatement
    { 
        $current = $this_WhenStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAugmentSubstatementAccess().getIfFeatureStatementParserRuleCall_1(), currentNode); 
    }
    this_IfFeatureStatement_1=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAugmentSubstatementAccess().getStatusStatementParserRuleCall_2(), currentNode); 
    }
    this_StatusStatement_2=ruleStatusStatement
    { 
        $current = $this_StatusStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAugmentSubstatementAccess().getDescriptionStatementParserRuleCall_3(), currentNode); 
    }
    this_DescriptionStatement_3=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAugmentSubstatementAccess().getReferenceStatementParserRuleCall_4(), currentNode); 
    }
    this_ReferenceStatement_4=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAugmentSubstatementAccess().getDatadefStatementParserRuleCall_5(), currentNode); 
    }
    this_DatadefStatement_5=ruleDatadefStatement
    { 
        $current = $this_DatadefStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAugmentSubstatementAccess().getCaseStatementParserRuleCall_6(), currentNode); 
    }
    this_CaseStatement_6=ruleCaseStatement
    { 
        $current = $this_CaseStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAugmentSubstatementAccess().getUnknownStatementParserRuleCall_7(), currentNode); 
    }
    this_UnknownStatement_7=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_7.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleRefineStatement
entryRuleRefineStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRefineStatementRule(), currentNode); }
	 iv_ruleRefineStatement=ruleRefineStatement 
	 { $current=$iv_ruleRefineStatement.current; } 
	 EOF 
;

// Rule RefineStatement
ruleRefineStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'refine' 
    {
        createLeafNode(grammarAccess.getRefineStatementAccess().getRefineKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRefineStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRefineStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getRefineStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getRefineStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRefineStatementAccess().getRefinesubstatementsRefineSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_refinesubstatements_4_0=ruleRefineSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRefineStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"refinesubstatements",
	        		lv_refinesubstatements_4_0, 
	        		"RefineSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRefineStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleRefineSubstatement
entryRuleRefineSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRefineSubstatementRule(), currentNode); }
	 iv_ruleRefineSubstatement=ruleRefineSubstatement 
	 { $current=$iv_ruleRefineSubstatement.current; } 
	 EOF 
;

// Rule RefineSubstatement
ruleRefineSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getMustStatementParserRuleCall_0(), currentNode); 
    }
    this_MustStatement_0=ruleMustStatement
    { 
        $current = $this_MustStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getDefaultStatementParserRuleCall_1(), currentNode); 
    }
    this_DefaultStatement_1=ruleDefaultStatement
    { 
        $current = $this_DefaultStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getPresenceStatementParserRuleCall_2(), currentNode); 
    }
    this_PresenceStatement_2=rulePresenceStatement
    { 
        $current = $this_PresenceStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getConfigStatementParserRuleCall_3(), currentNode); 
    }
    this_ConfigStatement_3=ruleConfigStatement
    { 
        $current = $this_ConfigStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getMandatoryStatementParserRuleCall_4(), currentNode); 
    }
    this_MandatoryStatement_4=ruleMandatoryStatement
    { 
        $current = $this_MandatoryStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getMinElementsStatementParserRuleCall_5(), currentNode); 
    }
    this_MinElementsStatement_5=ruleMinElementsStatement
    { 
        $current = $this_MinElementsStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getMaxElementsStatementParserRuleCall_6(), currentNode); 
    }
    this_MaxElementsStatement_6=ruleMaxElementsStatement
    { 
        $current = $this_MaxElementsStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getDescriptionStatementParserRuleCall_7(), currentNode); 
    }
    this_DescriptionStatement_7=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getReferenceStatementParserRuleCall_8(), currentNode); 
    }
    this_ReferenceStatement_8=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRefineSubstatementAccess().getUnknownStatementParserRuleCall_9(), currentNode); 
    }
    this_UnknownStatement_9=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_9.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleDeviationStatement
entryRuleDeviationStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeviationStatementRule(), currentNode); }
	 iv_ruleDeviationStatement=ruleDeviationStatement 
	 { $current=$iv_ruleDeviationStatement.current; } 
	 EOF 
;

// Rule DeviationStatement
ruleDeviationStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'deviation' 
    {
        createLeafNode(grammarAccess.getDeviationStatementAccess().getDeviationKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeviationStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeviationStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getDeviationStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getDeviationStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeviationStatementAccess().getDeviationsubstatementsDeviationSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_deviationsubstatements_4_0=ruleDeviationSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeviationStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"deviationsubstatements",
	        		lv_deviationsubstatements_4_0, 
	        		"DeviationSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getDeviationStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleDeviationSubstatement
entryRuleDeviationSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeviationSubstatementRule(), currentNode); }
	 iv_ruleDeviationSubstatement=ruleDeviationSubstatement 
	 { $current=$iv_ruleDeviationSubstatement.current; } 
	 EOF 
;

// Rule DeviationSubstatement
ruleDeviationSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviationSubstatementAccess().getDeviateStatementParserRuleCall_0(), currentNode); 
    }
    this_DeviateStatement_0=ruleDeviateStatement
    { 
        $current = $this_DeviateStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviationSubstatementAccess().getDescriptionStatementParserRuleCall_1(), currentNode); 
    }
    this_DescriptionStatement_1=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviationSubstatementAccess().getReferenceStatementParserRuleCall_2(), currentNode); 
    }
    this_ReferenceStatement_2=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviationSubstatementAccess().getUnknownStatementParserRuleCall_3(), currentNode); 
    }
    this_UnknownStatement_3=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleDeviateStatement
entryRuleDeviateStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeviateStatementRule(), currentNode); }
	 iv_ruleDeviateStatement=ruleDeviateStatement 
	 { $current=$iv_ruleDeviateStatement.current; } 
	 EOF 
;

// Rule DeviateStatement
ruleDeviateStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'deviate' 
    {
        createLeafNode(grammarAccess.getDeviateStatementAccess().getDeviateKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeviateStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeviateStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getDeviateStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getDeviateStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeviateStatementAccess().getDeviatesubstatementsDeviateSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_deviatesubstatements_4_0=ruleDeviateSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeviateStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"deviatesubstatements",
	        		lv_deviatesubstatements_4_0, 
	        		"DeviateSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getDeviateStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleDeviateSubstatement
entryRuleDeviateSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeviateSubstatementRule(), currentNode); }
	 iv_ruleDeviateSubstatement=ruleDeviateSubstatement 
	 { $current=$iv_ruleDeviateSubstatement.current; } 
	 EOF 
;

// Rule DeviateSubstatement
ruleDeviateSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviateSubstatementAccess().getUniqueStatementParserRuleCall_0(), currentNode); 
    }
    this_UniqueStatement_0=ruleUniqueStatement
    { 
        $current = $this_UniqueStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviateSubstatementAccess().getMustStatementParserRuleCall_1(), currentNode); 
    }
    this_MustStatement_1=ruleMustStatement
    { 
        $current = $this_MustStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviateSubstatementAccess().getUnitsStatementParserRuleCall_2(), currentNode); 
    }
    this_UnitsStatement_2=ruleUnitsStatement
    { 
        $current = $this_UnitsStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviateSubstatementAccess().getDefaultStatementParserRuleCall_3(), currentNode); 
    }
    this_DefaultStatement_3=ruleDefaultStatement
    { 
        $current = $this_DefaultStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviateSubstatementAccess().getConfigStatementParserRuleCall_4(), currentNode); 
    }
    this_ConfigStatement_4=ruleConfigStatement
    { 
        $current = $this_ConfigStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviateSubstatementAccess().getMandatoryStatementParserRuleCall_5(), currentNode); 
    }
    this_MandatoryStatement_5=ruleMandatoryStatement
    { 
        $current = $this_MandatoryStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviateSubstatementAccess().getMinElementsStatementParserRuleCall_6(), currentNode); 
    }
    this_MinElementsStatement_6=ruleMinElementsStatement
    { 
        $current = $this_MinElementsStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviateSubstatementAccess().getMaxElementsStatementParserRuleCall_7(), currentNode); 
    }
    this_MaxElementsStatement_7=ruleMaxElementsStatement
    { 
        $current = $this_MaxElementsStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDeviateSubstatementAccess().getUnknownStatementParserRuleCall_8(), currentNode); 
    }
    this_UnknownStatement_8=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_8.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleExtensionStatement
entryRuleExtensionStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExtensionStatementRule(), currentNode); }
	 iv_ruleExtensionStatement=ruleExtensionStatement 
	 { $current=$iv_ruleExtensionStatement.current; } 
	 EOF 
;

// Rule ExtensionStatement
ruleExtensionStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'extension' 
    {
        createLeafNode(grammarAccess.getExtensionStatementAccess().getExtensionKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExtensionStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExtensionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getExtensionStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getExtensionStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExtensionStatementAccess().getExtensionsubstatementsExtensionSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_extensionsubstatements_4_0=ruleExtensionSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExtensionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"extensionsubstatements",
	        		lv_extensionsubstatements_4_0, 
	        		"ExtensionSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getExtensionStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleExtensionSubstatement
entryRuleExtensionSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExtensionSubstatementRule(), currentNode); }
	 iv_ruleExtensionSubstatement=ruleExtensionSubstatement 
	 { $current=$iv_ruleExtensionSubstatement.current; } 
	 EOF 
;

// Rule ExtensionSubstatement
ruleExtensionSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getExtensionSubstatementAccess().getArgumentStatementParserRuleCall_0(), currentNode); 
    }
    this_ArgumentStatement_0=ruleArgumentStatement
    { 
        $current = $this_ArgumentStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExtensionSubstatementAccess().getStatusStatementParserRuleCall_1(), currentNode); 
    }
    this_StatusStatement_1=ruleStatusStatement
    { 
        $current = $this_StatusStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExtensionSubstatementAccess().getDescriptionStatementParserRuleCall_2(), currentNode); 
    }
    this_DescriptionStatement_2=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExtensionSubstatementAccess().getReferenceStatementParserRuleCall_3(), currentNode); 
    }
    this_ReferenceStatement_3=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExtensionSubstatementAccess().getUnknownStatementParserRuleCall_4(), currentNode); 
    }
    this_UnknownStatement_4=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleArgumentStatement
entryRuleArgumentStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArgumentStatementRule(), currentNode); }
	 iv_ruleArgumentStatement=ruleArgumentStatement 
	 { $current=$iv_ruleArgumentStatement.current; } 
	 EOF 
;

// Rule ArgumentStatement
ruleArgumentStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'argument' 
    {
        createLeafNode(grammarAccess.getArgumentStatementAccess().getArgumentKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getArgumentStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArgumentStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getArgumentStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getArgumentStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getArgumentStatementAccess().getArgumentsubstatementsArgumentSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_argumentsubstatements_4_0=ruleArgumentSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArgumentStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"argumentsubstatements",
	        		lv_argumentsubstatements_4_0, 
	        		"ArgumentSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getArgumentStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleArgumentSubstatement
entryRuleArgumentSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArgumentSubstatementRule(), currentNode); }
	 iv_ruleArgumentSubstatement=ruleArgumentSubstatement 
	 { $current=$iv_ruleArgumentSubstatement.current; } 
	 EOF 
;

// Rule ArgumentSubstatement
ruleArgumentSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getArgumentSubstatementAccess().getYinElementStatementParserRuleCall_0(), currentNode); 
    }
    this_YinElementStatement_0=ruleYinElementStatement
    { 
        $current = $this_YinElementStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getArgumentSubstatementAccess().getUnknownStatementParserRuleCall_1(), currentNode); 
    }
    this_UnknownStatement_1=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleIdentityStatement
entryRuleIdentityStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIdentityStatementRule(), currentNode); }
	 iv_ruleIdentityStatement=ruleIdentityStatement 
	 { $current=$iv_ruleIdentityStatement.current; } 
	 EOF 
;

// Rule IdentityStatement
ruleIdentityStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'identity' 
    {
        createLeafNode(grammarAccess.getIdentityStatementAccess().getIdentityKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIdentityStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIdentityStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getIdentityStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getIdentityStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIdentityStatementAccess().getIdentitysubstatementsIdentitySubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_identitysubstatements_4_0=ruleIdentitySubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIdentityStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"identitysubstatements",
	        		lv_identitysubstatements_4_0, 
	        		"IdentitySubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getIdentityStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleIdentitySubstatement
entryRuleIdentitySubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIdentitySubstatementRule(), currentNode); }
	 iv_ruleIdentitySubstatement=ruleIdentitySubstatement 
	 { $current=$iv_ruleIdentitySubstatement.current; } 
	 EOF 
;

// Rule IdentitySubstatement
ruleIdentitySubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getIdentitySubstatementAccess().getBaseStatementParserRuleCall_0(), currentNode); 
    }
    this_BaseStatement_0=ruleBaseStatement
    { 
        $current = $this_BaseStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getIdentitySubstatementAccess().getStatusStatementParserRuleCall_1(), currentNode); 
    }
    this_StatusStatement_1=ruleStatusStatement
    { 
        $current = $this_StatusStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getIdentitySubstatementAccess().getDescriptionStatementParserRuleCall_2(), currentNode); 
    }
    this_DescriptionStatement_2=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getIdentitySubstatementAccess().getReferenceStatementParserRuleCall_3(), currentNode); 
    }
    this_ReferenceStatement_3=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getIdentitySubstatementAccess().getUnknownStatementParserRuleCall_4(), currentNode); 
    }
    this_UnknownStatement_4=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleFeatureStatement
entryRuleFeatureStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFeatureStatementRule(), currentNode); }
	 iv_ruleFeatureStatement=ruleFeatureStatement 
	 { $current=$iv_ruleFeatureStatement.current; } 
	 EOF 
;

// Rule FeatureStatement
ruleFeatureStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'feature' 
    {
        createLeafNode(grammarAccess.getFeatureStatementAccess().getFeatureKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFeatureStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getFeatureStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getFeatureStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFeatureStatementAccess().getFeaturesubstatementsFeatureSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_featuresubstatements_4_0=ruleFeatureSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"featuresubstatements",
	        		lv_featuresubstatements_4_0, 
	        		"FeatureSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getFeatureStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleFeatureSubstatement
entryRuleFeatureSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFeatureSubstatementRule(), currentNode); }
	 iv_ruleFeatureSubstatement=ruleFeatureSubstatement 
	 { $current=$iv_ruleFeatureSubstatement.current; } 
	 EOF 
;

// Rule FeatureSubstatement
ruleFeatureSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getFeatureSubstatementAccess().getIfFeatureStatementParserRuleCall_0(), currentNode); 
    }
    this_IfFeatureStatement_0=ruleIfFeatureStatement
    { 
        $current = $this_IfFeatureStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getFeatureSubstatementAccess().getStatusStatementParserRuleCall_1(), currentNode); 
    }
    this_StatusStatement_1=ruleStatusStatement
    { 
        $current = $this_StatusStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getFeatureSubstatementAccess().getDescriptionStatementParserRuleCall_2(), currentNode); 
    }
    this_DescriptionStatement_2=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getFeatureSubstatementAccess().getReferenceStatementParserRuleCall_3(), currentNode); 
    }
    this_ReferenceStatement_3=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getFeatureSubstatementAccess().getUnknownStatementParserRuleCall_4(), currentNode); 
    }
    this_UnknownStatement_4=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleBelongsToStatement
entryRuleBelongsToStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBelongsToStatementRule(), currentNode); }
	 iv_ruleBelongsToStatement=ruleBelongsToStatement 
	 { $current=$iv_ruleBelongsToStatement.current; } 
	 EOF 
;

// Rule BelongsToStatement
ruleBelongsToStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'belongs-to' 
    {
        createLeafNode(grammarAccess.getBelongsToStatementAccess().getBelongsToKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBelongsToStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBelongsToStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getBelongsToStatementAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBelongsToStatementAccess().getBelongstosubstatementBelongsToSubstatementParserRuleCall_3_0(), currentNode); 
	    }
		lv_belongstosubstatement_3_0=ruleBelongsToSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBelongsToStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"belongstosubstatement",
	        		lv_belongstosubstatement_3_0, 
	        		"BelongsToSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getBelongsToStatementAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleBelongsToSubstatement
entryRuleBelongsToSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBelongsToSubstatementRule(), currentNode); }
	 iv_ruleBelongsToSubstatement=ruleBelongsToSubstatement 
	 { $current=$iv_ruleBelongsToSubstatement.current; } 
	 EOF 
;

// Rule BelongsToSubstatement
ruleBelongsToSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getBelongsToSubstatementAccess().getPrefixStatementParserRuleCall_0(), currentNode); 
    }
    this_PrefixStatement_0=rulePrefixStatement
    { 
        $current = $this_PrefixStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getBelongsToSubstatementAccess().getUnknownStatementParserRuleCall_1(), currentNode); 
    }
    this_UnknownStatement_1=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleTypedefStatement
entryRuleTypedefStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypedefStatementRule(), currentNode); }
	 iv_ruleTypedefStatement=ruleTypedefStatement 
	 { $current=$iv_ruleTypedefStatement.current; } 
	 EOF 
;

// Rule TypedefStatement
ruleTypedefStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'typedef' 
    {
        createLeafNode(grammarAccess.getTypedefStatementAccess().getTypedefKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypedefStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypedefStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getTypedefStatementAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypedefStatementAccess().getTypedefsubstatemnetTypedefSubstatementParserRuleCall_3_0(), currentNode); 
	    }
		lv_typedefsubstatemnet_3_0=ruleTypedefSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypedefStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"typedefsubstatemnet",
	        		lv_typedefsubstatemnet_3_0, 
	        		"TypedefSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getTypedefStatementAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleTypedefSubstatement
entryRuleTypedefSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypedefSubstatementRule(), currentNode); }
	 iv_ruleTypedefSubstatement=ruleTypedefSubstatement 
	 { $current=$iv_ruleTypedefSubstatement.current; } 
	 EOF 
;

// Rule TypedefSubstatement
ruleTypedefSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getTypedefSubstatementAccess().getTypeStatementParserRuleCall_0(), currentNode); 
    }
    this_TypeStatement_0=ruleTypeStatement
    { 
        $current = $this_TypeStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypedefSubstatementAccess().getDescriptionStatementParserRuleCall_1(), currentNode); 
    }
    this_DescriptionStatement_1=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypedefSubstatementAccess().getReferenceStatementParserRuleCall_2(), currentNode); 
    }
    this_ReferenceStatement_2=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypedefSubstatementAccess().getDefaultStatementParserRuleCall_3(), currentNode); 
    }
    this_DefaultStatement_3=ruleDefaultStatement
    { 
        $current = $this_DefaultStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypedefSubstatementAccess().getStatusStatementParserRuleCall_4(), currentNode); 
    }
    this_StatusStatement_4=ruleStatusStatement
    { 
        $current = $this_StatusStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypedefSubstatementAccess().getUnitsStatementParserRuleCall_5(), currentNode); 
    }
    this_UnitsStatement_5=ruleUnitsStatement
    { 
        $current = $this_UnitsStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypedefSubstatementAccess().getUnknownStatementParserRuleCall_6(), currentNode); 
    }
    this_UnknownStatement_6=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_6.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleTypeStatement
entryRuleTypeStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeStatementRule(), currentNode); }
	 iv_ruleTypeStatement=ruleTypeStatement 
	 { $current=$iv_ruleTypeStatement.current; } 
	 EOF 
;

// Rule TypeStatement
ruleTypeStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'type' 
    {
        createLeafNode(grammarAccess.getTypeStatementAccess().getTypeKeyword_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeStatementAccess().getTypeBuiltInTypeParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_type_1_0=ruleBuiltInType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_1_0, 
	        		"BuiltInType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeStatementAccess().getPreSTRINGARGParserRuleCall_1_1_0_0_0(), currentNode); 
	    }
		lv_pre_2_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pre",
	        		lv_pre_2_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getTypeStatementAccess().getColonKeyword_1_1_0_1(), null); 
    }
)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTypeStatementAccess().getImporttypeTypedefStatementCrossReference_1_1_1_0(), "importtype"); 
	}

)
)))(	';' 
    {
        createLeafNode(grammarAccess.getTypeStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getTypeStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeStatementAccess().getTypesubstatementsTypeSubStatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_typesubstatements_7_0=ruleTypeSubStatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"typesubstatements",
	        		lv_typesubstatements_7_0, 
	        		"TypeSubStatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getTypeStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleTypeSubStatement
entryRuleTypeSubStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeSubStatementRule(), currentNode); }
	 iv_ruleTypeSubStatement=ruleTypeSubStatement 
	 { $current=$iv_ruleTypeSubStatement.current; } 
	 EOF 
;

// Rule TypeSubStatement
ruleTypeSubStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getBitStatementParserRuleCall_0(), currentNode); 
    }
    this_BitStatement_0=ruleBitStatement
    { 
        $current = $this_BitStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getFractionDigitsStatementParserRuleCall_1(), currentNode); 
    }
    this_FractionDigitsStatement_1=ruleFractionDigitsStatement
    { 
        $current = $this_FractionDigitsStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getDefaultStatementParserRuleCall_2(), currentNode); 
    }
    this_DefaultStatement_2=ruleDefaultStatement
    { 
        $current = $this_DefaultStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getBaseStatementParserRuleCall_3(), currentNode); 
    }
    this_BaseStatement_3=ruleBaseStatement
    { 
        $current = $this_BaseStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getEnumStatementParserRuleCall_4(), currentNode); 
    }
    this_EnumStatement_4=ruleEnumStatement
    { 
        $current = $this_EnumStatement_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getLengthStatementParserRuleCall_5(), currentNode); 
    }
    this_LengthStatement_5=ruleLengthStatement
    { 
        $current = $this_LengthStatement_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getPathStatementParserRuleCall_6(), currentNode); 
    }
    this_PathStatement_6=rulePathStatement
    { 
        $current = $this_PathStatement_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getPatternStatementParserRuleCall_7(), currentNode); 
    }
    this_PatternStatement_7=rulePatternStatement
    { 
        $current = $this_PatternStatement_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getRangeStatementParserRuleCall_8(), currentNode); 
    }
    this_RangeStatement_8=ruleRangeStatement
    { 
        $current = $this_RangeStatement_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getRequireInstanceStatementParserRuleCall_9(), currentNode); 
    }
    this_RequireInstanceStatement_9=ruleRequireInstanceStatement
    { 
        $current = $this_RequireInstanceStatement_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getTypeStatementParserRuleCall_10(), currentNode); 
    }
    this_TypeStatement_10=ruleTypeStatement
    { 
        $current = $this_TypeStatement_10.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeSubStatementAccess().getUnknownStatementParserRuleCall_11(), currentNode); 
    }
    this_UnknownStatement_11=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_11.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleBitStatement
entryRuleBitStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBitStatementRule(), currentNode); }
	 iv_ruleBitStatement=ruleBitStatement 
	 { $current=$iv_ruleBitStatement.current; } 
	 EOF 
;

// Rule BitStatement
ruleBitStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'bit' 
    {
        createLeafNode(grammarAccess.getBitStatementAccess().getBitKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBitStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getBitStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getBitStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBitStatementAccess().getBitsubstatementsBitSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_bitsubstatements_4_0=ruleBitSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"bitsubstatements",
	        		lv_bitsubstatements_4_0, 
	        		"BitSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getBitStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleBitSubstatement
entryRuleBitSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBitSubstatementRule(), currentNode); }
	 iv_ruleBitSubstatement=ruleBitSubstatement 
	 { $current=$iv_ruleBitSubstatement.current; } 
	 EOF 
;

// Rule BitSubstatement
ruleBitSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getBitSubstatementAccess().getDescriptionStatementParserRuleCall_0(), currentNode); 
    }
    this_DescriptionStatement_0=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getBitSubstatementAccess().getReferenceStatementParserRuleCall_1(), currentNode); 
    }
    this_ReferenceStatement_1=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getBitSubstatementAccess().getStatusStatementParserRuleCall_2(), currentNode); 
    }
    this_StatusStatement_2=ruleStatusStatement
    { 
        $current = $this_StatusStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getBitSubstatementAccess().getPositionStatementParserRuleCall_3(), currentNode); 
    }
    this_PositionStatement_3=rulePositionStatement
    { 
        $current = $this_PositionStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getBitSubstatementAccess().getUnknownStatementParserRuleCall_4(), currentNode); 
    }
    this_UnknownStatement_4=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleEnumStatement
entryRuleEnumStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEnumStatementRule(), currentNode); }
	 iv_ruleEnumStatement=ruleEnumStatement 
	 { $current=$iv_ruleEnumStatement.current; } 
	 EOF 
;

// Rule EnumStatement
ruleEnumStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'enum' 
    {
        createLeafNode(grammarAccess.getEnumStatementAccess().getEnumKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEnumStatementAccess().getNameSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEnumStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getEnumStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getEnumStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEnumStatementAccess().getEnumsubstatementsEnumSubstatementParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_enumsubstatements_4_0=ruleEnumSubstatement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEnumStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"enumsubstatements",
	        		lv_enumsubstatements_4_0, 
	        		"EnumSubstatement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getEnumStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleEnumSubstatement
entryRuleEnumSubstatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEnumSubstatementRule(), currentNode); }
	 iv_ruleEnumSubstatement=ruleEnumSubstatement 
	 { $current=$iv_ruleEnumSubstatement.current; } 
	 EOF 
;

// Rule EnumSubstatement
ruleEnumSubstatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getEnumSubstatementAccess().getDescriptionStatementParserRuleCall_0(), currentNode); 
    }
    this_DescriptionStatement_0=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getEnumSubstatementAccess().getReferenceStatementParserRuleCall_1(), currentNode); 
    }
    this_ReferenceStatement_1=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getEnumSubstatementAccess().getStatusStatementParserRuleCall_2(), currentNode); 
    }
    this_StatusStatement_2=ruleStatusStatement
    { 
        $current = $this_StatusStatement_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getEnumSubstatementAccess().getValueStatementParserRuleCall_3(), currentNode); 
    }
    this_ValueStatement_3=ruleValueStatement
    { 
        $current = $this_ValueStatement_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getEnumSubstatementAccess().getUnknownStatementParserRuleCall_4(), currentNode); 
    }
    this_UnknownStatement_4=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleImportStatement
entryRuleImportStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImportStatementRule(), currentNode); }
	 iv_ruleImportStatement=ruleImportStatement 
	 { $current=$iv_ruleImportStatement.current; } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'import' 
    {
        createLeafNode(grammarAccess.getImportStatementAccess().getImportKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImportStatementAccess().getImportURISTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_importURI_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"importURI",
	        		lv_importURI_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getImportStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getImportStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImportStatementAccess().getImportsubstatementsImportSubstatementsParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_importsubstatements_4_0=ruleImportSubstatements		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"importsubstatements",
	        		lv_importsubstatements_4_0, 
	        		"ImportSubstatements", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getImportStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleImportSubstatements
entryRuleImportSubstatements returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImportSubstatementsRule(), currentNode); }
	 iv_ruleImportSubstatements=ruleImportSubstatements 
	 { $current=$iv_ruleImportSubstatements.current; } 
	 EOF 
;

// Rule ImportSubstatements
ruleImportSubstatements returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImportSubstatementsAccess().getPrefixStatementParserRuleCall_0(), currentNode); 
    }
    this_PrefixStatement_0=rulePrefixStatement
    { 
        $current = $this_PrefixStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getImportSubstatementsAccess().getRevisionDateStatementParserRuleCall_1(), currentNode); 
    }
    this_RevisionDateStatement_1=ruleRevisionDateStatement
    { 
        $current = $this_RevisionDateStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getImportSubstatementsAccess().getUnknownStatementParserRuleCall_2(), currentNode); 
    }
    this_UnknownStatement_2=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleIncludeStatement
entryRuleIncludeStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIncludeStatementRule(), currentNode); }
	 iv_ruleIncludeStatement=ruleIncludeStatement 
	 { $current=$iv_ruleIncludeStatement.current; } 
	 EOF 
;

// Rule IncludeStatement
ruleIncludeStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'include' 
    {
        createLeafNode(grammarAccess.getIncludeStatementAccess().getIncludeKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIncludeStatementAccess().getImportURISTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_importURI_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIncludeStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"importURI",
	        		lv_importURI_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getIncludeStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getIncludeStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getIncludeStatementAccess().getIncludesubstatementsIncludeSubstatementsParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_includesubstatements_4_0=ruleIncludeSubstatements		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIncludeStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"includesubstatements",
	        		lv_includesubstatements_4_0, 
	        		"IncludeSubstatements", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getIncludeStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleIncludeSubstatements
entryRuleIncludeSubstatements returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIncludeSubstatementsRule(), currentNode); }
	 iv_ruleIncludeSubstatements=ruleIncludeSubstatements 
	 { $current=$iv_ruleIncludeSubstatements.current; } 
	 EOF 
;

// Rule IncludeSubstatements
ruleIncludeSubstatements returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getIncludeSubstatementsAccess().getRevisionDateStatementParserRuleCall_0(), currentNode); 
    }
    this_RevisionDateStatement_0=ruleRevisionDateStatement
    { 
        $current = $this_RevisionDateStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getIncludeSubstatementsAccess().getUnknownStatementParserRuleCall_1(), currentNode); 
    }
    this_UnknownStatement_1=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleWhenStatement
entryRuleWhenStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWhenStatementRule(), currentNode); }
	 iv_ruleWhenStatement=ruleWhenStatement 
	 { $current=$iv_ruleWhenStatement.current; } 
	 EOF 
;

// Rule WhenStatement
ruleWhenStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'when' 
    {
        createLeafNode(grammarAccess.getWhenStatementAccess().getWhenKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWhenStatementAccess().getArgSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_arg_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWhenStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arg",
	        		lv_arg_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getWhenStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getWhenStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWhenStatementAccess().getWhensubstatementsWhenSubstatementsParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_whensubstatements_4_0=ruleWhenSubstatements		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWhenStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"whensubstatements",
	        		lv_whensubstatements_4_0, 
	        		"WhenSubstatements", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getWhenStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleWhenSubstatements
entryRuleWhenSubstatements returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWhenSubstatementsRule(), currentNode); }
	 iv_ruleWhenSubstatements=ruleWhenSubstatements 
	 { $current=$iv_ruleWhenSubstatements.current; } 
	 EOF 
;

// Rule WhenSubstatements
ruleWhenSubstatements returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getWhenSubstatementsAccess().getDescriptionStatementParserRuleCall_0(), currentNode); 
    }
    this_DescriptionStatement_0=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWhenSubstatementsAccess().getReferenceStatementParserRuleCall_1(), currentNode); 
    }
    this_ReferenceStatement_1=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWhenSubstatementsAccess().getUnknownStatementParserRuleCall_2(), currentNode); 
    }
    this_UnknownStatement_2=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleRevisionStatement
entryRuleRevisionStatement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRevisionStatementRule(), currentNode); }
	 iv_ruleRevisionStatement=ruleRevisionStatement 
	 { $current=$iv_ruleRevisionStatement.current; } 
	 EOF 
;

// Rule RevisionStatement
ruleRevisionStatement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'revision' 
    {
        createLeafNode(grammarAccess.getRevisionStatementAccess().getRevisionKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRevisionStatementAccess().getDateSTRINGARGParserRuleCall_1_0(), currentNode); 
	    }
		lv_date_1_0=ruleSTRINGARG		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRevisionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"date",
	        		lv_date_1_0, 
	        		"STRINGARG", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getRevisionStatementAccess().getSemicolonKeyword_2_0(), null); 
    }

    |(	'{' 
    {
        createLeafNode(grammarAccess.getRevisionStatementAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRevisionStatementAccess().getRevisionsubstatementsRevisionSubstatementsParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_revisionsubstatements_4_0=ruleRevisionSubstatements		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRevisionStatementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"revisionsubstatements",
	        		lv_revisionsubstatements_4_0, 
	        		"RevisionSubstatements", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRevisionStatementAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
    }
)))
;





// Entry rule entryRuleRevisionSubstatements
entryRuleRevisionSubstatements returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRevisionSubstatementsRule(), currentNode); }
	 iv_ruleRevisionSubstatements=ruleRevisionSubstatements 
	 { $current=$iv_ruleRevisionSubstatements.current; } 
	 EOF 
;

// Rule RevisionSubstatements
ruleRevisionSubstatements returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getRevisionSubstatementsAccess().getDescriptionStatementParserRuleCall_0(), currentNode); 
    }
    this_DescriptionStatement_0=ruleDescriptionStatement
    { 
        $current = $this_DescriptionStatement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRevisionSubstatementsAccess().getReferenceStatementParserRuleCall_1(), currentNode); 
    }
    this_ReferenceStatement_1=ruleReferenceStatement
    { 
        $current = $this_ReferenceStatement_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getRevisionSubstatementsAccess().getUnknownStatementParserRuleCall_2(), currentNode); 
    }
    this_UnknownStatement_2=ruleUnknownStatement
    { 
        $current = $this_UnknownStatement_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleBuiltInType
entryRuleBuiltInType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBuiltInTypeRule(), currentNode); }
	 iv_ruleBuiltInType=ruleBuiltInType 
	 { $current=$iv_ruleBuiltInType.current; } 
	 EOF 
;

// Rule BuiltInType
ruleBuiltInType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
(
		lv_btype_0_1=	'binary' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeBinaryKeyword_0_0(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_2=	'bits' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeBitsKeyword_0_1(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_3=	'boolean' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeBooleanKeyword_0_2(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_3, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_4=	'decimal64' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeDecimal64Keyword_0_3(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_4, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_5=	'empty' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeEmptyKeyword_0_4(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_5, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_6=	'enumeration' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeEnumerationKeyword_0_5(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_6, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_7=	'identityref' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeIdentityrefKeyword_0_6(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_7, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_8=	'instance-identifier' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeInstanceIdentifierKeyword_0_7(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_8, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_9=	'int8' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeInt8Keyword_0_8(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_9, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_10=	'int16' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeInt16Keyword_0_9(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_10, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_11=	'int32' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeInt32Keyword_0_10(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_11, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_12=	'int64' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeInt64Keyword_0_11(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_12, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_13=	'leafref' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeLeafrefKeyword_0_12(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_13, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_14=	'string' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeStringKeyword_0_13(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_14, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_15=	'uint8' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeUint8Keyword_0_14(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_15, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_16=	'uint16' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeUint16Keyword_0_15(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_16, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_17=	'uint32' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeUint32Keyword_0_16(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_17, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_18=	'uint64' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeUint64Keyword_0_17(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_18, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_btype_0_19=	'union' 
    {
        createLeafNode(grammarAccess.getBuiltInTypeAccess().getBtypeUnionKeyword_0_18(), "btype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBuiltInTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "btype", lv_btype_0_19, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)
;





// Entry rule entryRuleCUSTOMSTRING
entryRuleCUSTOMSTRING returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCUSTOMSTRINGRule(), currentNode); } 
	 iv_ruleCUSTOMSTRING=ruleCUSTOMSTRING 
	 { $current=$iv_ruleCUSTOMSTRING.current.getText(); }  
	 EOF 
;

// Rule CUSTOMSTRING
ruleCUSTOMSTRING returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getCUSTOMSTRINGAccess().getSTRINGTerminalRuleCall_0(), null); 
    }
(
	kw='+' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCUSTOMSTRINGAccess().getPlusSignKeyword_1_0(), null); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    createLeafNode(grammarAccess.getCUSTOMSTRINGAccess().getSTRINGTerminalRuleCall_1_1(), null); 
    }
)*)
    ;





// Entry rule entryRuleSTRINGARG
entryRuleSTRINGARG returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSTRINGARGRule(), currentNode); } 
	 iv_ruleSTRINGARG=ruleSTRINGARG 
	 { $current=$iv_ruleSTRINGARG.current.getText(); }  
	 EOF 
;

// Rule STRINGARG
ruleSTRINGARG returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getSTRINGARGAccess().getIDTerminalRuleCall_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSTRINGARGAccess().getCUSTOMSTRINGParserRuleCall_1(), currentNode); 
    }
    this_CUSTOMSTRING_1=ruleCUSTOMSTRING    {
		$current.merge(this_CUSTOMSTRING_1);
    }

    { 
        currentNode = currentNode.getParent();
    }

    |
	kw='default' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSTRINGARGAccess().getDefaultKeyword_2(), null); 
    }
)
    ;





// Entry rule entryRuleSTRINGARG2
entryRuleSTRINGARG2 returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSTRINGARG2Rule(), currentNode); } 
	 iv_ruleSTRINGARG2=ruleSTRINGARG2 
	 { $current=$iv_ruleSTRINGARG2.current.getText(); }  
	 EOF 
;

// Rule STRINGARG2
ruleSTRINGARG2 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getSTRINGARG2Access().getIDTerminalRuleCall_0(), null); 
    }

	kw=':' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSTRINGARG2Access().getColonKeyword_1(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(grammarAccess.getSTRINGARG2Access().getIDTerminalRuleCall_2(), null); 
    }
)
    ;





RULE_STRING : ('"' ( options {greedy=false;} : . )*'"'|'\'' ( options {greedy=false;} : . )*'\'');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'-'|'.'|'0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;



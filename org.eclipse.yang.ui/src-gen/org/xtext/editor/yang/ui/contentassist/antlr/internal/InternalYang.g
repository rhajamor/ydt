/*
* generated by Xtext
*/
grammar InternalYang;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.editor.yang.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.editor.yang.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.editor.yang.services.YangGrammarAccess;

}

@parser::members {
 
 	private YangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(YangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleYangFile
entryRuleYangFile 
:
{ before(grammarAccess.getYangFileRule()); }
	 ruleYangFile
{ after(grammarAccess.getYangFileRule()); } 
	 EOF 
;

// Rule YangFile
ruleYangFile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getYangFileAccess().getAlternatives()); }
(rule__YangFile__Alternatives)
{ after(grammarAccess.getYangFileAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleStatement
entryRuleModuleStatement 
:
{ before(grammarAccess.getModuleStatementRule()); }
	 ruleModuleStatement
{ after(grammarAccess.getModuleStatementRule()); } 
	 EOF 
;

// Rule ModuleStatement
ruleModuleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleStatementAccess().getAlternatives()); }
(rule__ModuleStatement__Alternatives)
{ after(grammarAccess.getModuleStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubModule
entryRuleSubModule 
:
{ before(grammarAccess.getSubModuleRule()); }
	 ruleSubModule
{ after(grammarAccess.getSubModuleRule()); } 
	 EOF 
;

// Rule SubModule
ruleSubModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubModuleAccess().getGroup()); }
(rule__SubModule__Group__0)
{ after(grammarAccess.getSubModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubmoduleStatement
entryRuleSubmoduleStatement 
:
{ before(grammarAccess.getSubmoduleStatementRule()); }
	 ruleSubmoduleStatement
{ after(grammarAccess.getSubmoduleStatementRule()); } 
	 EOF 
;

// Rule SubmoduleStatement
ruleSubmoduleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubmoduleStatementAccess().getAlternatives()); }
(rule__SubmoduleStatement__Alternatives)
{ after(grammarAccess.getSubmoduleStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDatadefStatement
entryRuleDatadefStatement 
:
{ before(grammarAccess.getDatadefStatementRule()); }
	 ruleDatadefStatement
{ after(grammarAccess.getDatadefStatementRule()); } 
	 EOF 
;

// Rule DatadefStatement
ruleDatadefStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDatadefStatementAccess().getAlternatives()); }
(rule__DatadefStatement__Alternatives)
{ after(grammarAccess.getDatadefStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleYangVersionStatement
entryRuleYangVersionStatement 
:
{ before(grammarAccess.getYangVersionStatementRule()); }
	 ruleYangVersionStatement
{ after(grammarAccess.getYangVersionStatementRule()); } 
	 EOF 
;

// Rule YangVersionStatement
ruleYangVersionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getYangVersionStatementAccess().getGroup()); }
(rule__YangVersionStatement__Group__0)
{ after(grammarAccess.getYangVersionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrganizationStatement
entryRuleOrganizationStatement 
:
{ before(grammarAccess.getOrganizationStatementRule()); }
	 ruleOrganizationStatement
{ after(grammarAccess.getOrganizationStatementRule()); } 
	 EOF 
;

// Rule OrganizationStatement
ruleOrganizationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrganizationStatementAccess().getGroup()); }
(rule__OrganizationStatement__Group__0)
{ after(grammarAccess.getOrganizationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContactStatement
entryRuleContactStatement 
:
{ before(grammarAccess.getContactStatementRule()); }
	 ruleContactStatement
{ after(grammarAccess.getContactStatementRule()); } 
	 EOF 
;

// Rule ContactStatement
ruleContactStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContactStatementAccess().getGroup()); }
(rule__ContactStatement__Group__0)
{ after(grammarAccess.getContactStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDescriptionStatement
entryRuleDescriptionStatement 
:
{ before(grammarAccess.getDescriptionStatementRule()); }
	 ruleDescriptionStatement
{ after(grammarAccess.getDescriptionStatementRule()); } 
	 EOF 
;

// Rule DescriptionStatement
ruleDescriptionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDescriptionStatementAccess().getGroup()); }
(rule__DescriptionStatement__Group__0)
{ after(grammarAccess.getDescriptionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceStatement
entryRuleReferenceStatement 
:
{ before(grammarAccess.getReferenceStatementRule()); }
	 ruleReferenceStatement
{ after(grammarAccess.getReferenceStatementRule()); } 
	 EOF 
;

// Rule ReferenceStatement
ruleReferenceStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceStatementAccess().getGroup()); }
(rule__ReferenceStatement__Group__0)
{ after(grammarAccess.getReferenceStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceStatement
entryRuleNamespaceStatement 
:
{ before(grammarAccess.getNamespaceStatementRule()); }
	 ruleNamespaceStatement
{ after(grammarAccess.getNamespaceStatementRule()); } 
	 EOF 
;

// Rule NamespaceStatement
ruleNamespaceStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceStatementAccess().getGroup()); }
(rule__NamespaceStatement__Group__0)
{ after(grammarAccess.getNamespaceStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixStatement
entryRulePrefixStatement 
:
{ before(grammarAccess.getPrefixStatementRule()); }
	 rulePrefixStatement
{ after(grammarAccess.getPrefixStatementRule()); } 
	 EOF 
;

// Rule PrefixStatement
rulePrefixStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixStatementAccess().getGroup()); }
(rule__PrefixStatement__Group__0)
{ after(grammarAccess.getPrefixStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequireInstanceStatement
entryRuleRequireInstanceStatement 
:
{ before(grammarAccess.getRequireInstanceStatementRule()); }
	 ruleRequireInstanceStatement
{ after(grammarAccess.getRequireInstanceStatementRule()); } 
	 EOF 
;

// Rule RequireInstanceStatement
ruleRequireInstanceStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getGroup()); }
(rule__RequireInstanceStatement__Group__0)
{ after(grammarAccess.getRequireInstanceStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathStatement
entryRulePathStatement 
:
{ before(grammarAccess.getPathStatementRule()); }
	 rulePathStatement
{ after(grammarAccess.getPathStatementRule()); } 
	 EOF 
;

// Rule PathStatement
rulePathStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathStatementAccess().getGroup()); }
(rule__PathStatement__Group__0)
{ after(grammarAccess.getPathStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePositionStatement
entryRulePositionStatement 
:
{ before(grammarAccess.getPositionStatementRule()); }
	 rulePositionStatement
{ after(grammarAccess.getPositionStatementRule()); } 
	 EOF 
;

// Rule PositionStatement
rulePositionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPositionStatementAccess().getGroup()); }
(rule__PositionStatement__Group__0)
{ after(grammarAccess.getPositionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueStatement
entryRuleValueStatement 
:
{ before(grammarAccess.getValueStatementRule()); }
	 ruleValueStatement
{ after(grammarAccess.getValueStatementRule()); } 
	 EOF 
;

// Rule ValueStatement
ruleValueStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueStatementAccess().getGroup()); }
(rule__ValueStatement__Group__0)
{ after(grammarAccess.getValueStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleErrorAppTagStatement
entryRuleErrorAppTagStatement 
:
{ before(grammarAccess.getErrorAppTagStatementRule()); }
	 ruleErrorAppTagStatement
{ after(grammarAccess.getErrorAppTagStatementRule()); } 
	 EOF 
;

// Rule ErrorAppTagStatement
ruleErrorAppTagStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getGroup()); }
(rule__ErrorAppTagStatement__Group__0)
{ after(grammarAccess.getErrorAppTagStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleErrorMessageStatement
entryRuleErrorMessageStatement 
:
{ before(grammarAccess.getErrorMessageStatementRule()); }
	 ruleErrorMessageStatement
{ after(grammarAccess.getErrorMessageStatementRule()); } 
	 EOF 
;

// Rule ErrorMessageStatement
ruleErrorMessageStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getGroup()); }
(rule__ErrorMessageStatement__Group__0)
{ after(grammarAccess.getErrorMessageStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitsStatement
entryRuleUnitsStatement 
:
{ before(grammarAccess.getUnitsStatementRule()); }
	 ruleUnitsStatement
{ after(grammarAccess.getUnitsStatementRule()); } 
	 EOF 
;

// Rule UnitsStatement
ruleUnitsStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitsStatementAccess().getGroup()); }
(rule__UnitsStatement__Group__0)
{ after(grammarAccess.getUnitsStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultStatement
entryRuleDefaultStatement 
:
{ before(grammarAccess.getDefaultStatementRule()); }
	 ruleDefaultStatement
{ after(grammarAccess.getDefaultStatementRule()); } 
	 EOF 
;

// Rule DefaultStatement
ruleDefaultStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultStatementAccess().getGroup()); }
(rule__DefaultStatement__Group__0)
{ after(grammarAccess.getDefaultStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatusStatement
entryRuleStatusStatement 
:
{ before(grammarAccess.getStatusStatementRule()); }
	 ruleStatusStatement
{ after(grammarAccess.getStatusStatementRule()); } 
	 EOF 
;

// Rule StatusStatement
ruleStatusStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatusStatementAccess().getGroup()); }
(rule__StatusStatement__Group__0)
{ after(grammarAccess.getStatusStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRevisionDateStatement
entryRuleRevisionDateStatement 
:
{ before(grammarAccess.getRevisionDateStatementRule()); }
	 ruleRevisionDateStatement
{ after(grammarAccess.getRevisionDateStatementRule()); } 
	 EOF 
;

// Rule RevisionDateStatement
ruleRevisionDateStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getGroup()); }
(rule__RevisionDateStatement__Group__0)
{ after(grammarAccess.getRevisionDateStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUniqueStatement
entryRuleUniqueStatement 
:
{ before(grammarAccess.getUniqueStatementRule()); }
	 ruleUniqueStatement
{ after(grammarAccess.getUniqueStatementRule()); } 
	 EOF 
;

// Rule UniqueStatement
ruleUniqueStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUniqueStatementAccess().getGroup()); }
(rule__UniqueStatement__Group__0)
{ after(grammarAccess.getUniqueStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyStatement
entryRuleKeyStatement 
:
{ before(grammarAccess.getKeyStatementRule()); }
	 ruleKeyStatement
{ after(grammarAccess.getKeyStatementRule()); } 
	 EOF 
;

// Rule KeyStatement
ruleKeyStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyStatementAccess().getGroup()); }
(rule__KeyStatement__Group__0)
{ after(grammarAccess.getKeyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrderedbyStatement
entryRuleOrderedbyStatement 
:
{ before(grammarAccess.getOrderedbyStatementRule()); }
	 ruleOrderedbyStatement
{ after(grammarAccess.getOrderedbyStatementRule()); } 
	 EOF 
;

// Rule OrderedbyStatement
ruleOrderedbyStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getGroup()); }
(rule__OrderedbyStatement__Group__0)
{ after(grammarAccess.getOrderedbyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresenceStatement
entryRulePresenceStatement 
:
{ before(grammarAccess.getPresenceStatementRule()); }
	 rulePresenceStatement
{ after(grammarAccess.getPresenceStatementRule()); } 
	 EOF 
;

// Rule PresenceStatement
rulePresenceStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPresenceStatementAccess().getGroup()); }
(rule__PresenceStatement__Group__0)
{ after(grammarAccess.getPresenceStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMandatoryStatement
entryRuleMandatoryStatement 
:
{ before(grammarAccess.getMandatoryStatementRule()); }
	 ruleMandatoryStatement
{ after(grammarAccess.getMandatoryStatementRule()); } 
	 EOF 
;

// Rule MandatoryStatement
ruleMandatoryStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMandatoryStatementAccess().getGroup()); }
(rule__MandatoryStatement__Group__0)
{ after(grammarAccess.getMandatoryStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConfigStatement
entryRuleConfigStatement 
:
{ before(grammarAccess.getConfigStatementRule()); }
	 ruleConfigStatement
{ after(grammarAccess.getConfigStatementRule()); } 
	 EOF 
;

// Rule ConfigStatement
ruleConfigStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigStatementAccess().getGroup()); }
(rule__ConfigStatement__Group__0)
{ after(grammarAccess.getConfigStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFractionDigitsStatement
entryRuleFractionDigitsStatement 
:
{ before(grammarAccess.getFractionDigitsStatementRule()); }
	 ruleFractionDigitsStatement
{ after(grammarAccess.getFractionDigitsStatementRule()); } 
	 EOF 
;

// Rule FractionDigitsStatement
ruleFractionDigitsStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getGroup()); }
(rule__FractionDigitsStatement__Group__0)
{ after(grammarAccess.getFractionDigitsStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfFeatureStatement
entryRuleIfFeatureStatement 
:
{ before(grammarAccess.getIfFeatureStatementRule()); }
	 ruleIfFeatureStatement
{ after(grammarAccess.getIfFeatureStatementRule()); } 
	 EOF 
;

// Rule IfFeatureStatement
ruleIfFeatureStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getGroup()); }
(rule__IfFeatureStatement__Group__0)
{ after(grammarAccess.getIfFeatureStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBaseStatement
entryRuleBaseStatement 
:
{ before(grammarAccess.getBaseStatementRule()); }
	 ruleBaseStatement
{ after(grammarAccess.getBaseStatementRule()); } 
	 EOF 
;

// Rule BaseStatement
ruleBaseStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseStatementAccess().getGroup()); }
(rule__BaseStatement__Group__0)
{ after(grammarAccess.getBaseStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleYinElementStatement
entryRuleYinElementStatement 
:
{ before(grammarAccess.getYinElementStatementRule()); }
	 ruleYinElementStatement
{ after(grammarAccess.getYinElementStatementRule()); } 
	 EOF 
;

// Rule YinElementStatement
ruleYinElementStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getYinElementStatementAccess().getGroup()); }
(rule__YinElementStatement__Group__0)
{ after(grammarAccess.getYinElementStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMinElementsStatement
entryRuleMinElementsStatement 
:
{ before(grammarAccess.getMinElementsStatementRule()); }
	 ruleMinElementsStatement
{ after(grammarAccess.getMinElementsStatementRule()); } 
	 EOF 
;

// Rule MinElementsStatement
ruleMinElementsStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMinElementsStatementAccess().getGroup()); }
(rule__MinElementsStatement__Group__0)
{ after(grammarAccess.getMinElementsStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMaxElementsStatement
entryRuleMaxElementsStatement 
:
{ before(grammarAccess.getMaxElementsStatementRule()); }
	 ruleMaxElementsStatement
{ after(grammarAccess.getMaxElementsStatementRule()); } 
	 EOF 
;

// Rule MaxElementsStatement
ruleMaxElementsStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getGroup()); }
(rule__MaxElementsStatement__Group__0)
{ after(grammarAccess.getMaxElementsStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnknownStatement
entryRuleUnknownStatement 
:
{ before(grammarAccess.getUnknownStatementRule()); }
	 ruleUnknownStatement
{ after(grammarAccess.getUnknownStatementRule()); } 
	 EOF 
;

// Rule UnknownStatement
ruleUnknownStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnknownStatementAccess().getGroup()); }
(rule__UnknownStatement__Group__0)
{ after(grammarAccess.getUnknownStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnknownSubstatements
entryRuleUnknownSubstatements 
:
{ before(grammarAccess.getUnknownSubstatementsRule()); }
	 ruleUnknownSubstatements
{ after(grammarAccess.getUnknownSubstatementsRule()); } 
	 EOF 
;

// Rule UnknownSubstatements
ruleUnknownSubstatements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getGroup()); }
(rule__UnknownSubstatements__Group__0)
{ after(grammarAccess.getUnknownSubstatementsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeStatement
entryRuleRangeStatement 
:
{ before(grammarAccess.getRangeStatementRule()); }
	 ruleRangeStatement
{ after(grammarAccess.getRangeStatementRule()); } 
	 EOF 
;

// Rule RangeStatement
ruleRangeStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeStatementAccess().getGroup()); }
(rule__RangeStatement__Group__0)
{ after(grammarAccess.getRangeStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePatternStatement
entryRulePatternStatement 
:
{ before(grammarAccess.getPatternStatementRule()); }
	 rulePatternStatement
{ after(grammarAccess.getPatternStatementRule()); } 
	 EOF 
;

// Rule PatternStatement
rulePatternStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternStatementAccess().getGroup()); }
(rule__PatternStatement__Group__0)
{ after(grammarAccess.getPatternStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLengthStatement
entryRuleLengthStatement 
:
{ before(grammarAccess.getLengthStatementRule()); }
	 ruleLengthStatement
{ after(grammarAccess.getLengthStatementRule()); } 
	 EOF 
;

// Rule LengthStatement
ruleLengthStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLengthStatementAccess().getGroup()); }
(rule__LengthStatement__Group__0)
{ after(grammarAccess.getLengthStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMustStatement
entryRuleMustStatement 
:
{ before(grammarAccess.getMustStatementRule()); }
	 ruleMustStatement
{ after(grammarAccess.getMustStatementRule()); } 
	 EOF 
;

// Rule MustStatement
ruleMustStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMustStatementAccess().getGroup()); }
(rule__MustStatement__Group__0)
{ after(grammarAccess.getMustStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultipleSubstatement
entryRuleMultipleSubstatement 
:
{ before(grammarAccess.getMultipleSubstatementRule()); }
	 ruleMultipleSubstatement
{ after(grammarAccess.getMultipleSubstatementRule()); } 
	 EOF 
;

// Rule MultipleSubstatement
ruleMultipleSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultipleSubstatementAccess().getAlternatives()); }
(rule__MultipleSubstatement__Alternatives)
{ after(grammarAccess.getMultipleSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRpcStatement
entryRuleRpcStatement 
:
{ before(grammarAccess.getRpcStatementRule()); }
	 ruleRpcStatement
{ after(grammarAccess.getRpcStatementRule()); } 
	 EOF 
;

// Rule RpcStatement
ruleRpcStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRpcStatementAccess().getGroup()); }
(rule__RpcStatement__Group__0)
{ after(grammarAccess.getRpcStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRpcSubstatement
entryRuleRpcSubstatement 
:
{ before(grammarAccess.getRpcSubstatementRule()); }
	 ruleRpcSubstatement
{ after(grammarAccess.getRpcSubstatementRule()); } 
	 EOF 
;

// Rule RpcSubstatement
ruleRpcSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRpcSubstatementAccess().getAlternatives()); }
(rule__RpcSubstatement__Alternatives)
{ after(grammarAccess.getRpcSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputStatement
entryRuleInputStatement 
:
{ before(grammarAccess.getInputStatementRule()); }
	 ruleInputStatement
{ after(grammarAccess.getInputStatementRule()); } 
	 EOF 
;

// Rule InputStatement
ruleInputStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputStatementAccess().getGroup()); }
(rule__InputStatement__Group__0)
{ after(grammarAccess.getInputStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputSubstatement
entryRuleInputSubstatement 
:
{ before(grammarAccess.getInputSubstatementRule()); }
	 ruleInputSubstatement
{ after(grammarAccess.getInputSubstatementRule()); } 
	 EOF 
;

// Rule InputSubstatement
ruleInputSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputSubstatementAccess().getAlternatives()); }
(rule__InputSubstatement__Alternatives)
{ after(grammarAccess.getInputSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputStatement
entryRuleOutputStatement 
:
{ before(grammarAccess.getOutputStatementRule()); }
	 ruleOutputStatement
{ after(grammarAccess.getOutputStatementRule()); } 
	 EOF 
;

// Rule OutputStatement
ruleOutputStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputStatementAccess().getGroup()); }
(rule__OutputStatement__Group__0)
{ after(grammarAccess.getOutputStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputSubstatement
entryRuleOutputSubstatement 
:
{ before(grammarAccess.getOutputSubstatementRule()); }
	 ruleOutputSubstatement
{ after(grammarAccess.getOutputSubstatementRule()); } 
	 EOF 
;

// Rule OutputSubstatement
ruleOutputSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputSubstatementAccess().getAlternatives()); }
(rule__OutputSubstatement__Alternatives)
{ after(grammarAccess.getOutputSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotificationStatement
entryRuleNotificationStatement 
:
{ before(grammarAccess.getNotificationStatementRule()); }
	 ruleNotificationStatement
{ after(grammarAccess.getNotificationStatementRule()); } 
	 EOF 
;

// Rule NotificationStatement
ruleNotificationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotificationStatementAccess().getGroup()); }
(rule__NotificationStatement__Group__0)
{ after(grammarAccess.getNotificationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotificationSubstatement
entryRuleNotificationSubstatement 
:
{ before(grammarAccess.getNotificationSubstatementRule()); }
	 ruleNotificationSubstatement
{ after(grammarAccess.getNotificationSubstatementRule()); } 
	 EOF 
;

// Rule NotificationSubstatement
ruleNotificationSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotificationSubstatementAccess().getAlternatives()); }
(rule__NotificationSubstatement__Alternatives)
{ after(grammarAccess.getNotificationSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainerStatement
entryRuleContainerStatement 
:
{ before(grammarAccess.getContainerStatementRule()); }
	 ruleContainerStatement
{ after(grammarAccess.getContainerStatementRule()); } 
	 EOF 
;

// Rule ContainerStatement
ruleContainerStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContainerStatementAccess().getGroup()); }
(rule__ContainerStatement__Group__0)
{ after(grammarAccess.getContainerStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainerSubstatement
entryRuleContainerSubstatement 
:
{ before(grammarAccess.getContainerSubstatementRule()); }
	 ruleContainerSubstatement
{ after(grammarAccess.getContainerSubstatementRule()); } 
	 EOF 
;

// Rule ContainerSubstatement
ruleContainerSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContainerSubstatementAccess().getAlternatives()); }
(rule__ContainerSubstatement__Alternatives)
{ after(grammarAccess.getContainerSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListStatement
entryRuleListStatement 
:
{ before(grammarAccess.getListStatementRule()); }
	 ruleListStatement
{ after(grammarAccess.getListStatementRule()); } 
	 EOF 
;

// Rule ListStatement
ruleListStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListStatementAccess().getGroup()); }
(rule__ListStatement__Group__0)
{ after(grammarAccess.getListStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListSubstatement
entryRuleListSubstatement 
:
{ before(grammarAccess.getListSubstatementRule()); }
	 ruleListSubstatement
{ after(grammarAccess.getListSubstatementRule()); } 
	 EOF 
;

// Rule ListSubstatement
ruleListSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListSubstatementAccess().getAlternatives()); }
(rule__ListSubstatement__Alternatives)
{ after(grammarAccess.getListSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupingStatement
entryRuleGroupingStatement 
:
{ before(grammarAccess.getGroupingStatementRule()); }
	 ruleGroupingStatement
{ after(grammarAccess.getGroupingStatementRule()); } 
	 EOF 
;

// Rule GroupingStatement
ruleGroupingStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupingStatementAccess().getGroup()); }
(rule__GroupingStatement__Group__0)
{ after(grammarAccess.getGroupingStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupingSubstatement
entryRuleGroupingSubstatement 
:
{ before(grammarAccess.getGroupingSubstatementRule()); }
	 ruleGroupingSubstatement
{ after(grammarAccess.getGroupingSubstatementRule()); } 
	 EOF 
;

// Rule GroupingSubstatement
ruleGroupingSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupingSubstatementAccess().getAlternatives()); }
(rule__GroupingSubstatement__Alternatives)
{ after(grammarAccess.getGroupingSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeafStatement
entryRuleLeafStatement 
:
{ before(grammarAccess.getLeafStatementRule()); }
	 ruleLeafStatement
{ after(grammarAccess.getLeafStatementRule()); } 
	 EOF 
;

// Rule LeafStatement
ruleLeafStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeafStatementAccess().getGroup()); }
(rule__LeafStatement__Group__0)
{ after(grammarAccess.getLeafStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeafSubstatement
entryRuleLeafSubstatement 
:
{ before(grammarAccess.getLeafSubstatementRule()); }
	 ruleLeafSubstatement
{ after(grammarAccess.getLeafSubstatementRule()); } 
	 EOF 
;

// Rule LeafSubstatement
ruleLeafSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeafSubstatementAccess().getAlternatives()); }
(rule__LeafSubstatement__Alternatives)
{ after(grammarAccess.getLeafSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeafListStatement
entryRuleLeafListStatement 
:
{ before(grammarAccess.getLeafListStatementRule()); }
	 ruleLeafListStatement
{ after(grammarAccess.getLeafListStatementRule()); } 
	 EOF 
;

// Rule LeafListStatement
ruleLeafListStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeafListStatementAccess().getGroup()); }
(rule__LeafListStatement__Group__0)
{ after(grammarAccess.getLeafListStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeafListSubstatement
entryRuleLeafListSubstatement 
:
{ before(grammarAccess.getLeafListSubstatementRule()); }
	 ruleLeafListSubstatement
{ after(grammarAccess.getLeafListSubstatementRule()); } 
	 EOF 
;

// Rule LeafListSubstatement
ruleLeafListSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeafListSubstatementAccess().getAlternatives()); }
(rule__LeafListSubstatement__Alternatives)
{ after(grammarAccess.getLeafListSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChoiceStatement
entryRuleChoiceStatement 
:
{ before(grammarAccess.getChoiceStatementRule()); }
	 ruleChoiceStatement
{ after(grammarAccess.getChoiceStatementRule()); } 
	 EOF 
;

// Rule ChoiceStatement
ruleChoiceStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChoiceStatementAccess().getGroup()); }
(rule__ChoiceStatement__Group__0)
{ after(grammarAccess.getChoiceStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChoiceSubstatement
entryRuleChoiceSubstatement 
:
{ before(grammarAccess.getChoiceSubstatementRule()); }
	 ruleChoiceSubstatement
{ after(grammarAccess.getChoiceSubstatementRule()); } 
	 EOF 
;

// Rule ChoiceSubstatement
ruleChoiceSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChoiceSubstatementAccess().getAlternatives()); }
(rule__ChoiceSubstatement__Alternatives)
{ after(grammarAccess.getChoiceSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaseStatement
entryRuleCaseStatement 
:
{ before(grammarAccess.getCaseStatementRule()); }
	 ruleCaseStatement
{ after(grammarAccess.getCaseStatementRule()); } 
	 EOF 
;

// Rule CaseStatement
ruleCaseStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseStatementAccess().getGroup()); }
(rule__CaseStatement__Group__0)
{ after(grammarAccess.getCaseStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaseSubstatement
entryRuleCaseSubstatement 
:
{ before(grammarAccess.getCaseSubstatementRule()); }
	 ruleCaseSubstatement
{ after(grammarAccess.getCaseSubstatementRule()); } 
	 EOF 
;

// Rule CaseSubstatement
ruleCaseSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseSubstatementAccess().getAlternatives()); }
(rule__CaseSubstatement__Alternatives)
{ after(grammarAccess.getCaseSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnyxmlStatement
entryRuleAnyxmlStatement 
:
{ before(grammarAccess.getAnyxmlStatementRule()); }
	 ruleAnyxmlStatement
{ after(grammarAccess.getAnyxmlStatementRule()); } 
	 EOF 
;

// Rule AnyxmlStatement
ruleAnyxmlStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getGroup()); }
(rule__AnyxmlStatement__Group__0)
{ after(grammarAccess.getAnyxmlStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnyxmlSubstatement
entryRuleAnyxmlSubstatement 
:
{ before(grammarAccess.getAnyxmlSubstatementRule()); }
	 ruleAnyxmlSubstatement
{ after(grammarAccess.getAnyxmlSubstatementRule()); } 
	 EOF 
;

// Rule AnyxmlSubstatement
ruleAnyxmlSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getAlternatives()); }
(rule__AnyxmlSubstatement__Alternatives)
{ after(grammarAccess.getAnyxmlSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsesStatement
entryRuleUsesStatement 
:
{ before(grammarAccess.getUsesStatementRule()); }
	 ruleUsesStatement
{ after(grammarAccess.getUsesStatementRule()); } 
	 EOF 
;

// Rule UsesStatement
ruleUsesStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesStatementAccess().getGroup()); }
(rule__UsesStatement__Group__0)
{ after(grammarAccess.getUsesStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsesSubstatement
entryRuleUsesSubstatement 
:
{ before(grammarAccess.getUsesSubstatementRule()); }
	 ruleUsesSubstatement
{ after(grammarAccess.getUsesSubstatementRule()); } 
	 EOF 
;

// Rule UsesSubstatement
ruleUsesSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesSubstatementAccess().getAlternatives()); }
(rule__UsesSubstatement__Alternatives)
{ after(grammarAccess.getUsesSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAugmentUsesStatement
entryRuleAugmentUsesStatement 
:
{ before(grammarAccess.getAugmentUsesStatementRule()); }
	 ruleAugmentUsesStatement
{ after(grammarAccess.getAugmentUsesStatementRule()); } 
	 EOF 
;

// Rule AugmentUsesStatement
ruleAugmentUsesStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getGroup()); }
(rule__AugmentUsesStatement__Group__0)
{ after(grammarAccess.getAugmentUsesStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAugmentStatement
entryRuleAugmentStatement 
:
{ before(grammarAccess.getAugmentStatementRule()); }
	 ruleAugmentStatement
{ after(grammarAccess.getAugmentStatementRule()); } 
	 EOF 
;

// Rule AugmentStatement
ruleAugmentStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAugmentStatementAccess().getGroup()); }
(rule__AugmentStatement__Group__0)
{ after(grammarAccess.getAugmentStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAugmentSubstatement
entryRuleAugmentSubstatement 
:
{ before(grammarAccess.getAugmentSubstatementRule()); }
	 ruleAugmentSubstatement
{ after(grammarAccess.getAugmentSubstatementRule()); } 
	 EOF 
;

// Rule AugmentSubstatement
ruleAugmentSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAugmentSubstatementAccess().getAlternatives()); }
(rule__AugmentSubstatement__Alternatives)
{ after(grammarAccess.getAugmentSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefineStatement
entryRuleRefineStatement 
:
{ before(grammarAccess.getRefineStatementRule()); }
	 ruleRefineStatement
{ after(grammarAccess.getRefineStatementRule()); } 
	 EOF 
;

// Rule RefineStatement
ruleRefineStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefineStatementAccess().getGroup()); }
(rule__RefineStatement__Group__0)
{ after(grammarAccess.getRefineStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefineSubstatement
entryRuleRefineSubstatement 
:
{ before(grammarAccess.getRefineSubstatementRule()); }
	 ruleRefineSubstatement
{ after(grammarAccess.getRefineSubstatementRule()); } 
	 EOF 
;

// Rule RefineSubstatement
ruleRefineSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefineSubstatementAccess().getAlternatives()); }
(rule__RefineSubstatement__Alternatives)
{ after(grammarAccess.getRefineSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeviationStatement
entryRuleDeviationStatement 
:
{ before(grammarAccess.getDeviationStatementRule()); }
	 ruleDeviationStatement
{ after(grammarAccess.getDeviationStatementRule()); } 
	 EOF 
;

// Rule DeviationStatement
ruleDeviationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeviationStatementAccess().getGroup()); }
(rule__DeviationStatement__Group__0)
{ after(grammarAccess.getDeviationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeviationSubstatement
entryRuleDeviationSubstatement 
:
{ before(grammarAccess.getDeviationSubstatementRule()); }
	 ruleDeviationSubstatement
{ after(grammarAccess.getDeviationSubstatementRule()); } 
	 EOF 
;

// Rule DeviationSubstatement
ruleDeviationSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeviationSubstatementAccess().getAlternatives()); }
(rule__DeviationSubstatement__Alternatives)
{ after(grammarAccess.getDeviationSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeviateStatement
entryRuleDeviateStatement 
:
{ before(grammarAccess.getDeviateStatementRule()); }
	 ruleDeviateStatement
{ after(grammarAccess.getDeviateStatementRule()); } 
	 EOF 
;

// Rule DeviateStatement
ruleDeviateStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeviateStatementAccess().getGroup()); }
(rule__DeviateStatement__Group__0)
{ after(grammarAccess.getDeviateStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeviateSubstatement
entryRuleDeviateSubstatement 
:
{ before(grammarAccess.getDeviateSubstatementRule()); }
	 ruleDeviateSubstatement
{ after(grammarAccess.getDeviateSubstatementRule()); } 
	 EOF 
;

// Rule DeviateSubstatement
ruleDeviateSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeviateSubstatementAccess().getAlternatives()); }
(rule__DeviateSubstatement__Alternatives)
{ after(grammarAccess.getDeviateSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtensionStatement
entryRuleExtensionStatement 
:
{ before(grammarAccess.getExtensionStatementRule()); }
	 ruleExtensionStatement
{ after(grammarAccess.getExtensionStatementRule()); } 
	 EOF 
;

// Rule ExtensionStatement
ruleExtensionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtensionStatementAccess().getGroup()); }
(rule__ExtensionStatement__Group__0)
{ after(grammarAccess.getExtensionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtensionSubstatement
entryRuleExtensionSubstatement 
:
{ before(grammarAccess.getExtensionSubstatementRule()); }
	 ruleExtensionSubstatement
{ after(grammarAccess.getExtensionSubstatementRule()); } 
	 EOF 
;

// Rule ExtensionSubstatement
ruleExtensionSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtensionSubstatementAccess().getAlternatives()); }
(rule__ExtensionSubstatement__Alternatives)
{ after(grammarAccess.getExtensionSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentStatement
entryRuleArgumentStatement 
:
{ before(grammarAccess.getArgumentStatementRule()); }
	 ruleArgumentStatement
{ after(grammarAccess.getArgumentStatementRule()); } 
	 EOF 
;

// Rule ArgumentStatement
ruleArgumentStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentStatementAccess().getGroup()); }
(rule__ArgumentStatement__Group__0)
{ after(grammarAccess.getArgumentStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentSubstatement
entryRuleArgumentSubstatement 
:
{ before(grammarAccess.getArgumentSubstatementRule()); }
	 ruleArgumentSubstatement
{ after(grammarAccess.getArgumentSubstatementRule()); } 
	 EOF 
;

// Rule ArgumentSubstatement
ruleArgumentSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentSubstatementAccess().getAlternatives()); }
(rule__ArgumentSubstatement__Alternatives)
{ after(grammarAccess.getArgumentSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentityStatement
entryRuleIdentityStatement 
:
{ before(grammarAccess.getIdentityStatementRule()); }
	 ruleIdentityStatement
{ after(grammarAccess.getIdentityStatementRule()); } 
	 EOF 
;

// Rule IdentityStatement
ruleIdentityStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentityStatementAccess().getGroup()); }
(rule__IdentityStatement__Group__0)
{ after(grammarAccess.getIdentityStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentitySubstatement
entryRuleIdentitySubstatement 
:
{ before(grammarAccess.getIdentitySubstatementRule()); }
	 ruleIdentitySubstatement
{ after(grammarAccess.getIdentitySubstatementRule()); } 
	 EOF 
;

// Rule IdentitySubstatement
ruleIdentitySubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentitySubstatementAccess().getAlternatives()); }
(rule__IdentitySubstatement__Alternatives)
{ after(grammarAccess.getIdentitySubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureStatement
entryRuleFeatureStatement 
:
{ before(grammarAccess.getFeatureStatementRule()); }
	 ruleFeatureStatement
{ after(grammarAccess.getFeatureStatementRule()); } 
	 EOF 
;

// Rule FeatureStatement
ruleFeatureStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureStatementAccess().getGroup()); }
(rule__FeatureStatement__Group__0)
{ after(grammarAccess.getFeatureStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureSubstatement
entryRuleFeatureSubstatement 
:
{ before(grammarAccess.getFeatureSubstatementRule()); }
	 ruleFeatureSubstatement
{ after(grammarAccess.getFeatureSubstatementRule()); } 
	 EOF 
;

// Rule FeatureSubstatement
ruleFeatureSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureSubstatementAccess().getAlternatives()); }
(rule__FeatureSubstatement__Alternatives)
{ after(grammarAccess.getFeatureSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBelongsToStatement
entryRuleBelongsToStatement 
:
{ before(grammarAccess.getBelongsToStatementRule()); }
	 ruleBelongsToStatement
{ after(grammarAccess.getBelongsToStatementRule()); } 
	 EOF 
;

// Rule BelongsToStatement
ruleBelongsToStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBelongsToStatementAccess().getGroup()); }
(rule__BelongsToStatement__Group__0)
{ after(grammarAccess.getBelongsToStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBelongsToSubstatement
entryRuleBelongsToSubstatement 
:
{ before(grammarAccess.getBelongsToSubstatementRule()); }
	 ruleBelongsToSubstatement
{ after(grammarAccess.getBelongsToSubstatementRule()); } 
	 EOF 
;

// Rule BelongsToSubstatement
ruleBelongsToSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBelongsToSubstatementAccess().getAlternatives()); }
(rule__BelongsToSubstatement__Alternatives)
{ after(grammarAccess.getBelongsToSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedefStatement
entryRuleTypedefStatement 
:
{ before(grammarAccess.getTypedefStatementRule()); }
	 ruleTypedefStatement
{ after(grammarAccess.getTypedefStatementRule()); } 
	 EOF 
;

// Rule TypedefStatement
ruleTypedefStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedefStatementAccess().getGroup()); }
(rule__TypedefStatement__Group__0)
{ after(grammarAccess.getTypedefStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedefSubstatement
entryRuleTypedefSubstatement 
:
{ before(grammarAccess.getTypedefSubstatementRule()); }
	 ruleTypedefSubstatement
{ after(grammarAccess.getTypedefSubstatementRule()); } 
	 EOF 
;

// Rule TypedefSubstatement
ruleTypedefSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedefSubstatementAccess().getAlternatives()); }
(rule__TypedefSubstatement__Alternatives)
{ after(grammarAccess.getTypedefSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeStatement
entryRuleTypeStatement 
:
{ before(grammarAccess.getTypeStatementRule()); }
	 ruleTypeStatement
{ after(grammarAccess.getTypeStatementRule()); } 
	 EOF 
;

// Rule TypeStatement
ruleTypeStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeStatementAccess().getGroup()); }
(rule__TypeStatement__Group__0)
{ after(grammarAccess.getTypeStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeSubStatement
entryRuleTypeSubStatement 
:
{ before(grammarAccess.getTypeSubStatementRule()); }
	 ruleTypeSubStatement
{ after(grammarAccess.getTypeSubStatementRule()); } 
	 EOF 
;

// Rule TypeSubStatement
ruleTypeSubStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeSubStatementAccess().getAlternatives()); }
(rule__TypeSubStatement__Alternatives)
{ after(grammarAccess.getTypeSubStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitStatement
entryRuleBitStatement 
:
{ before(grammarAccess.getBitStatementRule()); }
	 ruleBitStatement
{ after(grammarAccess.getBitStatementRule()); } 
	 EOF 
;

// Rule BitStatement
ruleBitStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitStatementAccess().getGroup()); }
(rule__BitStatement__Group__0)
{ after(grammarAccess.getBitStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitSubstatement
entryRuleBitSubstatement 
:
{ before(grammarAccess.getBitSubstatementRule()); }
	 ruleBitSubstatement
{ after(grammarAccess.getBitSubstatementRule()); } 
	 EOF 
;

// Rule BitSubstatement
ruleBitSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitSubstatementAccess().getAlternatives()); }
(rule__BitSubstatement__Alternatives)
{ after(grammarAccess.getBitSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumStatement
entryRuleEnumStatement 
:
{ before(grammarAccess.getEnumStatementRule()); }
	 ruleEnumStatement
{ after(grammarAccess.getEnumStatementRule()); } 
	 EOF 
;

// Rule EnumStatement
ruleEnumStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumStatementAccess().getGroup()); }
(rule__EnumStatement__Group__0)
{ after(grammarAccess.getEnumStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumSubstatement
entryRuleEnumSubstatement 
:
{ before(grammarAccess.getEnumSubstatementRule()); }
	 ruleEnumSubstatement
{ after(grammarAccess.getEnumSubstatementRule()); } 
	 EOF 
;

// Rule EnumSubstatement
ruleEnumSubstatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumSubstatementAccess().getAlternatives()); }
(rule__EnumSubstatement__Alternatives)
{ after(grammarAccess.getEnumSubstatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportStatement
entryRuleImportStatement 
:
{ before(grammarAccess.getImportStatementRule()); }
	 ruleImportStatement
{ after(grammarAccess.getImportStatementRule()); } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportStatementAccess().getGroup()); }
(rule__ImportStatement__Group__0)
{ after(grammarAccess.getImportStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportSubstatements
entryRuleImportSubstatements 
:
{ before(grammarAccess.getImportSubstatementsRule()); }
	 ruleImportSubstatements
{ after(grammarAccess.getImportSubstatementsRule()); } 
	 EOF 
;

// Rule ImportSubstatements
ruleImportSubstatements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportSubstatementsAccess().getAlternatives()); }
(rule__ImportSubstatements__Alternatives)
{ after(grammarAccess.getImportSubstatementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncludeStatement
entryRuleIncludeStatement 
:
{ before(grammarAccess.getIncludeStatementRule()); }
	 ruleIncludeStatement
{ after(grammarAccess.getIncludeStatementRule()); } 
	 EOF 
;

// Rule IncludeStatement
ruleIncludeStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeStatementAccess().getGroup()); }
(rule__IncludeStatement__Group__0)
{ after(grammarAccess.getIncludeStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncludeSubstatements
entryRuleIncludeSubstatements 
:
{ before(grammarAccess.getIncludeSubstatementsRule()); }
	 ruleIncludeSubstatements
{ after(grammarAccess.getIncludeSubstatementsRule()); } 
	 EOF 
;

// Rule IncludeSubstatements
ruleIncludeSubstatements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeSubstatementsAccess().getAlternatives()); }
(rule__IncludeSubstatements__Alternatives)
{ after(grammarAccess.getIncludeSubstatementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhenStatement
entryRuleWhenStatement 
:
{ before(grammarAccess.getWhenStatementRule()); }
	 ruleWhenStatement
{ after(grammarAccess.getWhenStatementRule()); } 
	 EOF 
;

// Rule WhenStatement
ruleWhenStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhenStatementAccess().getGroup()); }
(rule__WhenStatement__Group__0)
{ after(grammarAccess.getWhenStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhenSubstatements
entryRuleWhenSubstatements 
:
{ before(grammarAccess.getWhenSubstatementsRule()); }
	 ruleWhenSubstatements
{ after(grammarAccess.getWhenSubstatementsRule()); } 
	 EOF 
;

// Rule WhenSubstatements
ruleWhenSubstatements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhenSubstatementsAccess().getAlternatives()); }
(rule__WhenSubstatements__Alternatives)
{ after(grammarAccess.getWhenSubstatementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRevisionStatement
entryRuleRevisionStatement 
:
{ before(grammarAccess.getRevisionStatementRule()); }
	 ruleRevisionStatement
{ after(grammarAccess.getRevisionStatementRule()); } 
	 EOF 
;

// Rule RevisionStatement
ruleRevisionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRevisionStatementAccess().getGroup()); }
(rule__RevisionStatement__Group__0)
{ after(grammarAccess.getRevisionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRevisionSubstatements
entryRuleRevisionSubstatements 
:
{ before(grammarAccess.getRevisionSubstatementsRule()); }
	 ruleRevisionSubstatements
{ after(grammarAccess.getRevisionSubstatementsRule()); } 
	 EOF 
;

// Rule RevisionSubstatements
ruleRevisionSubstatements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRevisionSubstatementsAccess().getAlternatives()); }
(rule__RevisionSubstatements__Alternatives)
{ after(grammarAccess.getRevisionSubstatementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInType
entryRuleBuiltInType 
:
{ before(grammarAccess.getBuiltInTypeRule()); }
	 ruleBuiltInType
{ after(grammarAccess.getBuiltInTypeRule()); } 
	 EOF 
;

// Rule BuiltInType
ruleBuiltInType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeAssignment()); }
(rule__BuiltInType__BtypeAssignment)
{ after(grammarAccess.getBuiltInTypeAccess().getBtypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCUSTOMSTRING
entryRuleCUSTOMSTRING 
:
{ before(grammarAccess.getCUSTOMSTRINGRule()); }
	 ruleCUSTOMSTRING
{ after(grammarAccess.getCUSTOMSTRINGRule()); } 
	 EOF 
;

// Rule CUSTOMSTRING
ruleCUSTOMSTRING
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCUSTOMSTRINGAccess().getGroup()); }
(rule__CUSTOMSTRING__Group__0)
{ after(grammarAccess.getCUSTOMSTRINGAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTRINGARG
entryRuleSTRINGARG 
:
{ before(grammarAccess.getSTRINGARGRule()); }
	 ruleSTRINGARG
{ after(grammarAccess.getSTRINGARGRule()); } 
	 EOF 
;

// Rule STRINGARG
ruleSTRINGARG
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTRINGARGAccess().getAlternatives()); }
(rule__STRINGARG__Alternatives)
{ after(grammarAccess.getSTRINGARGAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTRINGARG2
entryRuleSTRINGARG2 
:
{ before(grammarAccess.getSTRINGARG2Rule()); }
	 ruleSTRINGARG2
{ after(grammarAccess.getSTRINGARG2Rule()); } 
	 EOF 
;

// Rule STRINGARG2
ruleSTRINGARG2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTRINGARG2Access().getGroup()); }
(rule__STRINGARG2__Group__0)
{ after(grammarAccess.getSTRINGARG2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__YangFile__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangFileAccess().getModuleParserRuleCall_0()); }
	ruleModule
{ after(grammarAccess.getYangFileAccess().getModuleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getYangFileAccess().getSubModuleParserRuleCall_1()); }
	ruleSubModule
{ after(grammarAccess.getYangFileAccess().getSubModuleParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleStatementAccess().getNamespaceStatementParserRuleCall_0()); }
	ruleNamespaceStatement
{ after(grammarAccess.getModuleStatementAccess().getNamespaceStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getPrefixStatementParserRuleCall_1()); }
	rulePrefixStatement
{ after(grammarAccess.getModuleStatementAccess().getPrefixStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getYangVersionStatementParserRuleCall_2()); }
	ruleYangVersionStatement
{ after(grammarAccess.getModuleStatementAccess().getYangVersionStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getOrganizationStatementParserRuleCall_3()); }
	ruleOrganizationStatement
{ after(grammarAccess.getModuleStatementAccess().getOrganizationStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getContactStatementParserRuleCall_4()); }
	ruleContactStatement
{ after(grammarAccess.getModuleStatementAccess().getContactStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getDescriptionStatementParserRuleCall_5()); }
	ruleDescriptionStatement
{ after(grammarAccess.getModuleStatementAccess().getDescriptionStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getImportStatementParserRuleCall_6()); }
	ruleImportStatement
{ after(grammarAccess.getModuleStatementAccess().getImportStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getIncludeStatementParserRuleCall_7()); }
	ruleIncludeStatement
{ after(grammarAccess.getModuleStatementAccess().getIncludeStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getRevisionStatementParserRuleCall_8()); }
	ruleRevisionStatement
{ after(grammarAccess.getModuleStatementAccess().getRevisionStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getExtensionStatementParserRuleCall_9()); }
	ruleExtensionStatement
{ after(grammarAccess.getModuleStatementAccess().getExtensionStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getFeatureStatementParserRuleCall_10()); }
	ruleFeatureStatement
{ after(grammarAccess.getModuleStatementAccess().getFeatureStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getIdentityStatementParserRuleCall_11()); }
	ruleIdentityStatement
{ after(grammarAccess.getModuleStatementAccess().getIdentityStatementParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getTypedefStatementParserRuleCall_12()); }
	ruleTypedefStatement
{ after(grammarAccess.getModuleStatementAccess().getTypedefStatementParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getGroupingStatementParserRuleCall_13()); }
	ruleGroupingStatement
{ after(grammarAccess.getModuleStatementAccess().getGroupingStatementParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getDatadefStatementParserRuleCall_14()); }
	ruleDatadefStatement
{ after(grammarAccess.getModuleStatementAccess().getDatadefStatementParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getAugmentStatementParserRuleCall_15()); }
	ruleAugmentStatement
{ after(grammarAccess.getModuleStatementAccess().getAugmentStatementParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getRpcStatementParserRuleCall_16()); }
	ruleRpcStatement
{ after(grammarAccess.getModuleStatementAccess().getRpcStatementParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getNotificationStatementParserRuleCall_17()); }
	ruleNotificationStatement
{ after(grammarAccess.getModuleStatementAccess().getNotificationStatementParserRuleCall_17()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getDeviationStatementParserRuleCall_18()); }
	ruleDeviationStatement
{ after(grammarAccess.getModuleStatementAccess().getDeviationStatementParserRuleCall_18()); }
)

    |(
{ before(grammarAccess.getModuleStatementAccess().getUnknownStatementParserRuleCall_19()); }
	ruleUnknownStatement
{ after(grammarAccess.getModuleStatementAccess().getUnknownStatementParserRuleCall_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubmoduleStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubmoduleStatementAccess().getYangVersionStatementParserRuleCall_0()); }
	ruleYangVersionStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getYangVersionStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getOrganizationStatementParserRuleCall_1()); }
	ruleOrganizationStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getOrganizationStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getContactStatementParserRuleCall_2()); }
	ruleContactStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getContactStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getDescriptionStatementParserRuleCall_3()); }
	ruleDescriptionStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getDescriptionStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getImportStatementParserRuleCall_4()); }
	ruleImportStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getImportStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getIncludeStatementParserRuleCall_5()); }
	ruleIncludeStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getIncludeStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getRevisionStatementParserRuleCall_6()); }
	ruleRevisionStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getRevisionStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getBelongsToStatementParserRuleCall_7()); }
	ruleBelongsToStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getBelongsToStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getExtensionStatementParserRuleCall_8()); }
	ruleExtensionStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getExtensionStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getFeatureStatementParserRuleCall_9()); }
	ruleFeatureStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getFeatureStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getIdentityStatementParserRuleCall_10()); }
	ruleIdentityStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getIdentityStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getTypedefStatementParserRuleCall_11()); }
	ruleTypedefStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getTypedefStatementParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getGroupingStatementParserRuleCall_12()); }
	ruleGroupingStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getGroupingStatementParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getDatadefStatementParserRuleCall_13()); }
	ruleDatadefStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getDatadefStatementParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getAugmentStatementParserRuleCall_14()); }
	ruleAugmentStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getAugmentStatementParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getRpcStatementParserRuleCall_15()); }
	ruleRpcStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getRpcStatementParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getNotificationStatementParserRuleCall_16()); }
	ruleNotificationStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getNotificationStatementParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getDeviationStatementParserRuleCall_17()); }
	ruleDeviationStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getDeviationStatementParserRuleCall_17()); }
)

    |(
{ before(grammarAccess.getSubmoduleStatementAccess().getUnknownStatementParserRuleCall_18()); }
	ruleUnknownStatement
{ after(grammarAccess.getSubmoduleStatementAccess().getUnknownStatementParserRuleCall_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatadefStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatadefStatementAccess().getContainerStatementParserRuleCall_0()); }
	ruleContainerStatement
{ after(grammarAccess.getDatadefStatementAccess().getContainerStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDatadefStatementAccess().getLeafStatementParserRuleCall_1()); }
	ruleLeafStatement
{ after(grammarAccess.getDatadefStatementAccess().getLeafStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDatadefStatementAccess().getLeafListStatementParserRuleCall_2()); }
	ruleLeafListStatement
{ after(grammarAccess.getDatadefStatementAccess().getLeafListStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDatadefStatementAccess().getListStatementParserRuleCall_3()); }
	ruleListStatement
{ after(grammarAccess.getDatadefStatementAccess().getListStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDatadefStatementAccess().getChoiceStatementParserRuleCall_4()); }
	ruleChoiceStatement
{ after(grammarAccess.getDatadefStatementAccess().getChoiceStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getDatadefStatementAccess().getAnyxmlStatementParserRuleCall_5()); }
	ruleAnyxmlStatement
{ after(grammarAccess.getDatadefStatementAccess().getAnyxmlStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getDatadefStatementAccess().getUsesStatementParserRuleCall_6()); }
	ruleUsesStatement
{ after(grammarAccess.getDatadefStatementAccess().getUsesStatementParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__YangVersionStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangVersionStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getYangVersionStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getYangVersionStatementAccess().getGroup_2_1()); }
(rule__YangVersionStatement__Group_2_1__0)
{ after(grammarAccess.getYangVersionStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrganizationStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getOrganizationStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getOrganizationStatementAccess().getGroup_2_1()); }
(rule__OrganizationStatement__Group_2_1__0)
{ after(grammarAccess.getOrganizationStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContactStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContactStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getContactStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getContactStatementAccess().getGroup_2_1()); }
(rule__ContactStatement__Group_2_1__0)
{ after(grammarAccess.getContactStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getDescriptionStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getDescriptionStatementAccess().getGroup_2_1()); }
(rule__DescriptionStatement__Group_2_1__0)
{ after(grammarAccess.getDescriptionStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getReferenceStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getReferenceStatementAccess().getGroup_2_1()); }
(rule__ReferenceStatement__Group_2_1__0)
{ after(grammarAccess.getReferenceStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getNamespaceStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getNamespaceStatementAccess().getGroup_2_1()); }
(rule__NamespaceStatement__Group_2_1__0)
{ after(grammarAccess.getNamespaceStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getPrefixStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getPrefixStatementAccess().getGroup_2_1()); }
(rule__PrefixStatement__Group_2_1__0)
{ after(grammarAccess.getPrefixStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequireInstanceStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getRequireInstanceStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getRequireInstanceStatementAccess().getGroup_2_1()); }
(rule__RequireInstanceStatement__Group_2_1__0)
{ after(grammarAccess.getRequireInstanceStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getPathStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getPathStatementAccess().getGroup_2_1()); }
(rule__PathStatement__Group_2_1__0)
{ after(grammarAccess.getPathStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getPositionStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getPositionStatementAccess().getGroup_2_1()); }
(rule__PositionStatement__Group_2_1__0)
{ after(grammarAccess.getPositionStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getValueStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getValueStatementAccess().getGroup_2_1()); }
(rule__ValueStatement__Group_2_1__0)
{ after(grammarAccess.getValueStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorAppTagStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getErrorAppTagStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getErrorAppTagStatementAccess().getGroup_2_1()); }
(rule__ErrorAppTagStatement__Group_2_1__0)
{ after(grammarAccess.getErrorAppTagStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorMessageStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getErrorMessageStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getErrorMessageStatementAccess().getGroup_2_1()); }
(rule__ErrorMessageStatement__Group_2_1__0)
{ after(grammarAccess.getErrorMessageStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitsStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getUnitsStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getUnitsStatementAccess().getGroup_2_1()); }
(rule__UnitsStatement__Group_2_1__0)
{ after(grammarAccess.getUnitsStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getDefaultStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getDefaultStatementAccess().getGroup_2_1()); }
(rule__DefaultStatement__Group_2_1__0)
{ after(grammarAccess.getDefaultStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatusStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatusStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getStatusStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getStatusStatementAccess().getGroup_2_1()); }
(rule__StatusStatement__Group_2_1__0)
{ after(grammarAccess.getStatusStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionDateStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getRevisionDateStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getRevisionDateStatementAccess().getGroup_2_1()); }
(rule__RevisionDateStatement__Group_2_1__0)
{ after(grammarAccess.getRevisionDateStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getUniqueStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getUniqueStatementAccess().getGroup_2_1()); }
(rule__UniqueStatement__Group_2_1__0)
{ after(grammarAccess.getUniqueStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__ArgAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getArgSTRINGARGParserRuleCall_1_0_0()); }
	ruleSTRINGARG
{ after(grammarAccess.getKeyStatementAccess().getArgSTRINGARGParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getKeyStatementAccess().getArgSTRINGARG2ParserRuleCall_1_0_1()); }
	ruleSTRINGARG2
{ after(grammarAccess.getKeyStatementAccess().getArgSTRINGARG2ParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getKeyStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getKeyStatementAccess().getGroup_2_1()); }
(rule__KeyStatement__Group_2_1__0)
{ after(grammarAccess.getKeyStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedbyStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getOrderedbyStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getOrderedbyStatementAccess().getGroup_2_1()); }
(rule__OrderedbyStatement__Group_2_1__0)
{ after(grammarAccess.getOrderedbyStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresenceStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresenceStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getPresenceStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getPresenceStatementAccess().getGroup_2_1()); }
(rule__PresenceStatement__Group_2_1__0)
{ after(grammarAccess.getPresenceStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getMandatoryStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getMandatoryStatementAccess().getGroup_2_1()); }
(rule__MandatoryStatement__Group_2_1__0)
{ after(grammarAccess.getMandatoryStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getConfigStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getConfigStatementAccess().getGroup_2_1()); }
(rule__ConfigStatement__Group_2_1__0)
{ after(grammarAccess.getConfigStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FractionDigitsStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getFractionDigitsStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getFractionDigitsStatementAccess().getGroup_2_1()); }
(rule__FractionDigitsStatement__Group_2_1__0)
{ after(grammarAccess.getFractionDigitsStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getSemicolonKeyword_3_0()); }

	';' 

{ after(grammarAccess.getIfFeatureStatementAccess().getSemicolonKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getIfFeatureStatementAccess().getGroup_3_1()); }
(rule__IfFeatureStatement__Group_3_1__0)
{ after(grammarAccess.getIfFeatureStatementAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getSemicolonKeyword_3_0()); }

	';' 

{ after(grammarAccess.getBaseStatementAccess().getSemicolonKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getBaseStatementAccess().getGroup_3_1()); }
(rule__BaseStatement__Group_3_1__0)
{ after(grammarAccess.getBaseStatementAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__YinElementStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYinElementStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getYinElementStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getYinElementStatementAccess().getGroup_2_1()); }
(rule__YinElementStatement__Group_2_1__0)
{ after(grammarAccess.getYinElementStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinElementsStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinElementsStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getMinElementsStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getMinElementsStatementAccess().getGroup_2_1()); }
(rule__MinElementsStatement__Group_2_1__0)
{ after(grammarAccess.getMinElementsStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxElementsStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getMaxElementsStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getMaxElementsStatementAccess().getGroup_2_1()); }
(rule__MaxElementsStatement__Group_2_1__0)
{ after(grammarAccess.getMaxElementsStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getSemicolonKeyword_4_0()); }

	';' 

{ after(grammarAccess.getUnknownStatementAccess().getSemicolonKeyword_4_0()); }
)

    |(
{ before(grammarAccess.getUnknownStatementAccess().getGroup_4_1()); }
(rule__UnknownStatement__Group_4_1__0)
{ after(grammarAccess.getUnknownStatementAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getSemicolonKeyword_3_0()); }

	';' 

{ after(grammarAccess.getUnknownSubstatementsAccess().getSemicolonKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getUnknownSubstatementsAccess().getGroup_3_1()); }
(rule__UnknownSubstatements__Group_3_1__0)
{ after(grammarAccess.getUnknownSubstatementsAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getRangeStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getRangeStatementAccess().getGroup_2_1()); }
(rule__RangeStatement__Group_2_1__0)
{ after(grammarAccess.getRangeStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getPatternStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getPatternStatementAccess().getGroup_2_1()); }
(rule__PatternStatement__Group_2_1__0)
{ after(grammarAccess.getPatternStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LengthStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getLengthStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getLengthStatementAccess().getGroup_2_1()); }
(rule__LengthStatement__Group_2_1__0)
{ after(grammarAccess.getLengthStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MustStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getMustStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getMustStatementAccess().getGroup_2_1()); }
(rule__MustStatement__Group_2_1__0)
{ after(grammarAccess.getMustStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleSubstatementAccess().getDescriptionStatementParserRuleCall_0()); }
	ruleDescriptionStatement
{ after(grammarAccess.getMultipleSubstatementAccess().getDescriptionStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMultipleSubstatementAccess().getReferenceStatementParserRuleCall_1()); }
	ruleReferenceStatement
{ after(grammarAccess.getMultipleSubstatementAccess().getReferenceStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMultipleSubstatementAccess().getErrorAppTagStatementParserRuleCall_2()); }
	ruleErrorAppTagStatement
{ after(grammarAccess.getMultipleSubstatementAccess().getErrorAppTagStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getMultipleSubstatementAccess().getErrorMessageStatementParserRuleCall_3()); }
	ruleErrorMessageStatement
{ after(grammarAccess.getMultipleSubstatementAccess().getErrorMessageStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getMultipleSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
	ruleUnknownStatement
{ after(grammarAccess.getMultipleSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RpcSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcSubstatementAccess().getIfFeatureStatementParserRuleCall_0()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getRpcSubstatementAccess().getIfFeatureStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRpcSubstatementAccess().getStatusStatementParserRuleCall_1()); }
	ruleStatusStatement
{ after(grammarAccess.getRpcSubstatementAccess().getStatusStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRpcSubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
	ruleDescriptionStatement
{ after(grammarAccess.getRpcSubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRpcSubstatementAccess().getReferenceStatementParserRuleCall_3()); }
	ruleReferenceStatement
{ after(grammarAccess.getRpcSubstatementAccess().getReferenceStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getRpcSubstatementAccess().getTypedefStatementParserRuleCall_4()); }
	ruleTypedefStatement
{ after(grammarAccess.getRpcSubstatementAccess().getTypedefStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getRpcSubstatementAccess().getGroupingStatementParserRuleCall_5()); }
	ruleGroupingStatement
{ after(grammarAccess.getRpcSubstatementAccess().getGroupingStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getRpcSubstatementAccess().getInputStatementParserRuleCall_6()); }
	ruleInputStatement
{ after(grammarAccess.getRpcSubstatementAccess().getInputStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getRpcSubstatementAccess().getOutputStatementParserRuleCall_7()); }
	ruleOutputStatement
{ after(grammarAccess.getRpcSubstatementAccess().getOutputStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getRpcSubstatementAccess().getUnknownStatementParserRuleCall_8()); }
	ruleUnknownStatement
{ after(grammarAccess.getRpcSubstatementAccess().getUnknownStatementParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSubstatementAccess().getTypedefStatementParserRuleCall_0()); }
	ruleTypedefStatement
{ after(grammarAccess.getInputSubstatementAccess().getTypedefStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInputSubstatementAccess().getGroupingStatementParserRuleCall_1()); }
	ruleGroupingStatement
{ after(grammarAccess.getInputSubstatementAccess().getGroupingStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInputSubstatementAccess().getDatadefStatementParserRuleCall_2()); }
	ruleDatadefStatement
{ after(grammarAccess.getInputSubstatementAccess().getDatadefStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInputSubstatementAccess().getUnknownStatementParserRuleCall_3()); }
	ruleUnknownStatement
{ after(grammarAccess.getInputSubstatementAccess().getUnknownStatementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputSubstatementAccess().getTypedefStatementParserRuleCall_0()); }
	ruleTypedefStatement
{ after(grammarAccess.getOutputSubstatementAccess().getTypedefStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOutputSubstatementAccess().getGroupingStatementParserRuleCall_1()); }
	ruleGroupingStatement
{ after(grammarAccess.getOutputSubstatementAccess().getGroupingStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOutputSubstatementAccess().getDatadefStatementParserRuleCall_2()); }
	ruleDatadefStatement
{ after(grammarAccess.getOutputSubstatementAccess().getDatadefStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getOutputSubstatementAccess().getUnknownStatementParserRuleCall_3()); }
	ruleUnknownStatement
{ after(grammarAccess.getOutputSubstatementAccess().getUnknownStatementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getNotificationStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getNotificationStatementAccess().getGroup_2_1()); }
(rule__NotificationStatement__Group_2_1__0)
{ after(grammarAccess.getNotificationStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationSubstatementAccess().getIfFeatureStatementParserRuleCall_0()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getNotificationSubstatementAccess().getIfFeatureStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNotificationSubstatementAccess().getStatusStatementParserRuleCall_1()); }
	ruleStatusStatement
{ after(grammarAccess.getNotificationSubstatementAccess().getStatusStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNotificationSubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
	ruleDescriptionStatement
{ after(grammarAccess.getNotificationSubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNotificationSubstatementAccess().getReferenceStatementParserRuleCall_3()); }
	ruleReferenceStatement
{ after(grammarAccess.getNotificationSubstatementAccess().getReferenceStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getNotificationSubstatementAccess().getTypedefStatementParserRuleCall_4()); }
	ruleTypedefStatement
{ after(grammarAccess.getNotificationSubstatementAccess().getTypedefStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getNotificationSubstatementAccess().getGroupingStatementParserRuleCall_5()); }
	ruleGroupingStatement
{ after(grammarAccess.getNotificationSubstatementAccess().getGroupingStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getNotificationSubstatementAccess().getDatadefStatementParserRuleCall_6()); }
	ruleDatadefStatement
{ after(grammarAccess.getNotificationSubstatementAccess().getDatadefStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getNotificationSubstatementAccess().getUnknownStatementParserRuleCall_7()); }
	ruleUnknownStatement
{ after(grammarAccess.getNotificationSubstatementAccess().getUnknownStatementParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getContainerStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getContainerStatementAccess().getGroup_2_1()); }
(rule__ContainerStatement__Group_2_1__0)
{ after(grammarAccess.getContainerStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerSubstatementAccess().getWhenStatementParserRuleCall_0()); }
	ruleWhenStatement
{ after(grammarAccess.getContainerSubstatementAccess().getWhenStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getContainerSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getMustStatementParserRuleCall_2()); }
	ruleMustStatement
{ after(grammarAccess.getContainerSubstatementAccess().getMustStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getPresenceStatementParserRuleCall_3()); }
	rulePresenceStatement
{ after(grammarAccess.getContainerSubstatementAccess().getPresenceStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getConfigStatementParserRuleCall_4()); }
	ruleConfigStatement
{ after(grammarAccess.getContainerSubstatementAccess().getConfigStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getStatusStatementParserRuleCall_5()); }
	ruleStatusStatement
{ after(grammarAccess.getContainerSubstatementAccess().getStatusStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getDescriptionStatementParserRuleCall_6()); }
	ruleDescriptionStatement
{ after(grammarAccess.getContainerSubstatementAccess().getDescriptionStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getReferenceStatementParserRuleCall_7()); }
	ruleReferenceStatement
{ after(grammarAccess.getContainerSubstatementAccess().getReferenceStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getTypedefStatementParserRuleCall_8()); }
	ruleTypedefStatement
{ after(grammarAccess.getContainerSubstatementAccess().getTypedefStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getGroupingStatementParserRuleCall_9()); }
	ruleGroupingStatement
{ after(grammarAccess.getContainerSubstatementAccess().getGroupingStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getDatadefStatementParserRuleCall_10()); }
	ruleDatadefStatement
{ after(grammarAccess.getContainerSubstatementAccess().getDatadefStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getContainerSubstatementAccess().getUnknownStatementParserRuleCall_11()); }
	ruleUnknownStatement
{ after(grammarAccess.getContainerSubstatementAccess().getUnknownStatementParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getListStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getListStatementAccess().getGroup_2_1()); }
(rule__ListStatement__Group_2_1__0)
{ after(grammarAccess.getListStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListSubstatementAccess().getWhenStatementParserRuleCall_0()); }
	ruleWhenStatement
{ after(grammarAccess.getListSubstatementAccess().getWhenStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getListSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getMustStatementParserRuleCall_2()); }
	ruleMustStatement
{ after(grammarAccess.getListSubstatementAccess().getMustStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getKeyStatementParserRuleCall_3()); }
	ruleKeyStatement
{ after(grammarAccess.getListSubstatementAccess().getKeyStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getUniqueStatementParserRuleCall_4()); }
	ruleUniqueStatement
{ after(grammarAccess.getListSubstatementAccess().getUniqueStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getConfigStatementParserRuleCall_5()); }
	ruleConfigStatement
{ after(grammarAccess.getListSubstatementAccess().getConfigStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getMinElementsStatementParserRuleCall_6()); }
	ruleMinElementsStatement
{ after(grammarAccess.getListSubstatementAccess().getMinElementsStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getMaxElementsStatementParserRuleCall_7()); }
	ruleMaxElementsStatement
{ after(grammarAccess.getListSubstatementAccess().getMaxElementsStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getOrderedbyStatementParserRuleCall_8()); }
	ruleOrderedbyStatement
{ after(grammarAccess.getListSubstatementAccess().getOrderedbyStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getStatusStatementParserRuleCall_9()); }
	ruleStatusStatement
{ after(grammarAccess.getListSubstatementAccess().getStatusStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getDescriptionStatementParserRuleCall_10()); }
	ruleDescriptionStatement
{ after(grammarAccess.getListSubstatementAccess().getDescriptionStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getReferenceStatementParserRuleCall_11()); }
	ruleReferenceStatement
{ after(grammarAccess.getListSubstatementAccess().getReferenceStatementParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getTypedefStatementParserRuleCall_12()); }
	ruleTypedefStatement
{ after(grammarAccess.getListSubstatementAccess().getTypedefStatementParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getGroupingStatementParserRuleCall_13()); }
	ruleGroupingStatement
{ after(grammarAccess.getListSubstatementAccess().getGroupingStatementParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getDatadefStatementParserRuleCall_14()); }
	ruleDatadefStatement
{ after(grammarAccess.getListSubstatementAccess().getDatadefStatementParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getListSubstatementAccess().getUnknownStatementParserRuleCall_15()); }
	ruleUnknownStatement
{ after(grammarAccess.getListSubstatementAccess().getUnknownStatementParserRuleCall_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getGroupingStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getGroupingStatementAccess().getGroup_2_1()); }
(rule__GroupingStatement__Group_2_1__0)
{ after(grammarAccess.getGroupingStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingSubstatementAccess().getStatusStatementParserRuleCall_0()); }
	ruleStatusStatement
{ after(grammarAccess.getGroupingSubstatementAccess().getStatusStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGroupingSubstatementAccess().getDescriptionStatementParserRuleCall_1()); }
	ruleDescriptionStatement
{ after(grammarAccess.getGroupingSubstatementAccess().getDescriptionStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getGroupingSubstatementAccess().getReferenceStatementParserRuleCall_2()); }
	ruleReferenceStatement
{ after(grammarAccess.getGroupingSubstatementAccess().getReferenceStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getGroupingSubstatementAccess().getTypedefStatementParserRuleCall_3()); }
	ruleTypedefStatement
{ after(grammarAccess.getGroupingSubstatementAccess().getTypedefStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getGroupingSubstatementAccess().getGroupingStatementParserRuleCall_4()); }
	ruleGroupingStatement
{ after(grammarAccess.getGroupingSubstatementAccess().getGroupingStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getGroupingSubstatementAccess().getDatadefStatementParserRuleCall_5()); }
	ruleDatadefStatement
{ after(grammarAccess.getGroupingSubstatementAccess().getDatadefStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getGroupingSubstatementAccess().getUnknownStatementParserRuleCall_6()); }
	ruleUnknownStatement
{ after(grammarAccess.getGroupingSubstatementAccess().getUnknownStatementParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeafStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getLeafStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getLeafStatementAccess().getGroup_2_1()); }
(rule__LeafStatement__Group_2_1__0)
{ after(grammarAccess.getLeafStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeafSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafSubstatementAccess().getWhenStatementParserRuleCall_0()); }
	ruleWhenStatement
{ after(grammarAccess.getLeafSubstatementAccess().getWhenStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getLeafSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getTypeStatementParserRuleCall_2()); }
	ruleTypeStatement
{ after(grammarAccess.getLeafSubstatementAccess().getTypeStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getUnitsStatementParserRuleCall_3()); }
	ruleUnitsStatement
{ after(grammarAccess.getLeafSubstatementAccess().getUnitsStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getMustStatementParserRuleCall_4()); }
	ruleMustStatement
{ after(grammarAccess.getLeafSubstatementAccess().getMustStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getDefaultStatementParserRuleCall_5()); }
	ruleDefaultStatement
{ after(grammarAccess.getLeafSubstatementAccess().getDefaultStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getConfigStatementParserRuleCall_6()); }
	ruleConfigStatement
{ after(grammarAccess.getLeafSubstatementAccess().getConfigStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getMandatoryStatementParserRuleCall_7()); }
	ruleMandatoryStatement
{ after(grammarAccess.getLeafSubstatementAccess().getMandatoryStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getStatusStatementParserRuleCall_8()); }
	ruleStatusStatement
{ after(grammarAccess.getLeafSubstatementAccess().getStatusStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getDescriptionStatementParserRuleCall_9()); }
	ruleDescriptionStatement
{ after(grammarAccess.getLeafSubstatementAccess().getDescriptionStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getReferenceStatementParserRuleCall_10()); }
	ruleReferenceStatement
{ after(grammarAccess.getLeafSubstatementAccess().getReferenceStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getLeafSubstatementAccess().getUnknownStatementParserRuleCall_11()); }
	ruleUnknownStatement
{ after(grammarAccess.getLeafSubstatementAccess().getUnknownStatementParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getLeafListStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getLeafListStatementAccess().getGroup_2_1()); }
(rule__LeafListStatement__Group_2_1__0)
{ after(grammarAccess.getLeafListStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListSubstatementAccess().getWhenStatementParserRuleCall_0()); }
	ruleWhenStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getWhenStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getTypeStatementParserRuleCall_2()); }
	ruleTypeStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getTypeStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getUnitsStatementParserRuleCall_3()); }
	ruleUnitsStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getUnitsStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getMustStatementParserRuleCall_4()); }
	ruleMustStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getMustStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getDefaultStatementParserRuleCall_5()); }
	ruleDefaultStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getDefaultStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getConfigStatementParserRuleCall_6()); }
	ruleConfigStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getConfigStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getMinElementsStatementParserRuleCall_7()); }
	ruleMinElementsStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getMinElementsStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getMaxElementsStatementParserRuleCall_8()); }
	ruleMaxElementsStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getMaxElementsStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getOrderedbyStatementParserRuleCall_9()); }
	ruleOrderedbyStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getOrderedbyStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getStatusStatementParserRuleCall_10()); }
	ruleStatusStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getStatusStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getDescriptionStatementParserRuleCall_11()); }
	ruleDescriptionStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getDescriptionStatementParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getLeafListSubstatementAccess().getUnknownStatementParserRuleCall_12()); }
	ruleUnknownStatement
{ after(grammarAccess.getLeafListSubstatementAccess().getUnknownStatementParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getChoiceStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getChoiceStatementAccess().getGroup_2_1()); }
(rule__ChoiceStatement__Group_2_1__0)
{ after(grammarAccess.getChoiceStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceSubstatementAccess().getWhenStatementParserRuleCall_0()); }
	ruleWhenStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getWhenStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getDefaultStatementParserRuleCall_2()); }
	ruleDefaultStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getDefaultStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getConfigStatementParserRuleCall_3()); }
	ruleConfigStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getConfigStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getMandatoryStatementParserRuleCall_4()); }
	ruleMandatoryStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getMandatoryStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getStatusStatementParserRuleCall_5()); }
	ruleStatusStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getStatusStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getDescriptionStatementParserRuleCall_6()); }
	ruleDescriptionStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getDescriptionStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getReferenceStatementParserRuleCall_7()); }
	ruleReferenceStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getReferenceStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getCaseStatementParserRuleCall_8()); }
	ruleCaseStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getCaseStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getContainerStatementParserRuleCall_9()); }
	ruleContainerStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getContainerStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getLeafStatementParserRuleCall_10()); }
	ruleLeafStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getLeafStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getLeafListStatementParserRuleCall_11()); }
	ruleLeafListStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getLeafListStatementParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getListStatementParserRuleCall_12()); }
	ruleListStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getListStatementParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getAnyxmlStatementParserRuleCall_13()); }
	ruleAnyxmlStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getAnyxmlStatementParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getChoiceSubstatementAccess().getUnknownStatementParserRuleCall_14()); }
	ruleUnknownStatement
{ after(grammarAccess.getChoiceSubstatementAccess().getUnknownStatementParserRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getCaseStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getCaseStatementAccess().getGroup_2_1()); }
(rule__CaseStatement__Group_2_1__0)
{ after(grammarAccess.getCaseStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseSubstatementAccess().getWhenStatementParserRuleCall_0()); }
	ruleWhenStatement
{ after(grammarAccess.getCaseSubstatementAccess().getWhenStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCaseSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getCaseSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCaseSubstatementAccess().getStatusStatementParserRuleCall_2()); }
	ruleStatusStatement
{ after(grammarAccess.getCaseSubstatementAccess().getStatusStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCaseSubstatementAccess().getDescriptionStatementParserRuleCall_3()); }
	ruleDescriptionStatement
{ after(grammarAccess.getCaseSubstatementAccess().getDescriptionStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getCaseSubstatementAccess().getReferenceStatementParserRuleCall_4()); }
	ruleReferenceStatement
{ after(grammarAccess.getCaseSubstatementAccess().getReferenceStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getCaseSubstatementAccess().getDatadefStatementParserRuleCall_5()); }
	ruleDatadefStatement
{ after(grammarAccess.getCaseSubstatementAccess().getDatadefStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getCaseSubstatementAccess().getUnknownStatementParserRuleCall_6()); }
	ruleUnknownStatement
{ after(grammarAccess.getCaseSubstatementAccess().getUnknownStatementParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getAnyxmlStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getAnyxmlStatementAccess().getGroup_2_1()); }
(rule__AnyxmlStatement__Group_2_1__0)
{ after(grammarAccess.getAnyxmlStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getWhenStatementParserRuleCall_0()); }
	ruleWhenStatement
{ after(grammarAccess.getAnyxmlSubstatementAccess().getWhenStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getAnyxmlSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getMustStatementParserRuleCall_2()); }
	ruleMustStatement
{ after(grammarAccess.getAnyxmlSubstatementAccess().getMustStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getConfigStatementParserRuleCall_3()); }
	ruleConfigStatement
{ after(grammarAccess.getAnyxmlSubstatementAccess().getConfigStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getMandatoryStatementParserRuleCall_4()); }
	ruleMandatoryStatement
{ after(grammarAccess.getAnyxmlSubstatementAccess().getMandatoryStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getStatusStatementParserRuleCall_5()); }
	ruleStatusStatement
{ after(grammarAccess.getAnyxmlSubstatementAccess().getStatusStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getDescriptionStatementParserRuleCall_6()); }
	ruleDescriptionStatement
{ after(grammarAccess.getAnyxmlSubstatementAccess().getDescriptionStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getReferenceStatementParserRuleCall_7()); }
	ruleReferenceStatement
{ after(grammarAccess.getAnyxmlSubstatementAccess().getReferenceStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getAnyxmlSubstatementAccess().getUnknownStatementParserRuleCall_8()); }
	ruleUnknownStatement
{ after(grammarAccess.getAnyxmlSubstatementAccess().getUnknownStatementParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getSemicolonKeyword_3_0()); }

	';' 

{ after(grammarAccess.getUsesStatementAccess().getSemicolonKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getUsesStatementAccess().getGroup_3_1()); }
(rule__UsesStatement__Group_3_1__0)
{ after(grammarAccess.getUsesStatementAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UsesSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesSubstatementAccess().getWhenStatementParserRuleCall_0()); }
	ruleWhenStatement
{ after(grammarAccess.getUsesSubstatementAccess().getWhenStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUsesSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getUsesSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getUsesSubstatementAccess().getStatusStatementParserRuleCall_2()); }
	ruleStatusStatement
{ after(grammarAccess.getUsesSubstatementAccess().getStatusStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getUsesSubstatementAccess().getDescriptionStatementParserRuleCall_3()); }
	ruleDescriptionStatement
{ after(grammarAccess.getUsesSubstatementAccess().getDescriptionStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getUsesSubstatementAccess().getReferenceStatementParserRuleCall_4()); }
	ruleReferenceStatement
{ after(grammarAccess.getUsesSubstatementAccess().getReferenceStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getUsesSubstatementAccess().getRefineStatementParserRuleCall_5()); }
	ruleRefineStatement
{ after(grammarAccess.getUsesSubstatementAccess().getRefineStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getUsesSubstatementAccess().getAugmentUsesStatementParserRuleCall_6()); }
	ruleAugmentUsesStatement
{ after(grammarAccess.getUsesSubstatementAccess().getAugmentUsesStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getUsesSubstatementAccess().getUnknownStatementParserRuleCall_7()); }
	ruleUnknownStatement
{ after(grammarAccess.getUsesSubstatementAccess().getUnknownStatementParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentUsesStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getAugmentUsesStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getAugmentUsesStatementAccess().getGroup_2_1()); }
(rule__AugmentUsesStatement__Group_2_1__0)
{ after(grammarAccess.getAugmentUsesStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getAugmentStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getAugmentStatementAccess().getGroup_2_1()); }
(rule__AugmentStatement__Group_2_1__0)
{ after(grammarAccess.getAugmentStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentSubstatementAccess().getWhenStatementParserRuleCall_0()); }
	ruleWhenStatement
{ after(grammarAccess.getAugmentSubstatementAccess().getWhenStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAugmentSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getAugmentSubstatementAccess().getIfFeatureStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAugmentSubstatementAccess().getStatusStatementParserRuleCall_2()); }
	ruleStatusStatement
{ after(grammarAccess.getAugmentSubstatementAccess().getStatusStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAugmentSubstatementAccess().getDescriptionStatementParserRuleCall_3()); }
	ruleDescriptionStatement
{ after(grammarAccess.getAugmentSubstatementAccess().getDescriptionStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAugmentSubstatementAccess().getReferenceStatementParserRuleCall_4()); }
	ruleReferenceStatement
{ after(grammarAccess.getAugmentSubstatementAccess().getReferenceStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAugmentSubstatementAccess().getDatadefStatementParserRuleCall_5()); }
	ruleDatadefStatement
{ after(grammarAccess.getAugmentSubstatementAccess().getDatadefStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAugmentSubstatementAccess().getCaseStatementParserRuleCall_6()); }
	ruleCaseStatement
{ after(grammarAccess.getAugmentSubstatementAccess().getCaseStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getAugmentSubstatementAccess().getUnknownStatementParserRuleCall_7()); }
	ruleUnknownStatement
{ after(grammarAccess.getAugmentSubstatementAccess().getUnknownStatementParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefineStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getRefineStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getRefineStatementAccess().getGroup_2_1()); }
(rule__RefineStatement__Group_2_1__0)
{ after(grammarAccess.getRefineStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefineSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineSubstatementAccess().getMustStatementParserRuleCall_0()); }
	ruleMustStatement
{ after(grammarAccess.getRefineSubstatementAccess().getMustStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRefineSubstatementAccess().getDefaultStatementParserRuleCall_1()); }
	ruleDefaultStatement
{ after(grammarAccess.getRefineSubstatementAccess().getDefaultStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRefineSubstatementAccess().getPresenceStatementParserRuleCall_2()); }
	rulePresenceStatement
{ after(grammarAccess.getRefineSubstatementAccess().getPresenceStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRefineSubstatementAccess().getConfigStatementParserRuleCall_3()); }
	ruleConfigStatement
{ after(grammarAccess.getRefineSubstatementAccess().getConfigStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getRefineSubstatementAccess().getMandatoryStatementParserRuleCall_4()); }
	ruleMandatoryStatement
{ after(grammarAccess.getRefineSubstatementAccess().getMandatoryStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getRefineSubstatementAccess().getMinElementsStatementParserRuleCall_5()); }
	ruleMinElementsStatement
{ after(grammarAccess.getRefineSubstatementAccess().getMinElementsStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getRefineSubstatementAccess().getMaxElementsStatementParserRuleCall_6()); }
	ruleMaxElementsStatement
{ after(grammarAccess.getRefineSubstatementAccess().getMaxElementsStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getRefineSubstatementAccess().getDescriptionStatementParserRuleCall_7()); }
	ruleDescriptionStatement
{ after(grammarAccess.getRefineSubstatementAccess().getDescriptionStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getRefineSubstatementAccess().getReferenceStatementParserRuleCall_8()); }
	ruleReferenceStatement
{ after(grammarAccess.getRefineSubstatementAccess().getReferenceStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getRefineSubstatementAccess().getUnknownStatementParserRuleCall_9()); }
	ruleUnknownStatement
{ after(grammarAccess.getRefineSubstatementAccess().getUnknownStatementParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getDeviationStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getDeviationStatementAccess().getGroup_2_1()); }
(rule__DeviationStatement__Group_2_1__0)
{ after(grammarAccess.getDeviationStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationSubstatementAccess().getDeviateStatementParserRuleCall_0()); }
	ruleDeviateStatement
{ after(grammarAccess.getDeviationSubstatementAccess().getDeviateStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeviationSubstatementAccess().getDescriptionStatementParserRuleCall_1()); }
	ruleDescriptionStatement
{ after(grammarAccess.getDeviationSubstatementAccess().getDescriptionStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeviationSubstatementAccess().getReferenceStatementParserRuleCall_2()); }
	ruleReferenceStatement
{ after(grammarAccess.getDeviationSubstatementAccess().getReferenceStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeviationSubstatementAccess().getUnknownStatementParserRuleCall_3()); }
	ruleUnknownStatement
{ after(grammarAccess.getDeviationSubstatementAccess().getUnknownStatementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getDeviateStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getDeviateStatementAccess().getGroup_2_1()); }
(rule__DeviateStatement__Group_2_1__0)
{ after(grammarAccess.getDeviateStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateSubstatementAccess().getUniqueStatementParserRuleCall_0()); }
	ruleUniqueStatement
{ after(grammarAccess.getDeviateSubstatementAccess().getUniqueStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeviateSubstatementAccess().getMustStatementParserRuleCall_1()); }
	ruleMustStatement
{ after(grammarAccess.getDeviateSubstatementAccess().getMustStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeviateSubstatementAccess().getUnitsStatementParserRuleCall_2()); }
	ruleUnitsStatement
{ after(grammarAccess.getDeviateSubstatementAccess().getUnitsStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeviateSubstatementAccess().getDefaultStatementParserRuleCall_3()); }
	ruleDefaultStatement
{ after(grammarAccess.getDeviateSubstatementAccess().getDefaultStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDeviateSubstatementAccess().getConfigStatementParserRuleCall_4()); }
	ruleConfigStatement
{ after(grammarAccess.getDeviateSubstatementAccess().getConfigStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getDeviateSubstatementAccess().getMandatoryStatementParserRuleCall_5()); }
	ruleMandatoryStatement
{ after(grammarAccess.getDeviateSubstatementAccess().getMandatoryStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getDeviateSubstatementAccess().getMinElementsStatementParserRuleCall_6()); }
	ruleMinElementsStatement
{ after(grammarAccess.getDeviateSubstatementAccess().getMinElementsStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getDeviateSubstatementAccess().getMaxElementsStatementParserRuleCall_7()); }
	ruleMaxElementsStatement
{ after(grammarAccess.getDeviateSubstatementAccess().getMaxElementsStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getDeviateSubstatementAccess().getUnknownStatementParserRuleCall_8()); }
	ruleUnknownStatement
{ after(grammarAccess.getDeviateSubstatementAccess().getUnknownStatementParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getExtensionStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getExtensionStatementAccess().getGroup_2_1()); }
(rule__ExtensionStatement__Group_2_1__0)
{ after(grammarAccess.getExtensionStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionSubstatementAccess().getArgumentStatementParserRuleCall_0()); }
	ruleArgumentStatement
{ after(grammarAccess.getExtensionSubstatementAccess().getArgumentStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExtensionSubstatementAccess().getStatusStatementParserRuleCall_1()); }
	ruleStatusStatement
{ after(grammarAccess.getExtensionSubstatementAccess().getStatusStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExtensionSubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
	ruleDescriptionStatement
{ after(grammarAccess.getExtensionSubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExtensionSubstatementAccess().getReferenceStatementParserRuleCall_3()); }
	ruleReferenceStatement
{ after(grammarAccess.getExtensionSubstatementAccess().getReferenceStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExtensionSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
	ruleUnknownStatement
{ after(grammarAccess.getExtensionSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getArgumentStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getArgumentStatementAccess().getGroup_2_1()); }
(rule__ArgumentStatement__Group_2_1__0)
{ after(grammarAccess.getArgumentStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentSubstatementAccess().getYinElementStatementParserRuleCall_0()); }
	ruleYinElementStatement
{ after(grammarAccess.getArgumentSubstatementAccess().getYinElementStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getArgumentSubstatementAccess().getUnknownStatementParserRuleCall_1()); }
	ruleUnknownStatement
{ after(grammarAccess.getArgumentSubstatementAccess().getUnknownStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getIdentityStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getIdentityStatementAccess().getGroup_2_1()); }
(rule__IdentityStatement__Group_2_1__0)
{ after(grammarAccess.getIdentityStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentitySubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentitySubstatementAccess().getBaseStatementParserRuleCall_0()); }
	ruleBaseStatement
{ after(grammarAccess.getIdentitySubstatementAccess().getBaseStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdentitySubstatementAccess().getStatusStatementParserRuleCall_1()); }
	ruleStatusStatement
{ after(grammarAccess.getIdentitySubstatementAccess().getStatusStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIdentitySubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
	ruleDescriptionStatement
{ after(grammarAccess.getIdentitySubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getIdentitySubstatementAccess().getReferenceStatementParserRuleCall_3()); }
	ruleReferenceStatement
{ after(grammarAccess.getIdentitySubstatementAccess().getReferenceStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getIdentitySubstatementAccess().getUnknownStatementParserRuleCall_4()); }
	ruleUnknownStatement
{ after(grammarAccess.getIdentitySubstatementAccess().getUnknownStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getFeatureStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getFeatureStatementAccess().getGroup_2_1()); }
(rule__FeatureStatement__Group_2_1__0)
{ after(grammarAccess.getFeatureStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSubstatementAccess().getIfFeatureStatementParserRuleCall_0()); }
	ruleIfFeatureStatement
{ after(grammarAccess.getFeatureSubstatementAccess().getIfFeatureStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureSubstatementAccess().getStatusStatementParserRuleCall_1()); }
	ruleStatusStatement
{ after(grammarAccess.getFeatureSubstatementAccess().getStatusStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFeatureSubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
	ruleDescriptionStatement
{ after(grammarAccess.getFeatureSubstatementAccess().getDescriptionStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFeatureSubstatementAccess().getReferenceStatementParserRuleCall_3()); }
	ruleReferenceStatement
{ after(grammarAccess.getFeatureSubstatementAccess().getReferenceStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getFeatureSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
	ruleUnknownStatement
{ after(grammarAccess.getFeatureSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsToSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToSubstatementAccess().getPrefixStatementParserRuleCall_0()); }
	rulePrefixStatement
{ after(grammarAccess.getBelongsToSubstatementAccess().getPrefixStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBelongsToSubstatementAccess().getUnknownStatementParserRuleCall_1()); }
	ruleUnknownStatement
{ after(grammarAccess.getBelongsToSubstatementAccess().getUnknownStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefSubstatementAccess().getTypeStatementParserRuleCall_0()); }
	ruleTypeStatement
{ after(grammarAccess.getTypedefSubstatementAccess().getTypeStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypedefSubstatementAccess().getDescriptionStatementParserRuleCall_1()); }
	ruleDescriptionStatement
{ after(grammarAccess.getTypedefSubstatementAccess().getDescriptionStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypedefSubstatementAccess().getReferenceStatementParserRuleCall_2()); }
	ruleReferenceStatement
{ after(grammarAccess.getTypedefSubstatementAccess().getReferenceStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypedefSubstatementAccess().getDefaultStatementParserRuleCall_3()); }
	ruleDefaultStatement
{ after(grammarAccess.getTypedefSubstatementAccess().getDefaultStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypedefSubstatementAccess().getStatusStatementParserRuleCall_4()); }
	ruleStatusStatement
{ after(grammarAccess.getTypedefSubstatementAccess().getStatusStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTypedefSubstatementAccess().getUnitsStatementParserRuleCall_5()); }
	ruleUnitsStatement
{ after(grammarAccess.getTypedefSubstatementAccess().getUnitsStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getTypedefSubstatementAccess().getUnknownStatementParserRuleCall_6()); }
	ruleUnknownStatement
{ after(grammarAccess.getTypedefSubstatementAccess().getUnknownStatementParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getTypeAssignment_1_0()); }
(rule__TypeStatement__TypeAssignment_1_0)
{ after(grammarAccess.getTypeStatementAccess().getTypeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getTypeStatementAccess().getGroup_1_1()); }
(rule__TypeStatement__Group_1_1__0)
{ after(grammarAccess.getTypeStatementAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getTypeStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getTypeStatementAccess().getGroup_2_1()); }
(rule__TypeStatement__Group_2_1__0)
{ after(grammarAccess.getTypeStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSubStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSubStatementAccess().getBitStatementParserRuleCall_0()); }
	ruleBitStatement
{ after(grammarAccess.getTypeSubStatementAccess().getBitStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getFractionDigitsStatementParserRuleCall_1()); }
	ruleFractionDigitsStatement
{ after(grammarAccess.getTypeSubStatementAccess().getFractionDigitsStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getDefaultStatementParserRuleCall_2()); }
	ruleDefaultStatement
{ after(grammarAccess.getTypeSubStatementAccess().getDefaultStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getBaseStatementParserRuleCall_3()); }
	ruleBaseStatement
{ after(grammarAccess.getTypeSubStatementAccess().getBaseStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getEnumStatementParserRuleCall_4()); }
	ruleEnumStatement
{ after(grammarAccess.getTypeSubStatementAccess().getEnumStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getLengthStatementParserRuleCall_5()); }
	ruleLengthStatement
{ after(grammarAccess.getTypeSubStatementAccess().getLengthStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getPathStatementParserRuleCall_6()); }
	rulePathStatement
{ after(grammarAccess.getTypeSubStatementAccess().getPathStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getPatternStatementParserRuleCall_7()); }
	rulePatternStatement
{ after(grammarAccess.getTypeSubStatementAccess().getPatternStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getRangeStatementParserRuleCall_8()); }
	ruleRangeStatement
{ after(grammarAccess.getTypeSubStatementAccess().getRangeStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getRequireInstanceStatementParserRuleCall_9()); }
	ruleRequireInstanceStatement
{ after(grammarAccess.getTypeSubStatementAccess().getRequireInstanceStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getTypeStatementParserRuleCall_10()); }
	ruleTypeStatement
{ after(grammarAccess.getTypeSubStatementAccess().getTypeStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getTypeSubStatementAccess().getUnknownStatementParserRuleCall_11()); }
	ruleUnknownStatement
{ after(grammarAccess.getTypeSubStatementAccess().getUnknownStatementParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getBitStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getBitStatementAccess().getGroup_2_1()); }
(rule__BitStatement__Group_2_1__0)
{ after(grammarAccess.getBitStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitSubstatementAccess().getDescriptionStatementParserRuleCall_0()); }
	ruleDescriptionStatement
{ after(grammarAccess.getBitSubstatementAccess().getDescriptionStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBitSubstatementAccess().getReferenceStatementParserRuleCall_1()); }
	ruleReferenceStatement
{ after(grammarAccess.getBitSubstatementAccess().getReferenceStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBitSubstatementAccess().getStatusStatementParserRuleCall_2()); }
	ruleStatusStatement
{ after(grammarAccess.getBitSubstatementAccess().getStatusStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBitSubstatementAccess().getPositionStatementParserRuleCall_3()); }
	rulePositionStatement
{ after(grammarAccess.getBitSubstatementAccess().getPositionStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getBitSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
	ruleUnknownStatement
{ after(grammarAccess.getBitSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getEnumStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getEnumStatementAccess().getGroup_2_1()); }
(rule__EnumStatement__Group_2_1__0)
{ after(grammarAccess.getEnumStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSubstatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumSubstatementAccess().getDescriptionStatementParserRuleCall_0()); }
	ruleDescriptionStatement
{ after(grammarAccess.getEnumSubstatementAccess().getDescriptionStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEnumSubstatementAccess().getReferenceStatementParserRuleCall_1()); }
	ruleReferenceStatement
{ after(grammarAccess.getEnumSubstatementAccess().getReferenceStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEnumSubstatementAccess().getStatusStatementParserRuleCall_2()); }
	ruleStatusStatement
{ after(grammarAccess.getEnumSubstatementAccess().getStatusStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEnumSubstatementAccess().getValueStatementParserRuleCall_3()); }
	ruleValueStatement
{ after(grammarAccess.getEnumSubstatementAccess().getValueStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getEnumSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
	ruleUnknownStatement
{ after(grammarAccess.getEnumSubstatementAccess().getUnknownStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getImportStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getImportStatementAccess().getGroup_2_1()); }
(rule__ImportStatement__Group_2_1__0)
{ after(grammarAccess.getImportStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSubstatements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportSubstatementsAccess().getPrefixStatementParserRuleCall_0()); }
	rulePrefixStatement
{ after(grammarAccess.getImportSubstatementsAccess().getPrefixStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getImportSubstatementsAccess().getRevisionDateStatementParserRuleCall_1()); }
	ruleRevisionDateStatement
{ after(grammarAccess.getImportSubstatementsAccess().getRevisionDateStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getImportSubstatementsAccess().getUnknownStatementParserRuleCall_2()); }
	ruleUnknownStatement
{ after(grammarAccess.getImportSubstatementsAccess().getUnknownStatementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getIncludeStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getIncludeStatementAccess().getGroup_2_1()); }
(rule__IncludeStatement__Group_2_1__0)
{ after(grammarAccess.getIncludeStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeSubstatements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeSubstatementsAccess().getRevisionDateStatementParserRuleCall_0()); }
	ruleRevisionDateStatement
{ after(grammarAccess.getIncludeSubstatementsAccess().getRevisionDateStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIncludeSubstatementsAccess().getUnknownStatementParserRuleCall_1()); }
	ruleUnknownStatement
{ after(grammarAccess.getIncludeSubstatementsAccess().getUnknownStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getWhenStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getWhenStatementAccess().getGroup_2_1()); }
(rule__WhenStatement__Group_2_1__0)
{ after(grammarAccess.getWhenStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenSubstatements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenSubstatementsAccess().getDescriptionStatementParserRuleCall_0()); }
	ruleDescriptionStatement
{ after(grammarAccess.getWhenSubstatementsAccess().getDescriptionStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWhenSubstatementsAccess().getReferenceStatementParserRuleCall_1()); }
	ruleReferenceStatement
{ after(grammarAccess.getWhenSubstatementsAccess().getReferenceStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getWhenSubstatementsAccess().getUnknownStatementParserRuleCall_2()); }
	ruleUnknownStatement
{ after(grammarAccess.getWhenSubstatementsAccess().getUnknownStatementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionStatementAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getRevisionStatementAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getRevisionStatementAccess().getGroup_2_1()); }
(rule__RevisionStatement__Group_2_1__0)
{ after(grammarAccess.getRevisionStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionSubstatements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionSubstatementsAccess().getDescriptionStatementParserRuleCall_0()); }
	ruleDescriptionStatement
{ after(grammarAccess.getRevisionSubstatementsAccess().getDescriptionStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRevisionSubstatementsAccess().getReferenceStatementParserRuleCall_1()); }
	ruleReferenceStatement
{ after(grammarAccess.getRevisionSubstatementsAccess().getReferenceStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRevisionSubstatementsAccess().getUnknownStatementParserRuleCall_2()); }
	ruleUnknownStatement
{ after(grammarAccess.getRevisionSubstatementsAccess().getUnknownStatementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInType__BtypeAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeBinaryKeyword_0_0()); }

	'binary' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeBinaryKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeBitsKeyword_0_1()); }

	'bits' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeBitsKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeBooleanKeyword_0_2()); }

	'boolean' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeBooleanKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeDecimal64Keyword_0_3()); }

	'decimal64' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeDecimal64Keyword_0_3()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeEmptyKeyword_0_4()); }

	'empty' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeEmptyKeyword_0_4()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeEnumerationKeyword_0_5()); }

	'enumeration' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeEnumerationKeyword_0_5()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeIdentityrefKeyword_0_6()); }

	'identityref' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeIdentityrefKeyword_0_6()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeInstanceIdentifierKeyword_0_7()); }

	'instance-identifier' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeInstanceIdentifierKeyword_0_7()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeInt8Keyword_0_8()); }

	'int8' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeInt8Keyword_0_8()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeInt16Keyword_0_9()); }

	'int16' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeInt16Keyword_0_9()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeInt32Keyword_0_10()); }

	'int32' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeInt32Keyword_0_10()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeInt64Keyword_0_11()); }

	'int64' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeInt64Keyword_0_11()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeLeafrefKeyword_0_12()); }

	'leafref' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeLeafrefKeyword_0_12()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeStringKeyword_0_13()); }

	'string' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeStringKeyword_0_13()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeUint8Keyword_0_14()); }

	'uint8' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeUint8Keyword_0_14()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeUint16Keyword_0_15()); }

	'uint16' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeUint16Keyword_0_15()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeUint32Keyword_0_16()); }

	'uint32' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeUint32Keyword_0_16()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeUint64Keyword_0_17()); }

	'uint64' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeUint64Keyword_0_17()); }
)

    |(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeUnionKeyword_0_18()); }

	'union' 

{ after(grammarAccess.getBuiltInTypeAccess().getBtypeUnionKeyword_0_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__STRINGARG__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRINGARGAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getSTRINGARGAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSTRINGARGAccess().getCUSTOMSTRINGParserRuleCall_1()); }
	ruleCUSTOMSTRING
{ after(grammarAccess.getSTRINGARGAccess().getCUSTOMSTRINGParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSTRINGARGAccess().getDefaultKeyword_2()); }

	'default' 

{ after(grammarAccess.getSTRINGARGAccess().getDefaultKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_0()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
(rule__Module__NameAssignment_1)
{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getStatementsAssignment_3()); }
(rule__Module__StatementsAssignment_3)*
{ after(grammarAccess.getModuleAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SubModule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubModule__Group__0__Impl
	rule__SubModule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubModule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubModuleAccess().getSubmoduleKeyword_0()); }

	'submodule' 

{ after(grammarAccess.getSubModuleAccess().getSubmoduleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubModule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubModule__Group__1__Impl
	rule__SubModule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubModule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubModuleAccess().getNameAssignment_1()); }
(rule__SubModule__NameAssignment_1)
{ after(grammarAccess.getSubModuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubModule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubModule__Group__2__Impl
	rule__SubModule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubModule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubModuleAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSubModuleAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubModule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubModule__Group__3__Impl
	rule__SubModule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubModule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubModuleAccess().getStatementsAssignment_3()); }
(rule__SubModule__StatementsAssignment_3)*
{ after(grammarAccess.getSubModuleAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubModule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubModule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubModule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubModuleAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSubModuleAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__YangVersionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YangVersionStatement__Group__0__Impl
	rule__YangVersionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__YangVersionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangVersionStatementAccess().getYangVersionKeyword_0()); }

	'yang-version' 

{ after(grammarAccess.getYangVersionStatementAccess().getYangVersionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__YangVersionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YangVersionStatement__Group__1__Impl
	rule__YangVersionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__YangVersionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangVersionStatementAccess().getVersionAssignment_1()); }
(rule__YangVersionStatement__VersionAssignment_1)
{ after(grammarAccess.getYangVersionStatementAccess().getVersionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__YangVersionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YangVersionStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__YangVersionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangVersionStatementAccess().getAlternatives_2()); }
(rule__YangVersionStatement__Alternatives_2)
{ after(grammarAccess.getYangVersionStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__YangVersionStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YangVersionStatement__Group_2_1__0__Impl
	rule__YangVersionStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__YangVersionStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangVersionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getYangVersionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__YangVersionStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YangVersionStatement__Group_2_1__1__Impl
	rule__YangVersionStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__YangVersionStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangVersionStatementAccess().getYangversionunknownstatementsAssignment_2_1_1()); }
(rule__YangVersionStatement__YangversionunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getYangVersionStatementAccess().getYangversionunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__YangVersionStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YangVersionStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__YangVersionStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangVersionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getYangVersionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrganizationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrganizationStatement__Group__0__Impl
	rule__OrganizationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrganizationStatementAccess().getOrganizationKeyword_0()); }

	'organization' 

{ after(grammarAccess.getOrganizationStatementAccess().getOrganizationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrganizationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrganizationStatement__Group__1__Impl
	rule__OrganizationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrganizationStatementAccess().getOrganizationAssignment_1()); }
(rule__OrganizationStatement__OrganizationAssignment_1)
{ after(grammarAccess.getOrganizationStatementAccess().getOrganizationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrganizationStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrganizationStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrganizationStatementAccess().getAlternatives_2()); }
(rule__OrganizationStatement__Alternatives_2)
{ after(grammarAccess.getOrganizationStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrganizationStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrganizationStatement__Group_2_1__0__Impl
	rule__OrganizationStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrganizationStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getOrganizationStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrganizationStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrganizationStatement__Group_2_1__1__Impl
	rule__OrganizationStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrganizationStatementAccess().getOrganizationunknownstatementsAssignment_2_1_1()); }
(rule__OrganizationStatement__OrganizationunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getOrganizationStatementAccess().getOrganizationunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrganizationStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrganizationStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrganizationStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getOrganizationStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ContactStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContactStatement__Group__0__Impl
	rule__ContactStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContactStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContactStatementAccess().getContactKeyword_0()); }

	'contact' 

{ after(grammarAccess.getContactStatementAccess().getContactKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContactStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContactStatement__Group__1__Impl
	rule__ContactStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContactStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContactStatementAccess().getContactAssignment_1()); }
(rule__ContactStatement__ContactAssignment_1)
{ after(grammarAccess.getContactStatementAccess().getContactAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContactStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContactStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContactStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContactStatementAccess().getAlternatives_2()); }
(rule__ContactStatement__Alternatives_2)
{ after(grammarAccess.getContactStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ContactStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContactStatement__Group_2_1__0__Impl
	rule__ContactStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContactStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContactStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getContactStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContactStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContactStatement__Group_2_1__1__Impl
	rule__ContactStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContactStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContactStatementAccess().getContactunknownstatementsAssignment_2_1_1()); }
(rule__ContactStatement__ContactunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getContactStatementAccess().getContactunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContactStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContactStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContactStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContactStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getContactStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DescriptionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescriptionStatement__Group__0__Impl
	rule__DescriptionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionStatementAccess().getDescriptionKeyword_0()); }

	'description' 

{ after(grammarAccess.getDescriptionStatementAccess().getDescriptionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DescriptionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescriptionStatement__Group__1__Impl
	rule__DescriptionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionStatementAccess().getDescriptionAssignment_1()); }
(rule__DescriptionStatement__DescriptionAssignment_1)
{ after(grammarAccess.getDescriptionStatementAccess().getDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DescriptionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescriptionStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionStatementAccess().getAlternatives_2()); }
(rule__DescriptionStatement__Alternatives_2)
{ after(grammarAccess.getDescriptionStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DescriptionStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescriptionStatement__Group_2_1__0__Impl
	rule__DescriptionStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getDescriptionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DescriptionStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescriptionStatement__Group_2_1__1__Impl
	rule__DescriptionStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionStatementAccess().getDescriptionunknownstatementsAssignment_2_1_1()); }
(rule__DescriptionStatement__DescriptionunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getDescriptionStatementAccess().getDescriptionunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DescriptionStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescriptionStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getDescriptionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReferenceStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group__0__Impl
	rule__ReferenceStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getReferenceKeyword_0()); }

	'reference' 

{ after(grammarAccess.getReferenceStatementAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group__1__Impl
	rule__ReferenceStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getReferenceAssignment_1()); }
(rule__ReferenceStatement__ReferenceAssignment_1)
{ after(grammarAccess.getReferenceStatementAccess().getReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getAlternatives_2()); }
(rule__ReferenceStatement__Alternatives_2)
{ after(grammarAccess.getReferenceStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReferenceStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group_2_1__0__Impl
	rule__ReferenceStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getReferenceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group_2_1__1__Impl
	rule__ReferenceStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getReferenceunknownstatementsAssignment_2_1_1()); }
(rule__ReferenceStatement__ReferenceunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getReferenceStatementAccess().getReferenceunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getReferenceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NamespaceStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceStatement__Group__0__Impl
	rule__NamespaceStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceStatementAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceStatementAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceStatement__Group__1__Impl
	rule__NamespaceStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceStatementAccess().getUriAssignment_1()); }
(rule__NamespaceStatement__UriAssignment_1)
{ after(grammarAccess.getNamespaceStatementAccess().getUriAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceStatementAccess().getAlternatives_2()); }
(rule__NamespaceStatement__Alternatives_2)
{ after(grammarAccess.getNamespaceStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NamespaceStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceStatement__Group_2_1__0__Impl
	rule__NamespaceStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getNamespaceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceStatement__Group_2_1__1__Impl
	rule__NamespaceStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceStatementAccess().getNamespaceunknownstatementsAssignment_2_1_1()); }
(rule__NamespaceStatement__NamespaceunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getNamespaceStatementAccess().getNamespaceunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getNamespaceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrefixStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixStatement__Group__0__Impl
	rule__PrefixStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStatementAccess().getPrefixKeyword_0()); }

	'prefix' 

{ after(grammarAccess.getPrefixStatementAccess().getPrefixKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixStatement__Group__1__Impl
	rule__PrefixStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStatementAccess().getNameAssignment_1()); }
(rule__PrefixStatement__NameAssignment_1)
{ after(grammarAccess.getPrefixStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStatementAccess().getAlternatives_2()); }
(rule__PrefixStatement__Alternatives_2)
{ after(grammarAccess.getPrefixStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrefixStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixStatement__Group_2_1__0__Impl
	rule__PrefixStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getPrefixStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixStatement__Group_2_1__1__Impl
	rule__PrefixStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStatementAccess().getPrefixunknownstatementsAssignment_2_1_1()); }
(rule__PrefixStatement__PrefixunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getPrefixStatementAccess().getPrefixunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getPrefixStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RequireInstanceStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireInstanceStatement__Group__0__Impl
	rule__RequireInstanceStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireInstanceStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getRequireInstanceKeyword_0()); }

	'require-instance' 

{ after(grammarAccess.getRequireInstanceStatementAccess().getRequireInstanceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequireInstanceStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireInstanceStatement__Group__1__Impl
	rule__RequireInstanceStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireInstanceStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getRequireAssignment_1()); }
(rule__RequireInstanceStatement__RequireAssignment_1)
{ after(grammarAccess.getRequireInstanceStatementAccess().getRequireAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequireInstanceStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireInstanceStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireInstanceStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getAlternatives_2()); }
(rule__RequireInstanceStatement__Alternatives_2)
{ after(grammarAccess.getRequireInstanceStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RequireInstanceStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireInstanceStatement__Group_2_1__0__Impl
	rule__RequireInstanceStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireInstanceStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getRequireInstanceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequireInstanceStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireInstanceStatement__Group_2_1__1__Impl
	rule__RequireInstanceStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireInstanceStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getRequireunknownstatementsAssignment_2_1_1()); }
(rule__RequireInstanceStatement__RequireunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getRequireInstanceStatementAccess().getRequireunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequireInstanceStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireInstanceStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireInstanceStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getRequireInstanceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PathStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathStatement__Group__0__Impl
	rule__PathStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathStatementAccess().getPathKeyword_0()); }

	'path' 

{ after(grammarAccess.getPathStatementAccess().getPathKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathStatement__Group__1__Impl
	rule__PathStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathStatementAccess().getPathAssignment_1()); }
(rule__PathStatement__PathAssignment_1)
{ after(grammarAccess.getPathStatementAccess().getPathAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathStatementAccess().getAlternatives_2()); }
(rule__PathStatement__Alternatives_2)
{ after(grammarAccess.getPathStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PathStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathStatement__Group_2_1__0__Impl
	rule__PathStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getPathStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathStatement__Group_2_1__1__Impl
	rule__PathStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathStatementAccess().getPathunknownstatementsAssignment_2_1_1()); }
(rule__PathStatement__PathunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getPathStatementAccess().getPathunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getPathStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PositionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionStatement__Group__0__Impl
	rule__PositionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionStatementAccess().getPositionKeyword_0()); }

	'position' 

{ after(grammarAccess.getPositionStatementAccess().getPositionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionStatement__Group__1__Impl
	rule__PositionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionStatementAccess().getIntargAssignment_1()); }
(rule__PositionStatement__IntargAssignment_1)
{ after(grammarAccess.getPositionStatementAccess().getIntargAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionStatementAccess().getAlternatives_2()); }
(rule__PositionStatement__Alternatives_2)
{ after(grammarAccess.getPositionStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PositionStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionStatement__Group_2_1__0__Impl
	rule__PositionStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getPositionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionStatement__Group_2_1__1__Impl
	rule__PositionStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionStatementAccess().getPositionunknownstatementsAssignment_2_1_1()); }
(rule__PositionStatement__PositionunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getPositionStatementAccess().getPositionunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getPositionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValueStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueStatement__Group__0__Impl
	rule__ValueStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueStatementAccess().getValueKeyword_0()); }

	'value' 

{ after(grammarAccess.getValueStatementAccess().getValueKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueStatement__Group__1__Impl
	rule__ValueStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueStatementAccess().getIntargAssignment_1()); }
(rule__ValueStatement__IntargAssignment_1)
{ after(grammarAccess.getValueStatementAccess().getIntargAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueStatementAccess().getAlternatives_2()); }
(rule__ValueStatement__Alternatives_2)
{ after(grammarAccess.getValueStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValueStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueStatement__Group_2_1__0__Impl
	rule__ValueStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getValueStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueStatement__Group_2_1__1__Impl
	rule__ValueStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueStatementAccess().getValueunknownstatementsAssignment_2_1_1()); }
(rule__ValueStatement__ValueunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getValueStatementAccess().getValueunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getValueStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ErrorAppTagStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorAppTagStatement__Group__0__Impl
	rule__ErrorAppTagStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorAppTagStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getErrorAppTagKeyword_0()); }

	'error-app-tag' 

{ after(grammarAccess.getErrorAppTagStatementAccess().getErrorAppTagKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorAppTagStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorAppTagStatement__Group__1__Impl
	rule__ErrorAppTagStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorAppTagStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getArgAssignment_1()); }
(rule__ErrorAppTagStatement__ArgAssignment_1)
{ after(grammarAccess.getErrorAppTagStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorAppTagStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorAppTagStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorAppTagStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getAlternatives_2()); }
(rule__ErrorAppTagStatement__Alternatives_2)
{ after(grammarAccess.getErrorAppTagStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ErrorAppTagStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorAppTagStatement__Group_2_1__0__Impl
	rule__ErrorAppTagStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorAppTagStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getErrorAppTagStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorAppTagStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorAppTagStatement__Group_2_1__1__Impl
	rule__ErrorAppTagStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorAppTagStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getErroraunknownstatementsAssignment_2_1_1()); }
(rule__ErrorAppTagStatement__ErroraunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getErrorAppTagStatementAccess().getErroraunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorAppTagStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorAppTagStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorAppTagStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getErrorAppTagStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ErrorMessageStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorMessageStatement__Group__0__Impl
	rule__ErrorMessageStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorMessageStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getErrorMessageKeyword_0()); }

	'error-message' 

{ after(grammarAccess.getErrorMessageStatementAccess().getErrorMessageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorMessageStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorMessageStatement__Group__1__Impl
	rule__ErrorMessageStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorMessageStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getArgAssignment_1()); }
(rule__ErrorMessageStatement__ArgAssignment_1)
{ after(grammarAccess.getErrorMessageStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorMessageStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorMessageStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorMessageStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getAlternatives_2()); }
(rule__ErrorMessageStatement__Alternatives_2)
{ after(grammarAccess.getErrorMessageStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ErrorMessageStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorMessageStatement__Group_2_1__0__Impl
	rule__ErrorMessageStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorMessageStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getErrorMessageStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorMessageStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorMessageStatement__Group_2_1__1__Impl
	rule__ErrorMessageStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorMessageStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getErrormunknownstatementsAssignment_2_1_1()); }
(rule__ErrorMessageStatement__ErrormunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getErrorMessageStatementAccess().getErrormunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorMessageStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorMessageStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorMessageStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getErrorMessageStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnitsStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitsStatement__Group__0__Impl
	rule__UnitsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitsStatementAccess().getUnitsKeyword_0()); }

	'units' 

{ after(grammarAccess.getUnitsStatementAccess().getUnitsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitsStatement__Group__1__Impl
	rule__UnitsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitsStatementAccess().getArgAssignment_1()); }
(rule__UnitsStatement__ArgAssignment_1)
{ after(grammarAccess.getUnitsStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitsStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitsStatementAccess().getAlternatives_2()); }
(rule__UnitsStatement__Alternatives_2)
{ after(grammarAccess.getUnitsStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnitsStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitsStatement__Group_2_1__0__Impl
	rule__UnitsStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitsStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getUnitsStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitsStatement__Group_2_1__1__Impl
	rule__UnitsStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitsStatementAccess().getUnitsunknownstatementsAssignment_2_1_1()); }
(rule__UnitsStatement__UnitsunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getUnitsStatementAccess().getUnitsunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitsStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitsStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getUnitsStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefaultStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultStatement__Group__0__Impl
	rule__DefaultStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultStatementAccess().getDefaultKeyword_0()); }

	'default' 

{ after(grammarAccess.getDefaultStatementAccess().getDefaultKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultStatement__Group__1__Impl
	rule__DefaultStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultStatementAccess().getArgAssignment_1()); }
(rule__DefaultStatement__ArgAssignment_1)
{ after(grammarAccess.getDefaultStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultStatementAccess().getAlternatives_2()); }
(rule__DefaultStatement__Alternatives_2)
{ after(grammarAccess.getDefaultStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefaultStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultStatement__Group_2_1__0__Impl
	rule__DefaultStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getDefaultStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultStatement__Group_2_1__1__Impl
	rule__DefaultStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultStatementAccess().getDefaultunknownstatementsAssignment_2_1_1()); }
(rule__DefaultStatement__DefaultunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getDefaultStatementAccess().getDefaultunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getDefaultStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatusStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatusStatement__Group__0__Impl
	rule__StatusStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatusStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatusStatementAccess().getStatusKeyword_0()); }

	'status' 

{ after(grammarAccess.getStatusStatementAccess().getStatusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatusStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatusStatement__Group__1__Impl
	rule__StatusStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatusStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatusStatementAccess().getStatusAssignment_1()); }
(rule__StatusStatement__StatusAssignment_1)
{ after(grammarAccess.getStatusStatementAccess().getStatusAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatusStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatusStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatusStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatusStatementAccess().getAlternatives_2()); }
(rule__StatusStatement__Alternatives_2)
{ after(grammarAccess.getStatusStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatusStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatusStatement__Group_2_1__0__Impl
	rule__StatusStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatusStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatusStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getStatusStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatusStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatusStatement__Group_2_1__1__Impl
	rule__StatusStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatusStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatusStatementAccess().getStatusunknownstatementsAssignment_2_1_1()); }
(rule__StatusStatement__StatusunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getStatusStatementAccess().getStatusunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatusStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatusStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatusStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatusStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getStatusStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RevisionDateStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionDateStatement__Group__0__Impl
	rule__RevisionDateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionDateStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getRevisionDateKeyword_0()); }

	'revision-date' 

{ after(grammarAccess.getRevisionDateStatementAccess().getRevisionDateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RevisionDateStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionDateStatement__Group__1__Impl
	rule__RevisionDateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionDateStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getDateAssignment_1()); }
(rule__RevisionDateStatement__DateAssignment_1)
{ after(grammarAccess.getRevisionDateStatementAccess().getDateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RevisionDateStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionDateStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionDateStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getAlternatives_2()); }
(rule__RevisionDateStatement__Alternatives_2)
{ after(grammarAccess.getRevisionDateStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RevisionDateStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionDateStatement__Group_2_1__0__Impl
	rule__RevisionDateStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionDateStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getRevisionDateStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RevisionDateStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionDateStatement__Group_2_1__1__Impl
	rule__RevisionDateStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionDateStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getRevisiondateunknownstatementsAssignment_2_1_1()); }
(rule__RevisionDateStatement__RevisiondateunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getRevisionDateStatementAccess().getRevisiondateunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RevisionDateStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionDateStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionDateStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getRevisionDateStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UniqueStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniqueStatement__Group__0__Impl
	rule__UniqueStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueStatementAccess().getUniqueKeyword_0()); }

	'unique' 

{ after(grammarAccess.getUniqueStatementAccess().getUniqueKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniqueStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniqueStatement__Group__1__Impl
	rule__UniqueStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueStatementAccess().getArgAssignment_1()); }
(rule__UniqueStatement__ArgAssignment_1)
{ after(grammarAccess.getUniqueStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniqueStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniqueStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueStatementAccess().getAlternatives_2()); }
(rule__UniqueStatement__Alternatives_2)
{ after(grammarAccess.getUniqueStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UniqueStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniqueStatement__Group_2_1__0__Impl
	rule__UniqueStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getUniqueStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniqueStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniqueStatement__Group_2_1__1__Impl
	rule__UniqueStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueStatementAccess().getUniqueunknownstatementsAssignment_2_1_1()); }
(rule__UniqueStatement__UniqueunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getUniqueStatementAccess().getUniqueunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniqueStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniqueStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getUniqueStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStatement__Group__0__Impl
	rule__KeyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getKeyKeyword_0()); }

	'key' 

{ after(grammarAccess.getKeyStatementAccess().getKeyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStatement__Group__1__Impl
	rule__KeyStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getArgAssignment_1()); }
(rule__KeyStatement__ArgAssignment_1)
{ after(grammarAccess.getKeyStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getAlternatives_2()); }
(rule__KeyStatement__Alternatives_2)
{ after(grammarAccess.getKeyStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStatement__Group_2_1__0__Impl
	rule__KeyStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getKeyStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStatement__Group_2_1__1__Impl
	rule__KeyStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getKeyunknownstatementsAssignment_2_1_1()); }
(rule__KeyStatement__KeyunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getKeyStatementAccess().getKeyunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getKeyStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrderedbyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderedbyStatement__Group__0__Impl
	rule__OrderedbyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedbyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getOrderedByKeyword_0()); }

	'ordered-by' 

{ after(grammarAccess.getOrderedbyStatementAccess().getOrderedByKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedbyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderedbyStatement__Group__1__Impl
	rule__OrderedbyStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedbyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getArgAssignment_1()); }
(rule__OrderedbyStatement__ArgAssignment_1)
{ after(grammarAccess.getOrderedbyStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedbyStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderedbyStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedbyStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getAlternatives_2()); }
(rule__OrderedbyStatement__Alternatives_2)
{ after(grammarAccess.getOrderedbyStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrderedbyStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderedbyStatement__Group_2_1__0__Impl
	rule__OrderedbyStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedbyStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getOrderedbyStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedbyStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderedbyStatement__Group_2_1__1__Impl
	rule__OrderedbyStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedbyStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getOrderedbyunknownstatementsAssignment_2_1_1()); }
(rule__OrderedbyStatement__OrderedbyunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getOrderedbyStatementAccess().getOrderedbyunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedbyStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderedbyStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedbyStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getOrderedbyStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PresenceStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresenceStatement__Group__0__Impl
	rule__PresenceStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresenceStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresenceStatementAccess().getPresenceKeyword_0()); }

	'presence' 

{ after(grammarAccess.getPresenceStatementAccess().getPresenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresenceStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresenceStatement__Group__1__Impl
	rule__PresenceStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PresenceStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresenceStatementAccess().getArgAssignment_1()); }
(rule__PresenceStatement__ArgAssignment_1)
{ after(grammarAccess.getPresenceStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresenceStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresenceStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresenceStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresenceStatementAccess().getAlternatives_2()); }
(rule__PresenceStatement__Alternatives_2)
{ after(grammarAccess.getPresenceStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PresenceStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresenceStatement__Group_2_1__0__Impl
	rule__PresenceStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresenceStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresenceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getPresenceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresenceStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresenceStatement__Group_2_1__1__Impl
	rule__PresenceStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PresenceStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresenceStatementAccess().getPresenceunknownstatementsAssignment_2_1_1()); }
(rule__PresenceStatement__PresenceunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getPresenceStatementAccess().getPresenceunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresenceStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresenceStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresenceStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresenceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getPresenceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MandatoryStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryStatement__Group__0__Impl
	rule__MandatoryStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryStatementAccess().getMandatoryKeyword_0()); }

	'mandatory' 

{ after(grammarAccess.getMandatoryStatementAccess().getMandatoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MandatoryStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryStatement__Group__1__Impl
	rule__MandatoryStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryStatementAccess().getBoolargAssignment_1()); }
(rule__MandatoryStatement__BoolargAssignment_1)
{ after(grammarAccess.getMandatoryStatementAccess().getBoolargAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MandatoryStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryStatementAccess().getAlternatives_2()); }
(rule__MandatoryStatement__Alternatives_2)
{ after(grammarAccess.getMandatoryStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MandatoryStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryStatement__Group_2_1__0__Impl
	rule__MandatoryStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getMandatoryStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MandatoryStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryStatement__Group_2_1__1__Impl
	rule__MandatoryStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryStatementAccess().getMandatoryunknownstatementsAssignment_2_1_1()); }
(rule__MandatoryStatement__MandatoryunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getMandatoryStatementAccess().getMandatoryunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MandatoryStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getMandatoryStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConfigStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigStatement__Group__0__Impl
	rule__ConfigStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigStatementAccess().getConfigKeyword_0()); }

	'config' 

{ after(grammarAccess.getConfigStatementAccess().getConfigKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigStatement__Group__1__Impl
	rule__ConfigStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigStatementAccess().getBoolargAssignment_1()); }
(rule__ConfigStatement__BoolargAssignment_1)
{ after(grammarAccess.getConfigStatementAccess().getBoolargAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigStatementAccess().getAlternatives_2()); }
(rule__ConfigStatement__Alternatives_2)
{ after(grammarAccess.getConfigStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConfigStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigStatement__Group_2_1__0__Impl
	rule__ConfigStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getConfigStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigStatement__Group_2_1__1__Impl
	rule__ConfigStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigStatementAccess().getConfigunknownstatementsAssignment_2_1_1()); }
(rule__ConfigStatement__ConfigunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getConfigStatementAccess().getConfigunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getConfigStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FractionDigitsStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FractionDigitsStatement__Group__0__Impl
	rule__FractionDigitsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FractionDigitsStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getFractionDigitsKeyword_0()); }

	'fraction-digits' 

{ after(grammarAccess.getFractionDigitsStatementAccess().getFractionDigitsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FractionDigitsStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FractionDigitsStatement__Group__1__Impl
	rule__FractionDigitsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FractionDigitsStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getArgAssignment_1()); }
(rule__FractionDigitsStatement__ArgAssignment_1)
{ after(grammarAccess.getFractionDigitsStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FractionDigitsStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FractionDigitsStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FractionDigitsStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getAlternatives_2()); }
(rule__FractionDigitsStatement__Alternatives_2)
{ after(grammarAccess.getFractionDigitsStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FractionDigitsStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FractionDigitsStatement__Group_2_1__0__Impl
	rule__FractionDigitsStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FractionDigitsStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getFractionDigitsStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FractionDigitsStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FractionDigitsStatement__Group_2_1__1__Impl
	rule__FractionDigitsStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FractionDigitsStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getFractiondigitsunknownstatementsAssignment_2_1_1()); }
(rule__FractionDigitsStatement__FractiondigitsunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getFractionDigitsStatementAccess().getFractiondigitsunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FractionDigitsStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FractionDigitsStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FractionDigitsStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getFractionDigitsStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfFeatureStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfFeatureStatement__Group__0__Impl
	rule__IfFeatureStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getIfFeatureKeyword_0()); }

	'if-feature' 

{ after(grammarAccess.getIfFeatureStatementAccess().getIfFeatureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfFeatureStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfFeatureStatement__Group__1__Impl
	rule__IfFeatureStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getGroup_1()); }
(rule__IfFeatureStatement__Group_1__0)?
{ after(grammarAccess.getIfFeatureStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfFeatureStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfFeatureStatement__Group__2__Impl
	rule__IfFeatureStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getIdentAssignment_2()); }
(rule__IfFeatureStatement__IdentAssignment_2)
{ after(grammarAccess.getIfFeatureStatementAccess().getIdentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfFeatureStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfFeatureStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getAlternatives_3()); }
(rule__IfFeatureStatement__Alternatives_3)
{ after(grammarAccess.getIfFeatureStatementAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfFeatureStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfFeatureStatement__Group_1__0__Impl
	rule__IfFeatureStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getPrefAssignment_1_0()); }
(rule__IfFeatureStatement__PrefAssignment_1_0)
{ after(grammarAccess.getIfFeatureStatementAccess().getPrefAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfFeatureStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfFeatureStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getIfFeatureStatementAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfFeatureStatement__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfFeatureStatement__Group_3_1__0__Impl
	rule__IfFeatureStatement__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getLeftCurlyBracketKeyword_3_1_0()); }

	'{' 

{ after(grammarAccess.getIfFeatureStatementAccess().getLeftCurlyBracketKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfFeatureStatement__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfFeatureStatement__Group_3_1__1__Impl
	rule__IfFeatureStatement__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getIffeatureunknownstatementsAssignment_3_1_1()); }
(rule__IfFeatureStatement__IffeatureunknownstatementsAssignment_3_1_1)*
{ after(grammarAccess.getIfFeatureStatementAccess().getIffeatureunknownstatementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfFeatureStatement__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfFeatureStatement__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getRightCurlyBracketKeyword_3_1_2()); }

	'}' 

{ after(grammarAccess.getIfFeatureStatementAccess().getRightCurlyBracketKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BaseStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseStatement__Group__0__Impl
	rule__BaseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getBaseKeyword_0()); }

	'base' 

{ after(grammarAccess.getBaseStatementAccess().getBaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseStatement__Group__1__Impl
	rule__BaseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getGroup_1()); }
(rule__BaseStatement__Group_1__0)?
{ after(grammarAccess.getBaseStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseStatement__Group__2__Impl
	rule__BaseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getIdentAssignment_2()); }
(rule__BaseStatement__IdentAssignment_2)
{ after(grammarAccess.getBaseStatementAccess().getIdentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getAlternatives_3()); }
(rule__BaseStatement__Alternatives_3)
{ after(grammarAccess.getBaseStatementAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BaseStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseStatement__Group_1__0__Impl
	rule__BaseStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getPrefAssignment_1_0()); }
(rule__BaseStatement__PrefAssignment_1_0)
{ after(grammarAccess.getBaseStatementAccess().getPrefAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getBaseStatementAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BaseStatement__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseStatement__Group_3_1__0__Impl
	rule__BaseStatement__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getLeftCurlyBracketKeyword_3_1_0()); }

	'{' 

{ after(grammarAccess.getBaseStatementAccess().getLeftCurlyBracketKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseStatement__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseStatement__Group_3_1__1__Impl
	rule__BaseStatement__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getBaseunknownstatementsAssignment_3_1_1()); }
(rule__BaseStatement__BaseunknownstatementsAssignment_3_1_1)*
{ after(grammarAccess.getBaseStatementAccess().getBaseunknownstatementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseStatement__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseStatement__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getRightCurlyBracketKeyword_3_1_2()); }

	'}' 

{ after(grammarAccess.getBaseStatementAccess().getRightCurlyBracketKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__YinElementStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YinElementStatement__Group__0__Impl
	rule__YinElementStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__YinElementStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYinElementStatementAccess().getYinElementKeyword_0()); }

	'yin-element' 

{ after(grammarAccess.getYinElementStatementAccess().getYinElementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__YinElementStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YinElementStatement__Group__1__Impl
	rule__YinElementStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__YinElementStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYinElementStatementAccess().getBoolargAssignment_1()); }
(rule__YinElementStatement__BoolargAssignment_1)
{ after(grammarAccess.getYinElementStatementAccess().getBoolargAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__YinElementStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YinElementStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__YinElementStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYinElementStatementAccess().getAlternatives_2()); }
(rule__YinElementStatement__Alternatives_2)
{ after(grammarAccess.getYinElementStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__YinElementStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YinElementStatement__Group_2_1__0__Impl
	rule__YinElementStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__YinElementStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYinElementStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getYinElementStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__YinElementStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YinElementStatement__Group_2_1__1__Impl
	rule__YinElementStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__YinElementStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYinElementStatementAccess().getYinelementunknownstatementsAssignment_2_1_1()); }
(rule__YinElementStatement__YinelementunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getYinElementStatementAccess().getYinelementunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__YinElementStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YinElementStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__YinElementStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYinElementStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getYinElementStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MinElementsStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinElementsStatement__Group__0__Impl
	rule__MinElementsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinElementsStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinElementsStatementAccess().getMinElementsKeyword_0()); }

	'min-elements' 

{ after(grammarAccess.getMinElementsStatementAccess().getMinElementsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinElementsStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinElementsStatement__Group__1__Impl
	rule__MinElementsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinElementsStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinElementsStatementAccess().getArgAssignment_1()); }
(rule__MinElementsStatement__ArgAssignment_1)
{ after(grammarAccess.getMinElementsStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinElementsStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinElementsStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinElementsStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinElementsStatementAccess().getAlternatives_2()); }
(rule__MinElementsStatement__Alternatives_2)
{ after(grammarAccess.getMinElementsStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MinElementsStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinElementsStatement__Group_2_1__0__Impl
	rule__MinElementsStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinElementsStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinElementsStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getMinElementsStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinElementsStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinElementsStatement__Group_2_1__1__Impl
	rule__MinElementsStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinElementsStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinElementsStatementAccess().getMinelementsunknownstatementsAssignment_2_1_1()); }
(rule__MinElementsStatement__MinelementsunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getMinElementsStatementAccess().getMinelementsunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinElementsStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinElementsStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinElementsStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinElementsStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getMinElementsStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MaxElementsStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxElementsStatement__Group__0__Impl
	rule__MaxElementsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxElementsStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getMaxElementsKeyword_0()); }

	'max-elements' 

{ after(grammarAccess.getMaxElementsStatementAccess().getMaxElementsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxElementsStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxElementsStatement__Group__1__Impl
	rule__MaxElementsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxElementsStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getArgAssignment_1()); }
(rule__MaxElementsStatement__ArgAssignment_1)
{ after(grammarAccess.getMaxElementsStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxElementsStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxElementsStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxElementsStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getAlternatives_2()); }
(rule__MaxElementsStatement__Alternatives_2)
{ after(grammarAccess.getMaxElementsStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MaxElementsStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxElementsStatement__Group_2_1__0__Impl
	rule__MaxElementsStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxElementsStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getMaxElementsStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxElementsStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxElementsStatement__Group_2_1__1__Impl
	rule__MaxElementsStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxElementsStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getMaxelementsunknownstatementsAssignment_2_1_1()); }
(rule__MaxElementsStatement__MaxelementsunknownstatementsAssignment_2_1_1)*
{ after(grammarAccess.getMaxElementsStatementAccess().getMaxelementsunknownstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxElementsStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxElementsStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxElementsStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getMaxElementsStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnknownStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownStatement__Group__0__Impl
	rule__UnknownStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getPrefAssignment_0()); }
(rule__UnknownStatement__PrefAssignment_0)
{ after(grammarAccess.getUnknownStatementAccess().getPrefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownStatement__Group__1__Impl
	rule__UnknownStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getUnknownStatementAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownStatement__Group__2__Impl
	rule__UnknownStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getNamestatAssignment_2()); }
(rule__UnknownStatement__NamestatAssignment_2)
{ after(grammarAccess.getUnknownStatementAccess().getNamestatAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownStatement__Group__3__Impl
	rule__UnknownStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getArgumentAssignment_3()); }
(rule__UnknownStatement__ArgumentAssignment_3)?
{ after(grammarAccess.getUnknownStatementAccess().getArgumentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getAlternatives_4()); }
(rule__UnknownStatement__Alternatives_4)
{ after(grammarAccess.getUnknownStatementAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnknownStatement__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownStatement__Group_4_1__0__Impl
	rule__UnknownStatement__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getLeftCurlyBracketKeyword_4_1_0()); }

	'{' 

{ after(grammarAccess.getUnknownStatementAccess().getLeftCurlyBracketKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownStatement__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownStatement__Group_4_1__1__Impl
	rule__UnknownStatement__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getUnknownsubstatementsAssignment_4_1_1()); }
(rule__UnknownStatement__UnknownsubstatementsAssignment_4_1_1)*
{ after(grammarAccess.getUnknownStatementAccess().getUnknownsubstatementsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownStatement__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownStatement__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getRightCurlyBracketKeyword_4_1_2()); }

	'}' 

{ after(grammarAccess.getUnknownStatementAccess().getRightCurlyBracketKeyword_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnknownSubstatements__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownSubstatements__Group__0__Impl
	rule__UnknownSubstatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getGroup_0()); }
(rule__UnknownSubstatements__Group_0__0)?
{ after(grammarAccess.getUnknownSubstatementsAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownSubstatements__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownSubstatements__Group__1__Impl
	rule__UnknownSubstatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getNamestatAssignment_1()); }
(rule__UnknownSubstatements__NamestatAssignment_1)
{ after(grammarAccess.getUnknownSubstatementsAccess().getNamestatAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownSubstatements__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownSubstatements__Group__2__Impl
	rule__UnknownSubstatements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getArgumentAssignment_2()); }
(rule__UnknownSubstatements__ArgumentAssignment_2)?
{ after(grammarAccess.getUnknownSubstatementsAccess().getArgumentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownSubstatements__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownSubstatements__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getAlternatives_3()); }
(rule__UnknownSubstatements__Alternatives_3)
{ after(grammarAccess.getUnknownSubstatementsAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnknownSubstatements__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownSubstatements__Group_0__0__Impl
	rule__UnknownSubstatements__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getPrefAssignment_0_0()); }
(rule__UnknownSubstatements__PrefAssignment_0_0)
{ after(grammarAccess.getUnknownSubstatementsAccess().getPrefAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownSubstatements__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownSubstatements__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getUnknownSubstatementsAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnknownSubstatements__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownSubstatements__Group_3_1__0__Impl
	rule__UnknownSubstatements__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getLeftCurlyBracketKeyword_3_1_0()); }

	'{' 

{ after(grammarAccess.getUnknownSubstatementsAccess().getLeftCurlyBracketKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownSubstatements__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownSubstatements__Group_3_1__1__Impl
	rule__UnknownSubstatements__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getUnknownsubstatementsAssignment_3_1_1()); }
(rule__UnknownSubstatements__UnknownsubstatementsAssignment_3_1_1)*
{ after(grammarAccess.getUnknownSubstatementsAccess().getUnknownsubstatementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnknownSubstatements__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnknownSubstatements__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getRightCurlyBracketKeyword_3_1_2()); }

	'}' 

{ after(grammarAccess.getUnknownSubstatementsAccess().getRightCurlyBracketKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RangeStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeStatement__Group__0__Impl
	rule__RangeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeStatementAccess().getRangeKeyword_0()); }

	'range' 

{ after(grammarAccess.getRangeStatementAccess().getRangeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeStatement__Group__1__Impl
	rule__RangeStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeStatementAccess().getRangeAssignment_1()); }
(rule__RangeStatement__RangeAssignment_1)
{ after(grammarAccess.getRangeStatementAccess().getRangeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeStatementAccess().getAlternatives_2()); }
(rule__RangeStatement__Alternatives_2)
{ after(grammarAccess.getRangeStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RangeStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeStatement__Group_2_1__0__Impl
	rule__RangeStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getRangeStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeStatement__Group_2_1__1__Impl
	rule__RangeStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeStatementAccess().getRangesubstatementsAssignment_2_1_1()); }
(rule__RangeStatement__RangesubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getRangeStatementAccess().getRangesubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getRangeStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PatternStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternStatement__Group__0__Impl
	rule__PatternStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternStatementAccess().getPatternKeyword_0()); }

	'pattern' 

{ after(grammarAccess.getPatternStatementAccess().getPatternKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternStatement__Group__1__Impl
	rule__PatternStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternStatementAccess().getNameAssignment_1()); }
(rule__PatternStatement__NameAssignment_1)
{ after(grammarAccess.getPatternStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternStatementAccess().getAlternatives_2()); }
(rule__PatternStatement__Alternatives_2)
{ after(grammarAccess.getPatternStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PatternStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternStatement__Group_2_1__0__Impl
	rule__PatternStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getPatternStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternStatement__Group_2_1__1__Impl
	rule__PatternStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternStatementAccess().getPatternsubstatementsAssignment_2_1_1()); }
(rule__PatternStatement__PatternsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getPatternStatementAccess().getPatternsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getPatternStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LengthStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthStatement__Group__0__Impl
	rule__LengthStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthStatementAccess().getLengthKeyword_0()); }

	'length' 

{ after(grammarAccess.getLengthStatementAccess().getLengthKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthStatement__Group__1__Impl
	rule__LengthStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthStatementAccess().getLengthAssignment_1()); }
(rule__LengthStatement__LengthAssignment_1)
{ after(grammarAccess.getLengthStatementAccess().getLengthAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthStatementAccess().getAlternatives_2()); }
(rule__LengthStatement__Alternatives_2)
{ after(grammarAccess.getLengthStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LengthStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthStatement__Group_2_1__0__Impl
	rule__LengthStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getLengthStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthStatement__Group_2_1__1__Impl
	rule__LengthStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthStatementAccess().getLengthsubstatementsAssignment_2_1_1()); }
(rule__LengthStatement__LengthsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getLengthStatementAccess().getLengthsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getLengthStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MustStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MustStatement__Group__0__Impl
	rule__MustStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MustStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustStatementAccess().getMustKeyword_0()); }

	'must' 

{ after(grammarAccess.getMustStatementAccess().getMustKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MustStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MustStatement__Group__1__Impl
	rule__MustStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MustStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustStatementAccess().getArgAssignment_1()); }
(rule__MustStatement__ArgAssignment_1)
{ after(grammarAccess.getMustStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MustStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MustStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MustStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustStatementAccess().getAlternatives_2()); }
(rule__MustStatement__Alternatives_2)
{ after(grammarAccess.getMustStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MustStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MustStatement__Group_2_1__0__Impl
	rule__MustStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MustStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getMustStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MustStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MustStatement__Group_2_1__1__Impl
	rule__MustStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MustStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustStatementAccess().getMustsubstatementsAssignment_2_1_1()); }
(rule__MustStatement__MustsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getMustStatementAccess().getMustsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MustStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MustStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MustStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getMustStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RpcStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RpcStatement__Group__0__Impl
	rule__RpcStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RpcStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcStatementAccess().getRpcKeyword_0()); }

	'rpc' 

{ after(grammarAccess.getRpcStatementAccess().getRpcKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RpcStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RpcStatement__Group__1__Impl
	rule__RpcStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RpcStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcStatementAccess().getNameAssignment_1()); }
(rule__RpcStatement__NameAssignment_1)
{ after(grammarAccess.getRpcStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RpcStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RpcStatement__Group__2__Impl
	rule__RpcStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RpcStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcStatementAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRpcStatementAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RpcStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RpcStatement__Group__3__Impl
	rule__RpcStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RpcStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcStatementAccess().getRpcsubstatementsAssignment_3()); }
(rule__RpcStatement__RpcsubstatementsAssignment_3)*
{ after(grammarAccess.getRpcStatementAccess().getRpcsubstatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RpcStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RpcStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RpcStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcStatementAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRpcStatementAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InputStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputStatement__Group__0__Impl
	rule__InputStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputStatementAccess().getInputKeyword_0()); }

	'input' 

{ after(grammarAccess.getInputStatementAccess().getInputKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputStatement__Group__1__Impl
	rule__InputStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputStatementAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getInputStatementAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputStatement__Group__2__Impl
	rule__InputStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getInputStatementAccess().getInputsubstatementsAssignment_2()); }
(rule__InputStatement__InputsubstatementsAssignment_2)
{ after(grammarAccess.getInputStatementAccess().getInputsubstatementsAssignment_2()); }
)
(
{ before(grammarAccess.getInputStatementAccess().getInputsubstatementsAssignment_2()); }
(rule__InputStatement__InputsubstatementsAssignment_2)*
{ after(grammarAccess.getInputStatementAccess().getInputsubstatementsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputStatementAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getInputStatementAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OutputStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputStatement__Group__0__Impl
	rule__OutputStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputStatementAccess().getOutputKeyword_0()); }

	'output' 

{ after(grammarAccess.getOutputStatementAccess().getOutputKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputStatement__Group__1__Impl
	rule__OutputStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputStatementAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getOutputStatementAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputStatement__Group__2__Impl
	rule__OutputStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOutputStatementAccess().getOutputsubstatementsAssignment_2()); }
(rule__OutputStatement__OutputsubstatementsAssignment_2)
{ after(grammarAccess.getOutputStatementAccess().getOutputsubstatementsAssignment_2()); }
)
(
{ before(grammarAccess.getOutputStatementAccess().getOutputsubstatementsAssignment_2()); }
(rule__OutputStatement__OutputsubstatementsAssignment_2)*
{ after(grammarAccess.getOutputStatementAccess().getOutputsubstatementsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputStatementAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getOutputStatementAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NotificationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotificationStatement__Group__0__Impl
	rule__NotificationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationStatementAccess().getNotificationKeyword_0()); }

	'notification' 

{ after(grammarAccess.getNotificationStatementAccess().getNotificationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotificationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotificationStatement__Group__1__Impl
	rule__NotificationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationStatementAccess().getNameAssignment_1()); }
(rule__NotificationStatement__NameAssignment_1)
{ after(grammarAccess.getNotificationStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotificationStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotificationStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationStatementAccess().getAlternatives_2()); }
(rule__NotificationStatement__Alternatives_2)
{ after(grammarAccess.getNotificationStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NotificationStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotificationStatement__Group_2_1__0__Impl
	rule__NotificationStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getNotificationStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotificationStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotificationStatement__Group_2_1__1__Impl
	rule__NotificationStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationStatementAccess().getNotificationsubstatementsAssignment_2_1_1()); }
(rule__NotificationStatement__NotificationsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getNotificationStatementAccess().getNotificationsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotificationStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotificationStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getNotificationStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ContainerStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainerStatement__Group__0__Impl
	rule__ContainerStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerStatementAccess().getContainerKeyword_0()); }

	'container' 

{ after(grammarAccess.getContainerStatementAccess().getContainerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainerStatement__Group__1__Impl
	rule__ContainerStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerStatementAccess().getNameAssignment_1()); }
(rule__ContainerStatement__NameAssignment_1)
{ after(grammarAccess.getContainerStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainerStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerStatementAccess().getAlternatives_2()); }
(rule__ContainerStatement__Alternatives_2)
{ after(grammarAccess.getContainerStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ContainerStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainerStatement__Group_2_1__0__Impl
	rule__ContainerStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getContainerStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainerStatement__Group_2_1__1__Impl
	rule__ContainerStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerStatementAccess().getContainersubstatementsAssignment_2_1_1()); }
(rule__ContainerStatement__ContainersubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getContainerStatementAccess().getContainersubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainerStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getContainerStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ListStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListStatement__Group__0__Impl
	rule__ListStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListStatementAccess().getListKeyword_0()); }

	'list' 

{ after(grammarAccess.getListStatementAccess().getListKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListStatement__Group__1__Impl
	rule__ListStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListStatementAccess().getNameAssignment_1()); }
(rule__ListStatement__NameAssignment_1)
{ after(grammarAccess.getListStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListStatementAccess().getAlternatives_2()); }
(rule__ListStatement__Alternatives_2)
{ after(grammarAccess.getListStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ListStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListStatement__Group_2_1__0__Impl
	rule__ListStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getListStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListStatement__Group_2_1__1__Impl
	rule__ListStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListStatementAccess().getListsubstatementsAssignment_2_1_1()); }
(rule__ListStatement__ListsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getListStatementAccess().getListsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getListStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GroupingStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingStatement__Group__0__Impl
	rule__GroupingStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingStatementAccess().getGroupingKeyword_0()); }

	'grouping' 

{ after(grammarAccess.getGroupingStatementAccess().getGroupingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingStatement__Group__1__Impl
	rule__GroupingStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingStatementAccess().getNameAssignment_1()); }
(rule__GroupingStatement__NameAssignment_1)
{ after(grammarAccess.getGroupingStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingStatementAccess().getAlternatives_2()); }
(rule__GroupingStatement__Alternatives_2)
{ after(grammarAccess.getGroupingStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GroupingStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingStatement__Group_2_1__0__Impl
	rule__GroupingStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getGroupingStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingStatement__Group_2_1__1__Impl
	rule__GroupingStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingStatementAccess().getGroupingsubstatementsAssignment_2_1_1()); }
(rule__GroupingStatement__GroupingsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getGroupingStatementAccess().getGroupingsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getGroupingStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LeafStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafStatement__Group__0__Impl
	rule__LeafStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafStatementAccess().getLeafKeyword_0()); }

	'leaf' 

{ after(grammarAccess.getLeafStatementAccess().getLeafKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeafStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafStatement__Group__1__Impl
	rule__LeafStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafStatementAccess().getNameAssignment_1()); }
(rule__LeafStatement__NameAssignment_1)
{ after(grammarAccess.getLeafStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeafStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafStatementAccess().getAlternatives_2()); }
(rule__LeafStatement__Alternatives_2)
{ after(grammarAccess.getLeafStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LeafStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafStatement__Group_2_1__0__Impl
	rule__LeafStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getLeafStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeafStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafStatement__Group_2_1__1__Impl
	rule__LeafStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafStatementAccess().getLeafsubstatementsAssignment_2_1_1()); }
(rule__LeafStatement__LeafsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getLeafStatementAccess().getLeafsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeafStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getLeafStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LeafListStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafListStatement__Group__0__Impl
	rule__LeafListStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListStatementAccess().getLeafListKeyword_0()); }

	'leaf-list' 

{ after(grammarAccess.getLeafListStatementAccess().getLeafListKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeafListStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafListStatement__Group__1__Impl
	rule__LeafListStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListStatementAccess().getArgAssignment_1()); }
(rule__LeafListStatement__ArgAssignment_1)
{ after(grammarAccess.getLeafListStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeafListStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafListStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListStatementAccess().getAlternatives_2()); }
(rule__LeafListStatement__Alternatives_2)
{ after(grammarAccess.getLeafListStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LeafListStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafListStatement__Group_2_1__0__Impl
	rule__LeafListStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getLeafListStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeafListStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafListStatement__Group_2_1__1__Impl
	rule__LeafListStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListStatementAccess().getLeaflistsubstatementsAssignment_2_1_1()); }
(rule__LeafListStatement__LeaflistsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getLeafListStatementAccess().getLeaflistsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeafListStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeafListStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getLeafListStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ChoiceStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceStatement__Group__0__Impl
	rule__ChoiceStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceStatementAccess().getChoiceKeyword_0()); }

	'choice' 

{ after(grammarAccess.getChoiceStatementAccess().getChoiceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceStatement__Group__1__Impl
	rule__ChoiceStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceStatementAccess().getNameAssignment_1()); }
(rule__ChoiceStatement__NameAssignment_1)
{ after(grammarAccess.getChoiceStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceStatementAccess().getAlternatives_2()); }
(rule__ChoiceStatement__Alternatives_2)
{ after(grammarAccess.getChoiceStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ChoiceStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceStatement__Group_2_1__0__Impl
	rule__ChoiceStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getChoiceStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceStatement__Group_2_1__1__Impl
	rule__ChoiceStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceStatementAccess().getChoicesubstatementsAssignment_2_1_1()); }
(rule__ChoiceStatement__ChoicesubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getChoiceStatementAccess().getChoicesubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChoiceStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChoiceStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getChoiceStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CaseStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group__0__Impl
	rule__CaseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getCaseStatementAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group__1__Impl
	rule__CaseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getNameAssignment_1()); }
(rule__CaseStatement__NameAssignment_1)
{ after(grammarAccess.getCaseStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getAlternatives_2()); }
(rule__CaseStatement__Alternatives_2)
{ after(grammarAccess.getCaseStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CaseStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group_2_1__0__Impl
	rule__CaseStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getCaseStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group_2_1__1__Impl
	rule__CaseStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getCasesubstatementsAssignment_2_1_1()); }
(rule__CaseStatement__CasesubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getCaseStatementAccess().getCasesubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getCaseStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnyxmlStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyxmlStatement__Group__0__Impl
	rule__AnyxmlStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getAnyXmlKeyword_0()); }

	'any-xml' 

{ after(grammarAccess.getAnyxmlStatementAccess().getAnyXmlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyxmlStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyxmlStatement__Group__1__Impl
	rule__AnyxmlStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getArgAssignment_1()); }
(rule__AnyxmlStatement__ArgAssignment_1)
{ after(grammarAccess.getAnyxmlStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyxmlStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyxmlStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getAlternatives_2()); }
(rule__AnyxmlStatement__Alternatives_2)
{ after(grammarAccess.getAnyxmlStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnyxmlStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyxmlStatement__Group_2_1__0__Impl
	rule__AnyxmlStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getAnyxmlStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyxmlStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyxmlStatement__Group_2_1__1__Impl
	rule__AnyxmlStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getAnyxmlsubstatementsAssignment_2_1_1()); }
(rule__AnyxmlStatement__AnyxmlsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getAnyxmlStatementAccess().getAnyxmlsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyxmlStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyxmlStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getAnyxmlStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UsesStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesStatement__Group__0__Impl
	rule__UsesStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getUsesKeyword_0()); }

	'uses' 

{ after(grammarAccess.getUsesStatementAccess().getUsesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesStatement__Group__1__Impl
	rule__UsesStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getGroup_1()); }
(rule__UsesStatement__Group_1__0)?
{ after(grammarAccess.getUsesStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesStatement__Group__2__Impl
	rule__UsesStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getArgAssignment_2()); }
(rule__UsesStatement__ArgAssignment_2)
{ after(grammarAccess.getUsesStatementAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getAlternatives_3()); }
(rule__UsesStatement__Alternatives_3)
{ after(grammarAccess.getUsesStatementAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UsesStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesStatement__Group_1__0__Impl
	rule__UsesStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getPreAssignment_1_0()); }
(rule__UsesStatement__PreAssignment_1_0)
{ after(grammarAccess.getUsesStatementAccess().getPreAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getUsesStatementAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UsesStatement__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesStatement__Group_3_1__0__Impl
	rule__UsesStatement__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getLeftCurlyBracketKeyword_3_1_0()); }

	'{' 

{ after(grammarAccess.getUsesStatementAccess().getLeftCurlyBracketKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesStatement__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesStatement__Group_3_1__1__Impl
	rule__UsesStatement__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getUsessubstatementsAssignment_3_1_1()); }
(rule__UsesStatement__UsessubstatementsAssignment_3_1_1)*
{ after(grammarAccess.getUsesStatementAccess().getUsessubstatementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesStatement__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesStatement__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getRightCurlyBracketKeyword_3_1_2()); }

	'}' 

{ after(grammarAccess.getUsesStatementAccess().getRightCurlyBracketKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AugmentUsesStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentUsesStatement__Group__0__Impl
	rule__AugmentUsesStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentUsesStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getAugmentKeyword_0()); }

	'augment' 

{ after(grammarAccess.getAugmentUsesStatementAccess().getAugmentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AugmentUsesStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentUsesStatement__Group__1__Impl
	rule__AugmentUsesStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentUsesStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getArgAssignment_1()); }
(rule__AugmentUsesStatement__ArgAssignment_1)
{ after(grammarAccess.getAugmentUsesStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AugmentUsesStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentUsesStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentUsesStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getAlternatives_2()); }
(rule__AugmentUsesStatement__Alternatives_2)
{ after(grammarAccess.getAugmentUsesStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AugmentUsesStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentUsesStatement__Group_2_1__0__Impl
	rule__AugmentUsesStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentUsesStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getAugmentUsesStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AugmentUsesStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentUsesStatement__Group_2_1__1__Impl
	rule__AugmentUsesStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentUsesStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getAugmentsubstatementsAssignment_2_1_1()); }
(rule__AugmentUsesStatement__AugmentsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getAugmentUsesStatementAccess().getAugmentsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AugmentUsesStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentUsesStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentUsesStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getAugmentUsesStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AugmentStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentStatement__Group__0__Impl
	rule__AugmentStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentStatementAccess().getAugmentKeyword_0()); }

	'augment' 

{ after(grammarAccess.getAugmentStatementAccess().getAugmentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AugmentStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentStatement__Group__1__Impl
	rule__AugmentStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentStatementAccess().getArgAssignment_1()); }
(rule__AugmentStatement__ArgAssignment_1)
{ after(grammarAccess.getAugmentStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AugmentStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentStatementAccess().getAlternatives_2()); }
(rule__AugmentStatement__Alternatives_2)
{ after(grammarAccess.getAugmentStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AugmentStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentStatement__Group_2_1__0__Impl
	rule__AugmentStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getAugmentStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AugmentStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentStatement__Group_2_1__1__Impl
	rule__AugmentStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentStatementAccess().getAugmentsubstatementsAssignment_2_1_1()); }
(rule__AugmentStatement__AugmentsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getAugmentStatementAccess().getAugmentsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AugmentStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AugmentStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getAugmentStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RefineStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefineStatement__Group__0__Impl
	rule__RefineStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefineStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineStatementAccess().getRefineKeyword_0()); }

	'refine' 

{ after(grammarAccess.getRefineStatementAccess().getRefineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefineStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefineStatement__Group__1__Impl
	rule__RefineStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefineStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineStatementAccess().getArgAssignment_1()); }
(rule__RefineStatement__ArgAssignment_1)
{ after(grammarAccess.getRefineStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefineStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefineStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefineStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineStatementAccess().getAlternatives_2()); }
(rule__RefineStatement__Alternatives_2)
{ after(grammarAccess.getRefineStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RefineStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefineStatement__Group_2_1__0__Impl
	rule__RefineStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefineStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getRefineStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefineStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefineStatement__Group_2_1__1__Impl
	rule__RefineStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefineStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineStatementAccess().getRefinesubstatementsAssignment_2_1_1()); }
(rule__RefineStatement__RefinesubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getRefineStatementAccess().getRefinesubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefineStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefineStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefineStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getRefineStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeviationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviationStatement__Group__0__Impl
	rule__DeviationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationStatementAccess().getDeviationKeyword_0()); }

	'deviation' 

{ after(grammarAccess.getDeviationStatementAccess().getDeviationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeviationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviationStatement__Group__1__Impl
	rule__DeviationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationStatementAccess().getArgAssignment_1()); }
(rule__DeviationStatement__ArgAssignment_1)
{ after(grammarAccess.getDeviationStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeviationStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviationStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationStatementAccess().getAlternatives_2()); }
(rule__DeviationStatement__Alternatives_2)
{ after(grammarAccess.getDeviationStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeviationStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviationStatement__Group_2_1__0__Impl
	rule__DeviationStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getDeviationStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeviationStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviationStatement__Group_2_1__1__Impl
	rule__DeviationStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationStatementAccess().getDeviationsubstatementsAssignment_2_1_1()); }
(rule__DeviationStatement__DeviationsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getDeviationStatementAccess().getDeviationsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeviationStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviationStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getDeviationStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeviateStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviateStatement__Group__0__Impl
	rule__DeviateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateStatementAccess().getDeviateKeyword_0()); }

	'deviate' 

{ after(grammarAccess.getDeviateStatementAccess().getDeviateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeviateStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviateStatement__Group__1__Impl
	rule__DeviateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateStatementAccess().getArgAssignment_1()); }
(rule__DeviateStatement__ArgAssignment_1)
{ after(grammarAccess.getDeviateStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeviateStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviateStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateStatementAccess().getAlternatives_2()); }
(rule__DeviateStatement__Alternatives_2)
{ after(grammarAccess.getDeviateStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeviateStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviateStatement__Group_2_1__0__Impl
	rule__DeviateStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getDeviateStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeviateStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviateStatement__Group_2_1__1__Impl
	rule__DeviateStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateStatementAccess().getDeviatesubstatementsAssignment_2_1_1()); }
(rule__DeviateStatement__DeviatesubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getDeviateStatementAccess().getDeviatesubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeviateStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeviateStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getDeviateStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExtensionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionStatement__Group__0__Impl
	rule__ExtensionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionStatementAccess().getExtensionKeyword_0()); }

	'extension' 

{ after(grammarAccess.getExtensionStatementAccess().getExtensionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionStatement__Group__1__Impl
	rule__ExtensionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionStatementAccess().getArgAssignment_1()); }
(rule__ExtensionStatement__ArgAssignment_1)
{ after(grammarAccess.getExtensionStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionStatementAccess().getAlternatives_2()); }
(rule__ExtensionStatement__Alternatives_2)
{ after(grammarAccess.getExtensionStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExtensionStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionStatement__Group_2_1__0__Impl
	rule__ExtensionStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getExtensionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionStatement__Group_2_1__1__Impl
	rule__ExtensionStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionStatementAccess().getExtensionsubstatementsAssignment_2_1_1()); }
(rule__ExtensionStatement__ExtensionsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getExtensionStatementAccess().getExtensionsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getExtensionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgumentStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentStatement__Group__0__Impl
	rule__ArgumentStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentStatementAccess().getArgumentKeyword_0()); }

	'argument' 

{ after(grammarAccess.getArgumentStatementAccess().getArgumentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentStatement__Group__1__Impl
	rule__ArgumentStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentStatementAccess().getArgAssignment_1()); }
(rule__ArgumentStatement__ArgAssignment_1)
{ after(grammarAccess.getArgumentStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentStatementAccess().getAlternatives_2()); }
(rule__ArgumentStatement__Alternatives_2)
{ after(grammarAccess.getArgumentStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgumentStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentStatement__Group_2_1__0__Impl
	rule__ArgumentStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getArgumentStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentStatement__Group_2_1__1__Impl
	rule__ArgumentStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentStatementAccess().getArgumentsubstatementsAssignment_2_1_1()); }
(rule__ArgumentStatement__ArgumentsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getArgumentStatementAccess().getArgumentsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getArgumentStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IdentityStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentityStatement__Group__0__Impl
	rule__IdentityStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStatementAccess().getIdentityKeyword_0()); }

	'identity' 

{ after(grammarAccess.getIdentityStatementAccess().getIdentityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentityStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentityStatement__Group__1__Impl
	rule__IdentityStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStatementAccess().getNameAssignment_1()); }
(rule__IdentityStatement__NameAssignment_1)
{ after(grammarAccess.getIdentityStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentityStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentityStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStatementAccess().getAlternatives_2()); }
(rule__IdentityStatement__Alternatives_2)
{ after(grammarAccess.getIdentityStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IdentityStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentityStatement__Group_2_1__0__Impl
	rule__IdentityStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getIdentityStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentityStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentityStatement__Group_2_1__1__Impl
	rule__IdentityStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStatementAccess().getIdentitysubstatementsAssignment_2_1_1()); }
(rule__IdentityStatement__IdentitysubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getIdentityStatementAccess().getIdentitysubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentityStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentityStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getIdentityStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FeatureStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureStatement__Group__0__Impl
	rule__FeatureStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureStatementAccess().getFeatureKeyword_0()); }

	'feature' 

{ after(grammarAccess.getFeatureStatementAccess().getFeatureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureStatement__Group__1__Impl
	rule__FeatureStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureStatementAccess().getNameAssignment_1()); }
(rule__FeatureStatement__NameAssignment_1)
{ after(grammarAccess.getFeatureStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureStatementAccess().getAlternatives_2()); }
(rule__FeatureStatement__Alternatives_2)
{ after(grammarAccess.getFeatureStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FeatureStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureStatement__Group_2_1__0__Impl
	rule__FeatureStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getFeatureStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureStatement__Group_2_1__1__Impl
	rule__FeatureStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureStatementAccess().getFeaturesubstatementsAssignment_2_1_1()); }
(rule__FeatureStatement__FeaturesubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getFeatureStatementAccess().getFeaturesubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getFeatureStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BelongsToStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsToStatement__Group__0__Impl
	rule__BelongsToStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsToStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToStatementAccess().getBelongsToKeyword_0()); }

	'belongs-to' 

{ after(grammarAccess.getBelongsToStatementAccess().getBelongsToKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BelongsToStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsToStatement__Group__1__Impl
	rule__BelongsToStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsToStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToStatementAccess().getNameAssignment_1()); }
(rule__BelongsToStatement__NameAssignment_1)
{ after(grammarAccess.getBelongsToStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BelongsToStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsToStatement__Group__2__Impl
	rule__BelongsToStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsToStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToStatementAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getBelongsToStatementAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BelongsToStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsToStatement__Group__3__Impl
	rule__BelongsToStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsToStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToStatementAccess().getBelongstosubstatementAssignment_3()); }
(rule__BelongsToStatement__BelongstosubstatementAssignment_3)*
{ after(grammarAccess.getBelongsToStatementAccess().getBelongstosubstatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BelongsToStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsToStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsToStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToStatementAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getBelongsToStatementAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypedefStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedefStatement__Group__0__Impl
	rule__TypedefStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefStatementAccess().getTypedefKeyword_0()); }

	'typedef' 

{ after(grammarAccess.getTypedefStatementAccess().getTypedefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedefStatement__Group__1__Impl
	rule__TypedefStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefStatementAccess().getNameAssignment_1()); }
(rule__TypedefStatement__NameAssignment_1)
{ after(grammarAccess.getTypedefStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedefStatement__Group__2__Impl
	rule__TypedefStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefStatementAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getTypedefStatementAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedefStatement__Group__3__Impl
	rule__TypedefStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefStatementAccess().getTypedefsubstatemnetAssignment_3()); }
(rule__TypedefStatement__TypedefsubstatemnetAssignment_3)*
{ after(grammarAccess.getTypedefStatementAccess().getTypedefsubstatemnetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedefStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefStatementAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getTypedefStatementAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group__0__Impl
	rule__TypeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getTypeStatementAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group__1__Impl
	rule__TypeStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getAlternatives_1()); }
(rule__TypeStatement__Alternatives_1)
{ after(grammarAccess.getTypeStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getAlternatives_2()); }
(rule__TypeStatement__Alternatives_2)
{ after(grammarAccess.getTypeStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeStatement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group_1_1__0__Impl
	rule__TypeStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getGroup_1_1_0()); }
(rule__TypeStatement__Group_1_1_0__0)?
{ after(grammarAccess.getTypeStatementAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeStatement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getImporttypeAssignment_1_1_1()); }
(rule__TypeStatement__ImporttypeAssignment_1_1_1)
{ after(grammarAccess.getTypeStatementAccess().getImporttypeAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeStatement__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group_1_1_0__0__Impl
	rule__TypeStatement__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getPreAssignment_1_1_0_0()); }
(rule__TypeStatement__PreAssignment_1_1_0_0)
{ after(grammarAccess.getTypeStatementAccess().getPreAssignment_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeStatement__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getColonKeyword_1_1_0_1()); }

	':' 

{ after(grammarAccess.getTypeStatementAccess().getColonKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group_2_1__0__Impl
	rule__TypeStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getTypeStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group_2_1__1__Impl
	rule__TypeStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getTypesubstatementsAssignment_2_1_1()); }
(rule__TypeStatement__TypesubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getTypeStatementAccess().getTypesubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getTypeStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStatement__Group__0__Impl
	rule__BitStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStatementAccess().getBitKeyword_0()); }

	'bit' 

{ after(grammarAccess.getBitStatementAccess().getBitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStatement__Group__1__Impl
	rule__BitStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStatementAccess().getNameAssignment_1()); }
(rule__BitStatement__NameAssignment_1)
{ after(grammarAccess.getBitStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStatementAccess().getAlternatives_2()); }
(rule__BitStatement__Alternatives_2)
{ after(grammarAccess.getBitStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStatement__Group_2_1__0__Impl
	rule__BitStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getBitStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStatement__Group_2_1__1__Impl
	rule__BitStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStatementAccess().getBitsubstatementsAssignment_2_1_1()); }
(rule__BitStatement__BitsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getBitStatementAccess().getBitsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getBitStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumStatement__Group__0__Impl
	rule__EnumStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumStatementAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumStatementAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumStatement__Group__1__Impl
	rule__EnumStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumStatementAccess().getNameAssignment_1()); }
(rule__EnumStatement__NameAssignment_1)
{ after(grammarAccess.getEnumStatementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumStatementAccess().getAlternatives_2()); }
(rule__EnumStatement__Alternatives_2)
{ after(grammarAccess.getEnumStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumStatement__Group_2_1__0__Impl
	rule__EnumStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getEnumStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumStatement__Group_2_1__1__Impl
	rule__EnumStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumStatementAccess().getEnumsubstatementsAssignment_2_1_1()); }
(rule__EnumStatement__EnumsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getEnumStatementAccess().getEnumsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getEnumStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__0__Impl
	rule__ImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__1__Impl
	rule__ImportStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportURIAssignment_1()); }
(rule__ImportStatement__ImportURIAssignment_1)
{ after(grammarAccess.getImportStatementAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getAlternatives_2()); }
(rule__ImportStatement__Alternatives_2)
{ after(grammarAccess.getImportStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group_2_1__0__Impl
	rule__ImportStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getImportStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group_2_1__1__Impl
	rule__ImportStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportsubstatementsAssignment_2_1_1()); }
(rule__ImportStatement__ImportsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getImportStatementAccess().getImportsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getImportStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IncludeStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeStatement__Group__0__Impl
	rule__IncludeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeStatementAccess().getIncludeKeyword_0()); }

	'include' 

{ after(grammarAccess.getIncludeStatementAccess().getIncludeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeStatement__Group__1__Impl
	rule__IncludeStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeStatementAccess().getImportURIAssignment_1()); }
(rule__IncludeStatement__ImportURIAssignment_1)
{ after(grammarAccess.getIncludeStatementAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeStatementAccess().getAlternatives_2()); }
(rule__IncludeStatement__Alternatives_2)
{ after(grammarAccess.getIncludeStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IncludeStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeStatement__Group_2_1__0__Impl
	rule__IncludeStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getIncludeStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeStatement__Group_2_1__1__Impl
	rule__IncludeStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeStatementAccess().getIncludesubstatementsAssignment_2_1_1()); }
(rule__IncludeStatement__IncludesubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getIncludeStatementAccess().getIncludesubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getIncludeStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhenStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenStatement__Group__0__Impl
	rule__WhenStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenStatementAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getWhenStatementAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenStatement__Group__1__Impl
	rule__WhenStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenStatementAccess().getArgAssignment_1()); }
(rule__WhenStatement__ArgAssignment_1)
{ after(grammarAccess.getWhenStatementAccess().getArgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenStatementAccess().getAlternatives_2()); }
(rule__WhenStatement__Alternatives_2)
{ after(grammarAccess.getWhenStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhenStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenStatement__Group_2_1__0__Impl
	rule__WhenStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getWhenStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenStatement__Group_2_1__1__Impl
	rule__WhenStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenStatementAccess().getWhensubstatementsAssignment_2_1_1()); }
(rule__WhenStatement__WhensubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getWhenStatementAccess().getWhensubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getWhenStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RevisionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionStatement__Group__0__Impl
	rule__RevisionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionStatementAccess().getRevisionKeyword_0()); }

	'revision' 

{ after(grammarAccess.getRevisionStatementAccess().getRevisionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RevisionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionStatement__Group__1__Impl
	rule__RevisionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionStatementAccess().getDateAssignment_1()); }
(rule__RevisionStatement__DateAssignment_1)
{ after(grammarAccess.getRevisionStatementAccess().getDateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RevisionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionStatementAccess().getAlternatives_2()); }
(rule__RevisionStatement__Alternatives_2)
{ after(grammarAccess.getRevisionStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RevisionStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionStatement__Group_2_1__0__Impl
	rule__RevisionStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getRevisionStatementAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RevisionStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionStatement__Group_2_1__1__Impl
	rule__RevisionStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionStatementAccess().getRevisionsubstatementsAssignment_2_1_1()); }
(rule__RevisionStatement__RevisionsubstatementsAssignment_2_1_1)*
{ after(grammarAccess.getRevisionStatementAccess().getRevisionsubstatementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RevisionStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RevisionStatement__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getRevisionStatementAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CUSTOMSTRING__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CUSTOMSTRING__Group__0__Impl
	rule__CUSTOMSTRING__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CUSTOMSTRING__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCUSTOMSTRINGAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getCUSTOMSTRINGAccess().getSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CUSTOMSTRING__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CUSTOMSTRING__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CUSTOMSTRING__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCUSTOMSTRINGAccess().getGroup_1()); }
(rule__CUSTOMSTRING__Group_1__0)*
{ after(grammarAccess.getCUSTOMSTRINGAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CUSTOMSTRING__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CUSTOMSTRING__Group_1__0__Impl
	rule__CUSTOMSTRING__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CUSTOMSTRING__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCUSTOMSTRINGAccess().getPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getCUSTOMSTRINGAccess().getPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CUSTOMSTRING__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CUSTOMSTRING__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CUSTOMSTRING__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCUSTOMSTRINGAccess().getSTRINGTerminalRuleCall_1_1()); }
	RULE_STRING
{ after(grammarAccess.getCUSTOMSTRINGAccess().getSTRINGTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__STRINGARG2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRINGARG2__Group__0__Impl
	rule__STRINGARG2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__STRINGARG2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRINGARG2Access().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getSTRINGARG2Access().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRINGARG2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRINGARG2__Group__1__Impl
	rule__STRINGARG2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__STRINGARG2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRINGARG2Access().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getSTRINGARG2Access().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRINGARG2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRINGARG2__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__STRINGARG2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRINGARG2Access().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getSTRINGARG2Access().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Module__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getModuleAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getStatementsModuleStatementParserRuleCall_3_0()); }
	ruleModuleStatement{ after(grammarAccess.getModuleAccess().getStatementsModuleStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubModule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubModuleAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getSubModuleAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubModule__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubModuleAccess().getStatementsSubmoduleStatementParserRuleCall_3_0()); }
	ruleSubmoduleStatement{ after(grammarAccess.getSubModuleAccess().getStatementsSubmoduleStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__YangVersionStatement__VersionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangVersionStatementAccess().getVersionSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getYangVersionStatementAccess().getVersionSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__YangVersionStatement__YangversionunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYangVersionStatementAccess().getYangversionunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getYangVersionStatementAccess().getYangversionunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationStatement__OrganizationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrganizationStatementAccess().getOrganizationSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getOrganizationStatementAccess().getOrganizationSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrganizationStatement__OrganizationunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrganizationStatementAccess().getOrganizationunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getOrganizationStatementAccess().getOrganizationunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContactStatement__ContactAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContactStatementAccess().getContactSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getContactStatementAccess().getContactSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContactStatement__ContactunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContactStatementAccess().getContactunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getContactStatementAccess().getContactunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionStatement__DescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionStatementAccess().getDescriptionSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getDescriptionStatementAccess().getDescriptionSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionStatement__DescriptionunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionStatementAccess().getDescriptionunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getDescriptionStatementAccess().getDescriptionunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__ReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getReferenceSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getReferenceStatementAccess().getReferenceSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceStatement__ReferenceunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceStatementAccess().getReferenceunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getReferenceStatementAccess().getReferenceunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceStatement__UriAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceStatementAccess().getUriSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getNamespaceStatementAccess().getUriSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceStatement__NamespaceunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceStatementAccess().getNamespaceunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getNamespaceStatementAccess().getNamespaceunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getPrefixStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixStatement__PrefixunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixStatementAccess().getPrefixunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getPrefixStatementAccess().getPrefixunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequireInstanceStatement__RequireAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getRequireSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getRequireInstanceStatementAccess().getRequireSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequireInstanceStatement__RequireunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireInstanceStatementAccess().getRequireunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getRequireInstanceStatementAccess().getRequireunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathStatement__PathAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathStatementAccess().getPathSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getPathStatementAccess().getPathSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathStatement__PathunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathStatementAccess().getPathunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getPathStatementAccess().getPathunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionStatement__IntargAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionStatementAccess().getIntargSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getPositionStatementAccess().getIntargSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionStatement__PositionunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionStatementAccess().getPositionunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getPositionStatementAccess().getPositionunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueStatement__IntargAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueStatementAccess().getIntargSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getValueStatementAccess().getIntargSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueStatement__ValueunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueStatementAccess().getValueunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getValueStatementAccess().getValueunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorAppTagStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getErrorAppTagStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorAppTagStatement__ErroraunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorAppTagStatementAccess().getErroraunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getErrorAppTagStatementAccess().getErroraunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorMessageStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getErrorMessageStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorMessageStatement__ErrormunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorMessageStatementAccess().getErrormunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getErrorMessageStatementAccess().getErrormunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitsStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getUnitsStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsStatement__UnitsunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitsStatementAccess().getUnitsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getUnitsStatementAccess().getUnitsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getDefaultStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStatement__DefaultunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultStatementAccess().getDefaultunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getDefaultStatementAccess().getDefaultunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatusStatement__StatusAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatusStatementAccess().getStatusSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getStatusStatementAccess().getStatusSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatusStatement__StatusunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatusStatementAccess().getStatusunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getStatusStatementAccess().getStatusunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionDateStatement__DateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getDateSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getRevisionDateStatementAccess().getDateSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionDateStatement__RevisiondateunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionDateStatementAccess().getRevisiondateunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getRevisionDateStatementAccess().getRevisiondateunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getUniqueStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UniqueStatement__UniqueunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniqueStatementAccess().getUniqueunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getUniqueStatementAccess().getUniqueunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getArgAlternatives_1_0()); }
(rule__KeyStatement__ArgAlternatives_1_0)
{ after(grammarAccess.getKeyStatementAccess().getArgAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStatement__KeyunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStatementAccess().getKeyunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getKeyStatementAccess().getKeyunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedbyStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getOrderedbyStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedbyStatement__OrderedbyunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderedbyStatementAccess().getOrderedbyunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getOrderedbyStatementAccess().getOrderedbyunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresenceStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresenceStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getPresenceStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresenceStatement__PresenceunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresenceStatementAccess().getPresenceunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getPresenceStatementAccess().getPresenceunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryStatement__BoolargAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryStatementAccess().getBoolargSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getMandatoryStatementAccess().getBoolargSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryStatement__MandatoryunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryStatementAccess().getMandatoryunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getMandatoryStatementAccess().getMandatoryunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigStatement__BoolargAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigStatementAccess().getBoolargSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getConfigStatementAccess().getBoolargSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigStatement__ConfigunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigStatementAccess().getConfigunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getConfigStatementAccess().getConfigunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FractionDigitsStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getFractionDigitsStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FractionDigitsStatement__FractiondigitsunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFractionDigitsStatementAccess().getFractiondigitsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getFractionDigitsStatementAccess().getFractiondigitsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__PrefAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getPrefSTRINGARGParserRuleCall_1_0_0()); }
	ruleSTRINGARG{ after(grammarAccess.getIfFeatureStatementAccess().getPrefSTRINGARGParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__IdentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getIdentFeatureStatementCrossReference_2_0()); }
(
{ before(grammarAccess.getIfFeatureStatementAccess().getIdentFeatureStatementIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getIfFeatureStatementAccess().getIdentFeatureStatementIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getIfFeatureStatementAccess().getIdentFeatureStatementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfFeatureStatement__IffeatureunknownstatementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfFeatureStatementAccess().getIffeatureunknownstatementsUnknownStatementParserRuleCall_3_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getIfFeatureStatementAccess().getIffeatureunknownstatementsUnknownStatementParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__PrefAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getPrefSTRINGARGParserRuleCall_1_0_0()); }
	ruleSTRINGARG{ after(grammarAccess.getBaseStatementAccess().getPrefSTRINGARGParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__IdentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getIdentIdentityStatementCrossReference_2_0()); }
(
{ before(grammarAccess.getBaseStatementAccess().getIdentIdentityStatementIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getBaseStatementAccess().getIdentIdentityStatementIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getBaseStatementAccess().getIdentIdentityStatementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseStatement__BaseunknownstatementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseStatementAccess().getBaseunknownstatementsUnknownStatementParserRuleCall_3_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getBaseStatementAccess().getBaseunknownstatementsUnknownStatementParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__YinElementStatement__BoolargAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYinElementStatementAccess().getBoolargSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getYinElementStatementAccess().getBoolargSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__YinElementStatement__YinelementunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYinElementStatementAccess().getYinelementunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getYinElementStatementAccess().getYinelementunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinElementsStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinElementsStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getMinElementsStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinElementsStatement__MinelementsunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinElementsStatementAccess().getMinelementsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getMinElementsStatementAccess().getMinelementsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxElementsStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getMaxElementsStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxElementsStatement__MaxelementsunknownstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxElementsStatementAccess().getMaxelementsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
	ruleUnknownStatement{ after(grammarAccess.getMaxElementsStatementAccess().getMaxelementsunknownstatementsUnknownStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__PrefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getPrefSTRINGARGParserRuleCall_0_0()); }
	ruleSTRINGARG{ after(grammarAccess.getUnknownStatementAccess().getPrefSTRINGARGParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__NamestatAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getNamestatSTRINGARGParserRuleCall_2_0()); }
	ruleSTRINGARG{ after(grammarAccess.getUnknownStatementAccess().getNamestatSTRINGARGParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__ArgumentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getArgumentSTRINGARGParserRuleCall_3_0()); }
	ruleSTRINGARG{ after(grammarAccess.getUnknownStatementAccess().getArgumentSTRINGARGParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownStatement__UnknownsubstatementsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownStatementAccess().getUnknownsubstatementsUnknownSubstatementsParserRuleCall_4_1_1_0()); }
	ruleUnknownSubstatements{ after(grammarAccess.getUnknownStatementAccess().getUnknownsubstatementsUnknownSubstatementsParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__PrefAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getPrefSTRINGARGParserRuleCall_0_0_0()); }
	ruleSTRINGARG{ after(grammarAccess.getUnknownSubstatementsAccess().getPrefSTRINGARGParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__NamestatAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getNamestatSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getUnknownSubstatementsAccess().getNamestatSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__ArgumentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getArgumentSTRINGARGParserRuleCall_2_0()); }
	ruleSTRINGARG{ after(grammarAccess.getUnknownSubstatementsAccess().getArgumentSTRINGARGParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnknownSubstatements__UnknownsubstatementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnknownSubstatementsAccess().getUnknownsubstatementsUnknownSubstatementsParserRuleCall_3_1_1_0()); }
	ruleUnknownSubstatements{ after(grammarAccess.getUnknownSubstatementsAccess().getUnknownsubstatementsUnknownSubstatementsParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeStatement__RangeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeStatementAccess().getRangeSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getRangeStatementAccess().getRangeSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeStatement__RangesubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeStatementAccess().getRangesubstatementsMultipleSubstatementParserRuleCall_2_1_1_0()); }
	ruleMultipleSubstatement{ after(grammarAccess.getRangeStatementAccess().getRangesubstatementsMultipleSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getPatternStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternStatement__PatternsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternStatementAccess().getPatternsubstatementsMultipleSubstatementParserRuleCall_2_1_1_0()); }
	ruleMultipleSubstatement{ after(grammarAccess.getPatternStatementAccess().getPatternsubstatementsMultipleSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LengthStatement__LengthAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthStatementAccess().getLengthSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getLengthStatementAccess().getLengthSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LengthStatement__LengthsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthStatementAccess().getLengthsubstatementsMultipleSubstatementParserRuleCall_2_1_1_0()); }
	ruleMultipleSubstatement{ after(grammarAccess.getLengthStatementAccess().getLengthsubstatementsMultipleSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MustStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getMustStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MustStatement__MustsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustStatementAccess().getMustsubstatementsMultipleSubstatementParserRuleCall_2_1_1_0()); }
	ruleMultipleSubstatement{ after(grammarAccess.getMustStatementAccess().getMustsubstatementsMultipleSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RpcStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getRpcStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RpcStatement__RpcsubstatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcStatementAccess().getRpcsubstatementsRpcSubstatementParserRuleCall_3_0()); }
	ruleRpcSubstatement{ after(grammarAccess.getRpcStatementAccess().getRpcsubstatementsRpcSubstatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputStatement__InputsubstatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputStatementAccess().getInputsubstatementsInputSubstatementParserRuleCall_2_0()); }
	ruleInputSubstatement{ after(grammarAccess.getInputStatementAccess().getInputsubstatementsInputSubstatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__OutputsubstatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputStatementAccess().getOutputsubstatementsOutputSubstatementParserRuleCall_2_0()); }
	ruleOutputSubstatement{ after(grammarAccess.getOutputStatementAccess().getOutputsubstatementsOutputSubstatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getNotificationStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotificationStatement__NotificationsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotificationStatementAccess().getNotificationsubstatementsNotificationSubstatementParserRuleCall_2_1_1_0()); }
	ruleNotificationSubstatement{ after(grammarAccess.getNotificationStatementAccess().getNotificationsubstatementsNotificationSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getContainerStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerStatement__ContainersubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerStatementAccess().getContainersubstatementsContainerSubstatementParserRuleCall_2_1_1_0()); }
	ruleContainerSubstatement{ after(grammarAccess.getContainerStatementAccess().getContainersubstatementsContainerSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getListStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListStatement__ListsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListStatementAccess().getListsubstatementsListSubstatementParserRuleCall_2_1_1_0()); }
	ruleListSubstatement{ after(grammarAccess.getListStatementAccess().getListsubstatementsListSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getGroupingStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingStatement__GroupingsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingStatementAccess().getGroupingsubstatementsGroupingSubstatementParserRuleCall_2_1_1_0()); }
	ruleGroupingSubstatement{ after(grammarAccess.getGroupingStatementAccess().getGroupingsubstatementsGroupingSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeafStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getLeafStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeafStatement__LeafsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafStatementAccess().getLeafsubstatementsLeafSubstatementParserRuleCall_2_1_1_0()); }
	ruleLeafSubstatement{ after(grammarAccess.getLeafStatementAccess().getLeafsubstatementsLeafSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getLeafListStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeafListStatement__LeaflistsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeafListStatementAccess().getLeaflistsubstatementsLeafListSubstatementParserRuleCall_2_1_1_0()); }
	ruleLeafListSubstatement{ after(grammarAccess.getLeafListStatementAccess().getLeaflistsubstatementsLeafListSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getChoiceStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceStatement__ChoicesubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceStatementAccess().getChoicesubstatementsChoiceSubstatementParserRuleCall_2_1_1_0()); }
	ruleChoiceSubstatement{ after(grammarAccess.getChoiceStatementAccess().getChoicesubstatementsChoiceSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getCaseStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__CasesubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseStatementAccess().getCasesubstatementsCaseSubstatementParserRuleCall_2_1_1_0()); }
	ruleCaseSubstatement{ after(grammarAccess.getCaseStatementAccess().getCasesubstatementsCaseSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getAnyxmlStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyxmlStatement__AnyxmlsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyxmlStatementAccess().getAnyxmlsubstatementsAnyxmlSubstatementParserRuleCall_2_1_1_0()); }
	ruleAnyxmlSubstatement{ after(grammarAccess.getAnyxmlStatementAccess().getAnyxmlsubstatementsAnyxmlSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__PreAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getPreSTRINGARGParserRuleCall_1_0_0()); }
	ruleSTRINGARG{ after(grammarAccess.getUsesStatementAccess().getPreSTRINGARGParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getArgGroupingStatementCrossReference_2_0()); }
(
{ before(grammarAccess.getUsesStatementAccess().getArgGroupingStatementIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getUsesStatementAccess().getArgGroupingStatementIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getUsesStatementAccess().getArgGroupingStatementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UsesStatement__UsessubstatementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesStatementAccess().getUsessubstatementsUsesSubstatementParserRuleCall_3_1_1_0()); }
	ruleUsesSubstatement{ after(grammarAccess.getUsesStatementAccess().getUsessubstatementsUsesSubstatementParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentUsesStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getAugmentUsesStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentUsesStatement__AugmentsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentUsesStatementAccess().getAugmentsubstatementsAugmentSubstatementParserRuleCall_2_1_1_0()); }
	ruleAugmentSubstatement{ after(grammarAccess.getAugmentUsesStatementAccess().getAugmentsubstatementsAugmentSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getAugmentStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AugmentStatement__AugmentsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAugmentStatementAccess().getAugmentsubstatementsAugmentSubstatementParserRuleCall_2_1_1_0()); }
	ruleAugmentSubstatement{ after(grammarAccess.getAugmentStatementAccess().getAugmentsubstatementsAugmentSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefineStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getRefineStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefineStatement__RefinesubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefineStatementAccess().getRefinesubstatementsRefineSubstatementParserRuleCall_2_1_1_0()); }
	ruleRefineSubstatement{ after(grammarAccess.getRefineStatementAccess().getRefinesubstatementsRefineSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getDeviationStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeviationStatement__DeviationsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviationStatementAccess().getDeviationsubstatementsDeviationSubstatementParserRuleCall_2_1_1_0()); }
	ruleDeviationSubstatement{ after(grammarAccess.getDeviationStatementAccess().getDeviationsubstatementsDeviationSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getDeviateStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeviateStatement__DeviatesubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviateStatementAccess().getDeviatesubstatementsDeviateSubstatementParserRuleCall_2_1_1_0()); }
	ruleDeviateSubstatement{ after(grammarAccess.getDeviateStatementAccess().getDeviatesubstatementsDeviateSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getExtensionStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionStatement__ExtensionsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionStatementAccess().getExtensionsubstatementsExtensionSubstatementParserRuleCall_2_1_1_0()); }
	ruleExtensionSubstatement{ after(grammarAccess.getExtensionStatementAccess().getExtensionsubstatementsExtensionSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getArgumentStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentStatement__ArgumentsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentStatementAccess().getArgumentsubstatementsArgumentSubstatementParserRuleCall_2_1_1_0()); }
	ruleArgumentSubstatement{ after(grammarAccess.getArgumentStatementAccess().getArgumentsubstatementsArgumentSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getIdentityStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStatement__IdentitysubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStatementAccess().getIdentitysubstatementsIdentitySubstatementParserRuleCall_2_1_1_0()); }
	ruleIdentitySubstatement{ after(grammarAccess.getIdentityStatementAccess().getIdentitysubstatementsIdentitySubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getFeatureStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureStatement__FeaturesubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureStatementAccess().getFeaturesubstatementsFeatureSubstatementParserRuleCall_2_1_1_0()); }
	ruleFeatureSubstatement{ after(grammarAccess.getFeatureStatementAccess().getFeaturesubstatementsFeatureSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsToStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getBelongsToStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsToStatement__BelongstosubstatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToStatementAccess().getBelongstosubstatementBelongsToSubstatementParserRuleCall_3_0()); }
	ruleBelongsToSubstatement{ after(grammarAccess.getBelongsToStatementAccess().getBelongstosubstatementBelongsToSubstatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getTypedefStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefStatement__TypedefsubstatemnetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefStatementAccess().getTypedefsubstatemnetTypedefSubstatementParserRuleCall_3_0()); }
	ruleTypedefSubstatement{ after(grammarAccess.getTypedefStatementAccess().getTypedefsubstatemnetTypedefSubstatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__TypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getTypeBuiltInTypeParserRuleCall_1_0_0()); }
	ruleBuiltInType{ after(grammarAccess.getTypeStatementAccess().getTypeBuiltInTypeParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__PreAssignment_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getPreSTRINGARGParserRuleCall_1_1_0_0_0()); }
	ruleSTRINGARG{ after(grammarAccess.getTypeStatementAccess().getPreSTRINGARGParserRuleCall_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__ImporttypeAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getImporttypeTypedefStatementCrossReference_1_1_1_0()); }
(
{ before(grammarAccess.getTypeStatementAccess().getImporttypeTypedefStatementIDTerminalRuleCall_1_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeStatementAccess().getImporttypeTypedefStatementIDTerminalRuleCall_1_1_1_0_1()); }
)
{ after(grammarAccess.getTypeStatementAccess().getImporttypeTypedefStatementCrossReference_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStatement__TypesubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStatementAccess().getTypesubstatementsTypeSubStatementParserRuleCall_2_1_1_0()); }
	ruleTypeSubStatement{ after(grammarAccess.getTypeStatementAccess().getTypesubstatementsTypeSubStatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getBitStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStatement__BitsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStatementAccess().getBitsubstatementsBitSubstatementParserRuleCall_2_1_1_0()); }
	ruleBitSubstatement{ after(grammarAccess.getBitStatementAccess().getBitsubstatementsBitSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumStatement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getEnumStatementAccess().getNameSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumStatement__EnumsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumStatementAccess().getEnumsubstatementsEnumSubstatementParserRuleCall_2_1_1_0()); }
	ruleEnumSubstatement{ after(grammarAccess.getEnumStatementAccess().getEnumsubstatementsEnumSubstatementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportURISTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getImportStatementAccess().getImportURISTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportsubstatementsImportSubstatementsParserRuleCall_2_1_1_0()); }
	ruleImportSubstatements{ after(grammarAccess.getImportStatementAccess().getImportsubstatementsImportSubstatementsParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeStatementAccess().getImportURISTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getIncludeStatementAccess().getImportURISTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__IncludesubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeStatementAccess().getIncludesubstatementsIncludeSubstatementsParserRuleCall_2_1_1_0()); }
	ruleIncludeSubstatements{ after(grammarAccess.getIncludeStatementAccess().getIncludesubstatementsIncludeSubstatementsParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__ArgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getWhenStatementAccess().getArgSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__WhensubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenStatementAccess().getWhensubstatementsWhenSubstatementsParserRuleCall_2_1_1_0()); }
	ruleWhenSubstatements{ after(grammarAccess.getWhenStatementAccess().getWhensubstatementsWhenSubstatementsParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionStatement__DateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionStatementAccess().getDateSTRINGARGParserRuleCall_1_0()); }
	ruleSTRINGARG{ after(grammarAccess.getRevisionStatementAccess().getDateSTRINGARGParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RevisionStatement__RevisionsubstatementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRevisionStatementAccess().getRevisionsubstatementsRevisionSubstatementsParserRuleCall_2_1_1_0()); }
	ruleRevisionSubstatements{ after(grammarAccess.getRevisionStatementAccess().getRevisionsubstatementsRevisionSubstatementsParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInType__BtypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInTypeAccess().getBtypeAlternatives_0()); }
(rule__BuiltInType__BtypeAlternatives_0)
{ after(grammarAccess.getBuiltInTypeAccess().getBtypeAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_STRING : ('"' ( options {greedy=false;} : . )*'"'|'\'' ( options {greedy=false;} : . )*'\'');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'-'|'.'|'0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


